// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: app/data/v1/data.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Viam.App.Data.V1 {
  /// <summary>
  /// DataService is used to query robot data.
  /// </summary>
  public static partial class DataService
  {
    static readonly string __ServiceName = "viam.app.data.v1.DataService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.TabularDataByFilterRequest> __Marshaller_viam_app_data_v1_TabularDataByFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.TabularDataByFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.TabularDataByFilterResponse> __Marshaller_viam_app_data_v1_TabularDataByFilterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.TabularDataByFilterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.TabularDataBySQLRequest> __Marshaller_viam_app_data_v1_TabularDataBySQLRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.TabularDataBySQLRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.TabularDataBySQLResponse> __Marshaller_viam_app_data_v1_TabularDataBySQLResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.TabularDataBySQLResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.TabularDataByMQLRequest> __Marshaller_viam_app_data_v1_TabularDataByMQLRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.TabularDataByMQLRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.TabularDataByMQLResponse> __Marshaller_viam_app_data_v1_TabularDataByMQLResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.TabularDataByMQLResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.ExportTabularDataRequest> __Marshaller_viam_app_data_v1_ExportTabularDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.ExportTabularDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.ExportTabularDataResponse> __Marshaller_viam_app_data_v1_ExportTabularDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.ExportTabularDataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.GetLatestTabularDataRequest> __Marshaller_viam_app_data_v1_GetLatestTabularDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.GetLatestTabularDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.GetLatestTabularDataResponse> __Marshaller_viam_app_data_v1_GetLatestTabularDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.GetLatestTabularDataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.BinaryDataByFilterRequest> __Marshaller_viam_app_data_v1_BinaryDataByFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.BinaryDataByFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.BinaryDataByFilterResponse> __Marshaller_viam_app_data_v1_BinaryDataByFilterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.BinaryDataByFilterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.BinaryDataByIDsRequest> __Marshaller_viam_app_data_v1_BinaryDataByIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.BinaryDataByIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.BinaryDataByIDsResponse> __Marshaller_viam_app_data_v1_BinaryDataByIDsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.BinaryDataByIDsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.DeleteTabularDataRequest> __Marshaller_viam_app_data_v1_DeleteTabularDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.DeleteTabularDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.DeleteTabularDataResponse> __Marshaller_viam_app_data_v1_DeleteTabularDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.DeleteTabularDataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest> __Marshaller_viam_app_data_v1_DeleteBinaryDataByFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse> __Marshaller_viam_app_data_v1_DeleteBinaryDataByFilterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest> __Marshaller_viam_app_data_v1_DeleteBinaryDataByIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse> __Marshaller_viam_app_data_v1_DeleteBinaryDataByIDsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest> __Marshaller_viam_app_data_v1_AddTagsToBinaryDataByIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse> __Marshaller_viam_app_data_v1_AddTagsToBinaryDataByIDsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest> __Marshaller_viam_app_data_v1_AddTagsToBinaryDataByFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse> __Marshaller_viam_app_data_v1_AddTagsToBinaryDataByFilterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest> __Marshaller_viam_app_data_v1_RemoveTagsFromBinaryDataByIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse> __Marshaller_viam_app_data_v1_RemoveTagsFromBinaryDataByIDsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest> __Marshaller_viam_app_data_v1_RemoveTagsFromBinaryDataByFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse> __Marshaller_viam_app_data_v1_RemoveTagsFromBinaryDataByFilterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.TagsByFilterRequest> __Marshaller_viam_app_data_v1_TagsByFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.TagsByFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.TagsByFilterResponse> __Marshaller_viam_app_data_v1_TagsByFilterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.TagsByFilterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest> __Marshaller_viam_app_data_v1_AddBoundingBoxToImageByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse> __Marshaller_viam_app_data_v1_AddBoundingBoxToImageByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest> __Marshaller_viam_app_data_v1_RemoveBoundingBoxFromImageByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse> __Marshaller_viam_app_data_v1_RemoveBoundingBoxFromImageByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest> __Marshaller_viam_app_data_v1_BoundingBoxLabelsByFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse> __Marshaller_viam_app_data_v1_BoundingBoxLabelsByFilterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.UpdateBoundingBoxRequest> __Marshaller_viam_app_data_v1_UpdateBoundingBoxRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.UpdateBoundingBoxRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.UpdateBoundingBoxResponse> __Marshaller_viam_app_data_v1_UpdateBoundingBoxResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.UpdateBoundingBoxResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.GetDatabaseConnectionRequest> __Marshaller_viam_app_data_v1_GetDatabaseConnectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.GetDatabaseConnectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.GetDatabaseConnectionResponse> __Marshaller_viam_app_data_v1_GetDatabaseConnectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.GetDatabaseConnectionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.ConfigureDatabaseUserRequest> __Marshaller_viam_app_data_v1_ConfigureDatabaseUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.ConfigureDatabaseUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.ConfigureDatabaseUserResponse> __Marshaller_viam_app_data_v1_ConfigureDatabaseUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.ConfigureDatabaseUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest> __Marshaller_viam_app_data_v1_AddBinaryDataToDatasetByIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse> __Marshaller_viam_app_data_v1_AddBinaryDataToDatasetByIDsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest> __Marshaller_viam_app_data_v1_RemoveBinaryDataFromDatasetByIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse> __Marshaller_viam_app_data_v1_RemoveBinaryDataFromDatasetByIDsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.TabularDataByFilterRequest, global::Viam.App.Data.V1.TabularDataByFilterResponse> __Method_TabularDataByFilter = new grpc::Method<global::Viam.App.Data.V1.TabularDataByFilterRequest, global::Viam.App.Data.V1.TabularDataByFilterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TabularDataByFilter",
        __Marshaller_viam_app_data_v1_TabularDataByFilterRequest,
        __Marshaller_viam_app_data_v1_TabularDataByFilterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.TabularDataBySQLRequest, global::Viam.App.Data.V1.TabularDataBySQLResponse> __Method_TabularDataBySQL = new grpc::Method<global::Viam.App.Data.V1.TabularDataBySQLRequest, global::Viam.App.Data.V1.TabularDataBySQLResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TabularDataBySQL",
        __Marshaller_viam_app_data_v1_TabularDataBySQLRequest,
        __Marshaller_viam_app_data_v1_TabularDataBySQLResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.TabularDataByMQLRequest, global::Viam.App.Data.V1.TabularDataByMQLResponse> __Method_TabularDataByMQL = new grpc::Method<global::Viam.App.Data.V1.TabularDataByMQLRequest, global::Viam.App.Data.V1.TabularDataByMQLResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TabularDataByMQL",
        __Marshaller_viam_app_data_v1_TabularDataByMQLRequest,
        __Marshaller_viam_app_data_v1_TabularDataByMQLResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.ExportTabularDataRequest, global::Viam.App.Data.V1.ExportTabularDataResponse> __Method_ExportTabularData = new grpc::Method<global::Viam.App.Data.V1.ExportTabularDataRequest, global::Viam.App.Data.V1.ExportTabularDataResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ExportTabularData",
        __Marshaller_viam_app_data_v1_ExportTabularDataRequest,
        __Marshaller_viam_app_data_v1_ExportTabularDataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.GetLatestTabularDataRequest, global::Viam.App.Data.V1.GetLatestTabularDataResponse> __Method_GetLatestTabularData = new grpc::Method<global::Viam.App.Data.V1.GetLatestTabularDataRequest, global::Viam.App.Data.V1.GetLatestTabularDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLatestTabularData",
        __Marshaller_viam_app_data_v1_GetLatestTabularDataRequest,
        __Marshaller_viam_app_data_v1_GetLatestTabularDataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.BinaryDataByFilterRequest, global::Viam.App.Data.V1.BinaryDataByFilterResponse> __Method_BinaryDataByFilter = new grpc::Method<global::Viam.App.Data.V1.BinaryDataByFilterRequest, global::Viam.App.Data.V1.BinaryDataByFilterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BinaryDataByFilter",
        __Marshaller_viam_app_data_v1_BinaryDataByFilterRequest,
        __Marshaller_viam_app_data_v1_BinaryDataByFilterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.BinaryDataByIDsRequest, global::Viam.App.Data.V1.BinaryDataByIDsResponse> __Method_BinaryDataByIDs = new grpc::Method<global::Viam.App.Data.V1.BinaryDataByIDsRequest, global::Viam.App.Data.V1.BinaryDataByIDsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BinaryDataByIDs",
        __Marshaller_viam_app_data_v1_BinaryDataByIDsRequest,
        __Marshaller_viam_app_data_v1_BinaryDataByIDsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.DeleteTabularDataRequest, global::Viam.App.Data.V1.DeleteTabularDataResponse> __Method_DeleteTabularData = new grpc::Method<global::Viam.App.Data.V1.DeleteTabularDataRequest, global::Viam.App.Data.V1.DeleteTabularDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTabularData",
        __Marshaller_viam_app_data_v1_DeleteTabularDataRequest,
        __Marshaller_viam_app_data_v1_DeleteTabularDataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest, global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse> __Method_DeleteBinaryDataByFilter = new grpc::Method<global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest, global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBinaryDataByFilter",
        __Marshaller_viam_app_data_v1_DeleteBinaryDataByFilterRequest,
        __Marshaller_viam_app_data_v1_DeleteBinaryDataByFilterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest, global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse> __Method_DeleteBinaryDataByIDs = new grpc::Method<global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest, global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBinaryDataByIDs",
        __Marshaller_viam_app_data_v1_DeleteBinaryDataByIDsRequest,
        __Marshaller_viam_app_data_v1_DeleteBinaryDataByIDsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest, global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse> __Method_AddTagsToBinaryDataByIDs = new grpc::Method<global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest, global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddTagsToBinaryDataByIDs",
        __Marshaller_viam_app_data_v1_AddTagsToBinaryDataByIDsRequest,
        __Marshaller_viam_app_data_v1_AddTagsToBinaryDataByIDsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest, global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse> __Method_AddTagsToBinaryDataByFilter = new grpc::Method<global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest, global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddTagsToBinaryDataByFilter",
        __Marshaller_viam_app_data_v1_AddTagsToBinaryDataByFilterRequest,
        __Marshaller_viam_app_data_v1_AddTagsToBinaryDataByFilterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse> __Method_RemoveTagsFromBinaryDataByIDs = new grpc::Method<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveTagsFromBinaryDataByIDs",
        __Marshaller_viam_app_data_v1_RemoveTagsFromBinaryDataByIDsRequest,
        __Marshaller_viam_app_data_v1_RemoveTagsFromBinaryDataByIDsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse> __Method_RemoveTagsFromBinaryDataByFilter = new grpc::Method<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveTagsFromBinaryDataByFilter",
        __Marshaller_viam_app_data_v1_RemoveTagsFromBinaryDataByFilterRequest,
        __Marshaller_viam_app_data_v1_RemoveTagsFromBinaryDataByFilterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.TagsByFilterRequest, global::Viam.App.Data.V1.TagsByFilterResponse> __Method_TagsByFilter = new grpc::Method<global::Viam.App.Data.V1.TagsByFilterRequest, global::Viam.App.Data.V1.TagsByFilterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TagsByFilter",
        __Marshaller_viam_app_data_v1_TagsByFilterRequest,
        __Marshaller_viam_app_data_v1_TagsByFilterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest, global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse> __Method_AddBoundingBoxToImageByID = new grpc::Method<global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest, global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddBoundingBoxToImageByID",
        __Marshaller_viam_app_data_v1_AddBoundingBoxToImageByIDRequest,
        __Marshaller_viam_app_data_v1_AddBoundingBoxToImageByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest, global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse> __Method_RemoveBoundingBoxFromImageByID = new grpc::Method<global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest, global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveBoundingBoxFromImageByID",
        __Marshaller_viam_app_data_v1_RemoveBoundingBoxFromImageByIDRequest,
        __Marshaller_viam_app_data_v1_RemoveBoundingBoxFromImageByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest, global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse> __Method_BoundingBoxLabelsByFilter = new grpc::Method<global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest, global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BoundingBoxLabelsByFilter",
        __Marshaller_viam_app_data_v1_BoundingBoxLabelsByFilterRequest,
        __Marshaller_viam_app_data_v1_BoundingBoxLabelsByFilterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.UpdateBoundingBoxRequest, global::Viam.App.Data.V1.UpdateBoundingBoxResponse> __Method_UpdateBoundingBox = new grpc::Method<global::Viam.App.Data.V1.UpdateBoundingBoxRequest, global::Viam.App.Data.V1.UpdateBoundingBoxResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBoundingBox",
        __Marshaller_viam_app_data_v1_UpdateBoundingBoxRequest,
        __Marshaller_viam_app_data_v1_UpdateBoundingBoxResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.GetDatabaseConnectionRequest, global::Viam.App.Data.V1.GetDatabaseConnectionResponse> __Method_GetDatabaseConnection = new grpc::Method<global::Viam.App.Data.V1.GetDatabaseConnectionRequest, global::Viam.App.Data.V1.GetDatabaseConnectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDatabaseConnection",
        __Marshaller_viam_app_data_v1_GetDatabaseConnectionRequest,
        __Marshaller_viam_app_data_v1_GetDatabaseConnectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.ConfigureDatabaseUserRequest, global::Viam.App.Data.V1.ConfigureDatabaseUserResponse> __Method_ConfigureDatabaseUser = new grpc::Method<global::Viam.App.Data.V1.ConfigureDatabaseUserRequest, global::Viam.App.Data.V1.ConfigureDatabaseUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDatabaseUser",
        __Marshaller_viam_app_data_v1_ConfigureDatabaseUserRequest,
        __Marshaller_viam_app_data_v1_ConfigureDatabaseUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest, global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse> __Method_AddBinaryDataToDatasetByIDs = new grpc::Method<global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest, global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddBinaryDataToDatasetByIDs",
        __Marshaller_viam_app_data_v1_AddBinaryDataToDatasetByIDsRequest,
        __Marshaller_viam_app_data_v1_AddBinaryDataToDatasetByIDsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest, global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse> __Method_RemoveBinaryDataFromDatasetByIDs = new grpc::Method<global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest, global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveBinaryDataFromDatasetByIDs",
        __Marshaller_viam_app_data_v1_RemoveBinaryDataFromDatasetByIDsRequest,
        __Marshaller_viam_app_data_v1_RemoveBinaryDataFromDatasetByIDsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Viam.App.Data.V1.DataReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataService</summary>
    [grpc::BindServiceMethod(typeof(DataService), "BindService")]
    public abstract partial class DataServiceBase
    {
      /// <summary>
      /// TabularDataByFilter queries tabular data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.TabularDataByFilterResponse> TabularDataByFilter(global::Viam.App.Data.V1.TabularDataByFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// TabularDataBySQL queries tabular data with a SQL query.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.TabularDataBySQLResponse> TabularDataBySQL(global::Viam.App.Data.V1.TabularDataBySQLRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// TabularDataByMQL queries tabular data with an MQL (MongoDB Query Language) query.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.TabularDataByMQLResponse> TabularDataByMQL(global::Viam.App.Data.V1.TabularDataByMQLRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ExportTabularData queries tabular data from the specified data source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ExportTabularData(global::Viam.App.Data.V1.ExportTabularDataRequest request, grpc::IServerStreamWriter<global::Viam.App.Data.V1.ExportTabularDataResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetLatestTabularData gets the most recent tabular data captured from the specified data source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.GetLatestTabularDataResponse> GetLatestTabularData(global::Viam.App.Data.V1.GetLatestTabularDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// BinaryDataByFilter queries binary data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.BinaryDataByFilterResponse> BinaryDataByFilter(global::Viam.App.Data.V1.BinaryDataByFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// BinaryDataByIDs queries binary data and metadata based on given IDs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.BinaryDataByIDsResponse> BinaryDataByIDs(global::Viam.App.Data.V1.BinaryDataByIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DeleteTabularData deletes tabular data older than a number of days, based on the given organization ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.DeleteTabularDataResponse> DeleteTabularData(global::Viam.App.Data.V1.DeleteTabularDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DeleteBinaryDataByFilter deletes binary data based on given filters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse> DeleteBinaryDataByFilter(global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DeleteBinaryDataByIDs deletes binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse> DeleteBinaryDataByIDs(global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// AddTagsToBinaryDataByIDs adds string tags, unless the tags are already present, to binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse> AddTagsToBinaryDataByIDs(global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// AddTagsToBinaryDataByFilter adds string tags, unless the tags are already present, to binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse> AddTagsToBinaryDataByFilter(global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RemoveTagsToBinaryDataByIDs removes string tags from binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse> RemoveTagsFromBinaryDataByIDs(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RemoveTagsToBinaryDataByFilter removes string tags from binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse> RemoveTagsFromBinaryDataByFilter(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// TagsByFilter gets all unique tags from data based on given filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.TagsByFilterResponse> TagsByFilter(global::Viam.App.Data.V1.TagsByFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// AddBoundingBoxToImageByID adds a bounding box to an image with the given ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse> AddBoundingBoxToImageByID(global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RemoveBoundingBoxFromImageByID removes a bounding box from an image with the given ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse> RemoveBoundingBoxFromImageByID(global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// BoundingBoxLabelsByFilter gets all string labels for bounding boxes from data based on given filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse> BoundingBoxLabelsByFilter(global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateBoundingBox updates the bounding box associated with a given binary ID and bounding box ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.UpdateBoundingBoxResponse> UpdateBoundingBox(global::Viam.App.Data.V1.UpdateBoundingBoxRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetDatabaseConnection gets a connection to access a MongoDB Atlas Data Federation instance. It
      /// returns the hostname of the federated database.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.GetDatabaseConnectionResponse> GetDatabaseConnection(global::Viam.App.Data.V1.GetDatabaseConnectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ConfigureDatabaseUser configures a database user for the Viam organization's MongoDB Atlas Data
      /// Federation instance. It can also be used to reset the password of the existing database user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.ConfigureDatabaseUserResponse> ConfigureDatabaseUser(global::Viam.App.Data.V1.ConfigureDatabaseUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// AddBinaryDataToDatasetByIDs adds the binary data with the given binary IDs to the dataset.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse> AddBinaryDataToDatasetByIDs(global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RemoveBinaryDataFromDatasetByIDs removes the binary data with the given binary IDs from the dataset.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse> RemoveBinaryDataFromDatasetByIDs(global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataService</summary>
    public partial class DataServiceClient : grpc::ClientBase<DataServiceClient>
    {
      /// <summary>Creates a new client for DataService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// TabularDataByFilter queries tabular data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.TabularDataByFilterResponse TabularDataByFilter(global::Viam.App.Data.V1.TabularDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TabularDataByFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TabularDataByFilter queries tabular data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.TabularDataByFilterResponse TabularDataByFilter(global::Viam.App.Data.V1.TabularDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TabularDataByFilter, null, options, request);
      }
      /// <summary>
      /// TabularDataByFilter queries tabular data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.TabularDataByFilterResponse> TabularDataByFilterAsync(global::Viam.App.Data.V1.TabularDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TabularDataByFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TabularDataByFilter queries tabular data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.TabularDataByFilterResponse> TabularDataByFilterAsync(global::Viam.App.Data.V1.TabularDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TabularDataByFilter, null, options, request);
      }
      /// <summary>
      /// TabularDataBySQL queries tabular data with a SQL query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.TabularDataBySQLResponse TabularDataBySQL(global::Viam.App.Data.V1.TabularDataBySQLRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TabularDataBySQL(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TabularDataBySQL queries tabular data with a SQL query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.TabularDataBySQLResponse TabularDataBySQL(global::Viam.App.Data.V1.TabularDataBySQLRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TabularDataBySQL, null, options, request);
      }
      /// <summary>
      /// TabularDataBySQL queries tabular data with a SQL query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.TabularDataBySQLResponse> TabularDataBySQLAsync(global::Viam.App.Data.V1.TabularDataBySQLRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TabularDataBySQLAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TabularDataBySQL queries tabular data with a SQL query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.TabularDataBySQLResponse> TabularDataBySQLAsync(global::Viam.App.Data.V1.TabularDataBySQLRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TabularDataBySQL, null, options, request);
      }
      /// <summary>
      /// TabularDataByMQL queries tabular data with an MQL (MongoDB Query Language) query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.TabularDataByMQLResponse TabularDataByMQL(global::Viam.App.Data.V1.TabularDataByMQLRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TabularDataByMQL(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TabularDataByMQL queries tabular data with an MQL (MongoDB Query Language) query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.TabularDataByMQLResponse TabularDataByMQL(global::Viam.App.Data.V1.TabularDataByMQLRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TabularDataByMQL, null, options, request);
      }
      /// <summary>
      /// TabularDataByMQL queries tabular data with an MQL (MongoDB Query Language) query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.TabularDataByMQLResponse> TabularDataByMQLAsync(global::Viam.App.Data.V1.TabularDataByMQLRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TabularDataByMQLAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TabularDataByMQL queries tabular data with an MQL (MongoDB Query Language) query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.TabularDataByMQLResponse> TabularDataByMQLAsync(global::Viam.App.Data.V1.TabularDataByMQLRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TabularDataByMQL, null, options, request);
      }
      /// <summary>
      /// ExportTabularData queries tabular data from the specified data source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Viam.App.Data.V1.ExportTabularDataResponse> ExportTabularData(global::Viam.App.Data.V1.ExportTabularDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportTabularData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ExportTabularData queries tabular data from the specified data source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Viam.App.Data.V1.ExportTabularDataResponse> ExportTabularData(global::Viam.App.Data.V1.ExportTabularDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ExportTabularData, null, options, request);
      }
      /// <summary>
      /// GetLatestTabularData gets the most recent tabular data captured from the specified data source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.GetLatestTabularDataResponse GetLatestTabularData(global::Viam.App.Data.V1.GetLatestTabularDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLatestTabularData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetLatestTabularData gets the most recent tabular data captured from the specified data source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.GetLatestTabularDataResponse GetLatestTabularData(global::Viam.App.Data.V1.GetLatestTabularDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLatestTabularData, null, options, request);
      }
      /// <summary>
      /// GetLatestTabularData gets the most recent tabular data captured from the specified data source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.GetLatestTabularDataResponse> GetLatestTabularDataAsync(global::Viam.App.Data.V1.GetLatestTabularDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLatestTabularDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetLatestTabularData gets the most recent tabular data captured from the specified data source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.GetLatestTabularDataResponse> GetLatestTabularDataAsync(global::Viam.App.Data.V1.GetLatestTabularDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLatestTabularData, null, options, request);
      }
      /// <summary>
      /// BinaryDataByFilter queries binary data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.BinaryDataByFilterResponse BinaryDataByFilter(global::Viam.App.Data.V1.BinaryDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BinaryDataByFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BinaryDataByFilter queries binary data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.BinaryDataByFilterResponse BinaryDataByFilter(global::Viam.App.Data.V1.BinaryDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BinaryDataByFilter, null, options, request);
      }
      /// <summary>
      /// BinaryDataByFilter queries binary data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.BinaryDataByFilterResponse> BinaryDataByFilterAsync(global::Viam.App.Data.V1.BinaryDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BinaryDataByFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BinaryDataByFilter queries binary data and metadata based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.BinaryDataByFilterResponse> BinaryDataByFilterAsync(global::Viam.App.Data.V1.BinaryDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BinaryDataByFilter, null, options, request);
      }
      /// <summary>
      /// BinaryDataByIDs queries binary data and metadata based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.BinaryDataByIDsResponse BinaryDataByIDs(global::Viam.App.Data.V1.BinaryDataByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BinaryDataByIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BinaryDataByIDs queries binary data and metadata based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.BinaryDataByIDsResponse BinaryDataByIDs(global::Viam.App.Data.V1.BinaryDataByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BinaryDataByIDs, null, options, request);
      }
      /// <summary>
      /// BinaryDataByIDs queries binary data and metadata based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.BinaryDataByIDsResponse> BinaryDataByIDsAsync(global::Viam.App.Data.V1.BinaryDataByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BinaryDataByIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BinaryDataByIDs queries binary data and metadata based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.BinaryDataByIDsResponse> BinaryDataByIDsAsync(global::Viam.App.Data.V1.BinaryDataByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BinaryDataByIDs, null, options, request);
      }
      /// <summary>
      /// DeleteTabularData deletes tabular data older than a number of days, based on the given organization ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.DeleteTabularDataResponse DeleteTabularData(global::Viam.App.Data.V1.DeleteTabularDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTabularData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteTabularData deletes tabular data older than a number of days, based on the given organization ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.DeleteTabularDataResponse DeleteTabularData(global::Viam.App.Data.V1.DeleteTabularDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTabularData, null, options, request);
      }
      /// <summary>
      /// DeleteTabularData deletes tabular data older than a number of days, based on the given organization ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.DeleteTabularDataResponse> DeleteTabularDataAsync(global::Viam.App.Data.V1.DeleteTabularDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTabularDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteTabularData deletes tabular data older than a number of days, based on the given organization ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.DeleteTabularDataResponse> DeleteTabularDataAsync(global::Viam.App.Data.V1.DeleteTabularDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTabularData, null, options, request);
      }
      /// <summary>
      /// DeleteBinaryDataByFilter deletes binary data based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse DeleteBinaryDataByFilter(global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBinaryDataByFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteBinaryDataByFilter deletes binary data based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse DeleteBinaryDataByFilter(global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBinaryDataByFilter, null, options, request);
      }
      /// <summary>
      /// DeleteBinaryDataByFilter deletes binary data based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse> DeleteBinaryDataByFilterAsync(global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBinaryDataByFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteBinaryDataByFilter deletes binary data based on given filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse> DeleteBinaryDataByFilterAsync(global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBinaryDataByFilter, null, options, request);
      }
      /// <summary>
      /// DeleteBinaryDataByIDs deletes binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse DeleteBinaryDataByIDs(global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBinaryDataByIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteBinaryDataByIDs deletes binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse DeleteBinaryDataByIDs(global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBinaryDataByIDs, null, options, request);
      }
      /// <summary>
      /// DeleteBinaryDataByIDs deletes binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse> DeleteBinaryDataByIDsAsync(global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBinaryDataByIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteBinaryDataByIDs deletes binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse> DeleteBinaryDataByIDsAsync(global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBinaryDataByIDs, null, options, request);
      }
      /// <summary>
      /// AddTagsToBinaryDataByIDs adds string tags, unless the tags are already present, to binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse AddTagsToBinaryDataByIDs(global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTagsToBinaryDataByIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddTagsToBinaryDataByIDs adds string tags, unless the tags are already present, to binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse AddTagsToBinaryDataByIDs(global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddTagsToBinaryDataByIDs, null, options, request);
      }
      /// <summary>
      /// AddTagsToBinaryDataByIDs adds string tags, unless the tags are already present, to binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse> AddTagsToBinaryDataByIDsAsync(global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTagsToBinaryDataByIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddTagsToBinaryDataByIDs adds string tags, unless the tags are already present, to binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse> AddTagsToBinaryDataByIDsAsync(global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddTagsToBinaryDataByIDs, null, options, request);
      }
      /// <summary>
      /// AddTagsToBinaryDataByFilter adds string tags, unless the tags are already present, to binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse AddTagsToBinaryDataByFilter(global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTagsToBinaryDataByFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddTagsToBinaryDataByFilter adds string tags, unless the tags are already present, to binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse AddTagsToBinaryDataByFilter(global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddTagsToBinaryDataByFilter, null, options, request);
      }
      /// <summary>
      /// AddTagsToBinaryDataByFilter adds string tags, unless the tags are already present, to binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse> AddTagsToBinaryDataByFilterAsync(global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTagsToBinaryDataByFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddTagsToBinaryDataByFilter adds string tags, unless the tags are already present, to binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse> AddTagsToBinaryDataByFilterAsync(global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddTagsToBinaryDataByFilter, null, options, request);
      }
      /// <summary>
      /// RemoveTagsToBinaryDataByIDs removes string tags from binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse RemoveTagsFromBinaryDataByIDs(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTagsFromBinaryDataByIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveTagsToBinaryDataByIDs removes string tags from binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse RemoveTagsFromBinaryDataByIDs(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveTagsFromBinaryDataByIDs, null, options, request);
      }
      /// <summary>
      /// RemoveTagsToBinaryDataByIDs removes string tags from binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse> RemoveTagsFromBinaryDataByIDsAsync(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTagsFromBinaryDataByIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveTagsToBinaryDataByIDs removes string tags from binary data based on given IDs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse> RemoveTagsFromBinaryDataByIDsAsync(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveTagsFromBinaryDataByIDs, null, options, request);
      }
      /// <summary>
      /// RemoveTagsToBinaryDataByFilter removes string tags from binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse RemoveTagsFromBinaryDataByFilter(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTagsFromBinaryDataByFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveTagsToBinaryDataByFilter removes string tags from binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse RemoveTagsFromBinaryDataByFilter(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveTagsFromBinaryDataByFilter, null, options, request);
      }
      /// <summary>
      /// RemoveTagsToBinaryDataByFilter removes string tags from binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse> RemoveTagsFromBinaryDataByFilterAsync(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTagsFromBinaryDataByFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveTagsToBinaryDataByFilter removes string tags from binary data based on the given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse> RemoveTagsFromBinaryDataByFilterAsync(global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveTagsFromBinaryDataByFilter, null, options, request);
      }
      /// <summary>
      /// TagsByFilter gets all unique tags from data based on given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.TagsByFilterResponse TagsByFilter(global::Viam.App.Data.V1.TagsByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TagsByFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TagsByFilter gets all unique tags from data based on given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.TagsByFilterResponse TagsByFilter(global::Viam.App.Data.V1.TagsByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TagsByFilter, null, options, request);
      }
      /// <summary>
      /// TagsByFilter gets all unique tags from data based on given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.TagsByFilterResponse> TagsByFilterAsync(global::Viam.App.Data.V1.TagsByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TagsByFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TagsByFilter gets all unique tags from data based on given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.TagsByFilterResponse> TagsByFilterAsync(global::Viam.App.Data.V1.TagsByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TagsByFilter, null, options, request);
      }
      /// <summary>
      /// AddBoundingBoxToImageByID adds a bounding box to an image with the given ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse AddBoundingBoxToImageByID(global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBoundingBoxToImageByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddBoundingBoxToImageByID adds a bounding box to an image with the given ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse AddBoundingBoxToImageByID(global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddBoundingBoxToImageByID, null, options, request);
      }
      /// <summary>
      /// AddBoundingBoxToImageByID adds a bounding box to an image with the given ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse> AddBoundingBoxToImageByIDAsync(global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBoundingBoxToImageByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddBoundingBoxToImageByID adds a bounding box to an image with the given ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse> AddBoundingBoxToImageByIDAsync(global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddBoundingBoxToImageByID, null, options, request);
      }
      /// <summary>
      /// RemoveBoundingBoxFromImageByID removes a bounding box from an image with the given ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse RemoveBoundingBoxFromImageByID(global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveBoundingBoxFromImageByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveBoundingBoxFromImageByID removes a bounding box from an image with the given ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse RemoveBoundingBoxFromImageByID(global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveBoundingBoxFromImageByID, null, options, request);
      }
      /// <summary>
      /// RemoveBoundingBoxFromImageByID removes a bounding box from an image with the given ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse> RemoveBoundingBoxFromImageByIDAsync(global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveBoundingBoxFromImageByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveBoundingBoxFromImageByID removes a bounding box from an image with the given ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse> RemoveBoundingBoxFromImageByIDAsync(global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveBoundingBoxFromImageByID, null, options, request);
      }
      /// <summary>
      /// BoundingBoxLabelsByFilter gets all string labels for bounding boxes from data based on given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse BoundingBoxLabelsByFilter(global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BoundingBoxLabelsByFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BoundingBoxLabelsByFilter gets all string labels for bounding boxes from data based on given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse BoundingBoxLabelsByFilter(global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BoundingBoxLabelsByFilter, null, options, request);
      }
      /// <summary>
      /// BoundingBoxLabelsByFilter gets all string labels for bounding boxes from data based on given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse> BoundingBoxLabelsByFilterAsync(global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BoundingBoxLabelsByFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BoundingBoxLabelsByFilter gets all string labels for bounding boxes from data based on given filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse> BoundingBoxLabelsByFilterAsync(global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BoundingBoxLabelsByFilter, null, options, request);
      }
      /// <summary>
      /// UpdateBoundingBox updates the bounding box associated with a given binary ID and bounding box ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.UpdateBoundingBoxResponse UpdateBoundingBox(global::Viam.App.Data.V1.UpdateBoundingBoxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBoundingBox(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateBoundingBox updates the bounding box associated with a given binary ID and bounding box ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.UpdateBoundingBoxResponse UpdateBoundingBox(global::Viam.App.Data.V1.UpdateBoundingBoxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBoundingBox, null, options, request);
      }
      /// <summary>
      /// UpdateBoundingBox updates the bounding box associated with a given binary ID and bounding box ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.UpdateBoundingBoxResponse> UpdateBoundingBoxAsync(global::Viam.App.Data.V1.UpdateBoundingBoxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBoundingBoxAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateBoundingBox updates the bounding box associated with a given binary ID and bounding box ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.UpdateBoundingBoxResponse> UpdateBoundingBoxAsync(global::Viam.App.Data.V1.UpdateBoundingBoxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBoundingBox, null, options, request);
      }
      /// <summary>
      /// GetDatabaseConnection gets a connection to access a MongoDB Atlas Data Federation instance. It
      /// returns the hostname of the federated database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.GetDatabaseConnectionResponse GetDatabaseConnection(global::Viam.App.Data.V1.GetDatabaseConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDatabaseConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetDatabaseConnection gets a connection to access a MongoDB Atlas Data Federation instance. It
      /// returns the hostname of the federated database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.GetDatabaseConnectionResponse GetDatabaseConnection(global::Viam.App.Data.V1.GetDatabaseConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDatabaseConnection, null, options, request);
      }
      /// <summary>
      /// GetDatabaseConnection gets a connection to access a MongoDB Atlas Data Federation instance. It
      /// returns the hostname of the federated database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.GetDatabaseConnectionResponse> GetDatabaseConnectionAsync(global::Viam.App.Data.V1.GetDatabaseConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDatabaseConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetDatabaseConnection gets a connection to access a MongoDB Atlas Data Federation instance. It
      /// returns the hostname of the federated database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.GetDatabaseConnectionResponse> GetDatabaseConnectionAsync(global::Viam.App.Data.V1.GetDatabaseConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDatabaseConnection, null, options, request);
      }
      /// <summary>
      /// ConfigureDatabaseUser configures a database user for the Viam organization's MongoDB Atlas Data
      /// Federation instance. It can also be used to reset the password of the existing database user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.ConfigureDatabaseUserResponse ConfigureDatabaseUser(global::Viam.App.Data.V1.ConfigureDatabaseUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDatabaseUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConfigureDatabaseUser configures a database user for the Viam organization's MongoDB Atlas Data
      /// Federation instance. It can also be used to reset the password of the existing database user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.ConfigureDatabaseUserResponse ConfigureDatabaseUser(global::Viam.App.Data.V1.ConfigureDatabaseUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDatabaseUser, null, options, request);
      }
      /// <summary>
      /// ConfigureDatabaseUser configures a database user for the Viam organization's MongoDB Atlas Data
      /// Federation instance. It can also be used to reset the password of the existing database user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.ConfigureDatabaseUserResponse> ConfigureDatabaseUserAsync(global::Viam.App.Data.V1.ConfigureDatabaseUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDatabaseUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ConfigureDatabaseUser configures a database user for the Viam organization's MongoDB Atlas Data
      /// Federation instance. It can also be used to reset the password of the existing database user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.ConfigureDatabaseUserResponse> ConfigureDatabaseUserAsync(global::Viam.App.Data.V1.ConfigureDatabaseUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDatabaseUser, null, options, request);
      }
      /// <summary>
      /// AddBinaryDataToDatasetByIDs adds the binary data with the given binary IDs to the dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse AddBinaryDataToDatasetByIDs(global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBinaryDataToDatasetByIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddBinaryDataToDatasetByIDs adds the binary data with the given binary IDs to the dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse AddBinaryDataToDatasetByIDs(global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddBinaryDataToDatasetByIDs, null, options, request);
      }
      /// <summary>
      /// AddBinaryDataToDatasetByIDs adds the binary data with the given binary IDs to the dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse> AddBinaryDataToDatasetByIDsAsync(global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddBinaryDataToDatasetByIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddBinaryDataToDatasetByIDs adds the binary data with the given binary IDs to the dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse> AddBinaryDataToDatasetByIDsAsync(global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddBinaryDataToDatasetByIDs, null, options, request);
      }
      /// <summary>
      /// RemoveBinaryDataFromDatasetByIDs removes the binary data with the given binary IDs from the dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse RemoveBinaryDataFromDatasetByIDs(global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveBinaryDataFromDatasetByIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveBinaryDataFromDatasetByIDs removes the binary data with the given binary IDs from the dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse RemoveBinaryDataFromDatasetByIDs(global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveBinaryDataFromDatasetByIDs, null, options, request);
      }
      /// <summary>
      /// RemoveBinaryDataFromDatasetByIDs removes the binary data with the given binary IDs from the dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse> RemoveBinaryDataFromDatasetByIDsAsync(global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveBinaryDataFromDatasetByIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveBinaryDataFromDatasetByIDs removes the binary data with the given binary IDs from the dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse> RemoveBinaryDataFromDatasetByIDsAsync(global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveBinaryDataFromDatasetByIDs, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DataServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DataServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_TabularDataByFilter, serviceImpl.TabularDataByFilter)
          .AddMethod(__Method_TabularDataBySQL, serviceImpl.TabularDataBySQL)
          .AddMethod(__Method_TabularDataByMQL, serviceImpl.TabularDataByMQL)
          .AddMethod(__Method_ExportTabularData, serviceImpl.ExportTabularData)
          .AddMethod(__Method_GetLatestTabularData, serviceImpl.GetLatestTabularData)
          .AddMethod(__Method_BinaryDataByFilter, serviceImpl.BinaryDataByFilter)
          .AddMethod(__Method_BinaryDataByIDs, serviceImpl.BinaryDataByIDs)
          .AddMethod(__Method_DeleteTabularData, serviceImpl.DeleteTabularData)
          .AddMethod(__Method_DeleteBinaryDataByFilter, serviceImpl.DeleteBinaryDataByFilter)
          .AddMethod(__Method_DeleteBinaryDataByIDs, serviceImpl.DeleteBinaryDataByIDs)
          .AddMethod(__Method_AddTagsToBinaryDataByIDs, serviceImpl.AddTagsToBinaryDataByIDs)
          .AddMethod(__Method_AddTagsToBinaryDataByFilter, serviceImpl.AddTagsToBinaryDataByFilter)
          .AddMethod(__Method_RemoveTagsFromBinaryDataByIDs, serviceImpl.RemoveTagsFromBinaryDataByIDs)
          .AddMethod(__Method_RemoveTagsFromBinaryDataByFilter, serviceImpl.RemoveTagsFromBinaryDataByFilter)
          .AddMethod(__Method_TagsByFilter, serviceImpl.TagsByFilter)
          .AddMethod(__Method_AddBoundingBoxToImageByID, serviceImpl.AddBoundingBoxToImageByID)
          .AddMethod(__Method_RemoveBoundingBoxFromImageByID, serviceImpl.RemoveBoundingBoxFromImageByID)
          .AddMethod(__Method_BoundingBoxLabelsByFilter, serviceImpl.BoundingBoxLabelsByFilter)
          .AddMethod(__Method_UpdateBoundingBox, serviceImpl.UpdateBoundingBox)
          .AddMethod(__Method_GetDatabaseConnection, serviceImpl.GetDatabaseConnection)
          .AddMethod(__Method_ConfigureDatabaseUser, serviceImpl.ConfigureDatabaseUser)
          .AddMethod(__Method_AddBinaryDataToDatasetByIDs, serviceImpl.AddBinaryDataToDatasetByIDs)
          .AddMethod(__Method_RemoveBinaryDataFromDatasetByIDs, serviceImpl.RemoveBinaryDataFromDatasetByIDs).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DataServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_TabularDataByFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.TabularDataByFilterRequest, global::Viam.App.Data.V1.TabularDataByFilterResponse>(serviceImpl.TabularDataByFilter));
      serviceBinder.AddMethod(__Method_TabularDataBySQL, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.TabularDataBySQLRequest, global::Viam.App.Data.V1.TabularDataBySQLResponse>(serviceImpl.TabularDataBySQL));
      serviceBinder.AddMethod(__Method_TabularDataByMQL, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.TabularDataByMQLRequest, global::Viam.App.Data.V1.TabularDataByMQLResponse>(serviceImpl.TabularDataByMQL));
      serviceBinder.AddMethod(__Method_ExportTabularData, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Viam.App.Data.V1.ExportTabularDataRequest, global::Viam.App.Data.V1.ExportTabularDataResponse>(serviceImpl.ExportTabularData));
      serviceBinder.AddMethod(__Method_GetLatestTabularData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.GetLatestTabularDataRequest, global::Viam.App.Data.V1.GetLatestTabularDataResponse>(serviceImpl.GetLatestTabularData));
      serviceBinder.AddMethod(__Method_BinaryDataByFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.BinaryDataByFilterRequest, global::Viam.App.Data.V1.BinaryDataByFilterResponse>(serviceImpl.BinaryDataByFilter));
      serviceBinder.AddMethod(__Method_BinaryDataByIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.BinaryDataByIDsRequest, global::Viam.App.Data.V1.BinaryDataByIDsResponse>(serviceImpl.BinaryDataByIDs));
      serviceBinder.AddMethod(__Method_DeleteTabularData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.DeleteTabularDataRequest, global::Viam.App.Data.V1.DeleteTabularDataResponse>(serviceImpl.DeleteTabularData));
      serviceBinder.AddMethod(__Method_DeleteBinaryDataByFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.DeleteBinaryDataByFilterRequest, global::Viam.App.Data.V1.DeleteBinaryDataByFilterResponse>(serviceImpl.DeleteBinaryDataByFilter));
      serviceBinder.AddMethod(__Method_DeleteBinaryDataByIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.DeleteBinaryDataByIDsRequest, global::Viam.App.Data.V1.DeleteBinaryDataByIDsResponse>(serviceImpl.DeleteBinaryDataByIDs));
      serviceBinder.AddMethod(__Method_AddTagsToBinaryDataByIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsRequest, global::Viam.App.Data.V1.AddTagsToBinaryDataByIDsResponse>(serviceImpl.AddTagsToBinaryDataByIDs));
      serviceBinder.AddMethod(__Method_AddTagsToBinaryDataByFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterRequest, global::Viam.App.Data.V1.AddTagsToBinaryDataByFilterResponse>(serviceImpl.AddTagsToBinaryDataByFilter));
      serviceBinder.AddMethod(__Method_RemoveTagsFromBinaryDataByIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsRequest, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByIDsResponse>(serviceImpl.RemoveTagsFromBinaryDataByIDs));
      serviceBinder.AddMethod(__Method_RemoveTagsFromBinaryDataByFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterRequest, global::Viam.App.Data.V1.RemoveTagsFromBinaryDataByFilterResponse>(serviceImpl.RemoveTagsFromBinaryDataByFilter));
      serviceBinder.AddMethod(__Method_TagsByFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.TagsByFilterRequest, global::Viam.App.Data.V1.TagsByFilterResponse>(serviceImpl.TagsByFilter));
      serviceBinder.AddMethod(__Method_AddBoundingBoxToImageByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.AddBoundingBoxToImageByIDRequest, global::Viam.App.Data.V1.AddBoundingBoxToImageByIDResponse>(serviceImpl.AddBoundingBoxToImageByID));
      serviceBinder.AddMethod(__Method_RemoveBoundingBoxFromImageByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDRequest, global::Viam.App.Data.V1.RemoveBoundingBoxFromImageByIDResponse>(serviceImpl.RemoveBoundingBoxFromImageByID));
      serviceBinder.AddMethod(__Method_BoundingBoxLabelsByFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.BoundingBoxLabelsByFilterRequest, global::Viam.App.Data.V1.BoundingBoxLabelsByFilterResponse>(serviceImpl.BoundingBoxLabelsByFilter));
      serviceBinder.AddMethod(__Method_UpdateBoundingBox, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.UpdateBoundingBoxRequest, global::Viam.App.Data.V1.UpdateBoundingBoxResponse>(serviceImpl.UpdateBoundingBox));
      serviceBinder.AddMethod(__Method_GetDatabaseConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.GetDatabaseConnectionRequest, global::Viam.App.Data.V1.GetDatabaseConnectionResponse>(serviceImpl.GetDatabaseConnection));
      serviceBinder.AddMethod(__Method_ConfigureDatabaseUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.ConfigureDatabaseUserRequest, global::Viam.App.Data.V1.ConfigureDatabaseUserResponse>(serviceImpl.ConfigureDatabaseUser));
      serviceBinder.AddMethod(__Method_AddBinaryDataToDatasetByIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsRequest, global::Viam.App.Data.V1.AddBinaryDataToDatasetByIDsResponse>(serviceImpl.AddBinaryDataToDatasetByIDs));
      serviceBinder.AddMethod(__Method_RemoveBinaryDataFromDatasetByIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsRequest, global::Viam.App.Data.V1.RemoveBinaryDataFromDatasetByIDsResponse>(serviceImpl.RemoveBinaryDataFromDatasetByIDs));
    }

  }
}
#endregion
