// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: app/v1/app.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Viam.App.V1 {
  /// <summary>
  /// Users
  /// </summary>
  public static partial class AppService
  {
    static readonly string __ServiceName = "viam.app.v1.AppService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetUserIDByEmailRequest> __Marshaller_viam_app_v1_GetUserIDByEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetUserIDByEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetUserIDByEmailResponse> __Marshaller_viam_app_v1_GetUserIDByEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetUserIDByEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateOrganizationRequest> __Marshaller_viam_app_v1_CreateOrganizationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateOrganizationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateOrganizationResponse> __Marshaller_viam_app_v1_CreateOrganizationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateOrganizationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListOrganizationsRequest> __Marshaller_viam_app_v1_ListOrganizationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListOrganizationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListOrganizationsResponse> __Marshaller_viam_app_v1_ListOrganizationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListOrganizationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest> __Marshaller_viam_app_v1_GetOrganizationsWithAccessToLocationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse> __Marshaller_viam_app_v1_GetOrganizationsWithAccessToLocationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListOrganizationsByUserRequest> __Marshaller_viam_app_v1_ListOrganizationsByUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListOrganizationsByUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListOrganizationsByUserResponse> __Marshaller_viam_app_v1_ListOrganizationsByUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListOrganizationsByUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.SearchOrganizationsRequest> __Marshaller_viam_app_v1_SearchOrganizationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.SearchOrganizationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.SearchOrganizationsResponse> __Marshaller_viam_app_v1_SearchOrganizationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.SearchOrganizationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetOrganizationRequest> __Marshaller_viam_app_v1_GetOrganizationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetOrganizationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetOrganizationResponse> __Marshaller_viam_app_v1_GetOrganizationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetOrganizationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest> __Marshaller_viam_app_v1_GetOrganizationNamespaceAvailabilityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse> __Marshaller_viam_app_v1_GetOrganizationNamespaceAvailabilityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOrganizationRequest> __Marshaller_viam_app_v1_UpdateOrganizationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOrganizationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOrganizationResponse> __Marshaller_viam_app_v1_UpdateOrganizationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOrganizationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOrganizationNamespaceRequest> __Marshaller_viam_app_v1_UpdateOrganizationNamespaceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOrganizationNamespaceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOrganizationNamespaceResponse> __Marshaller_viam_app_v1_UpdateOrganizationNamespaceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOrganizationNamespaceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteOrganizationRequest> __Marshaller_viam_app_v1_DeleteOrganizationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteOrganizationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteOrganizationResponse> __Marshaller_viam_app_v1_DeleteOrganizationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteOrganizationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetOrganizationMetadataRequest> __Marshaller_viam_app_v1_GetOrganizationMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetOrganizationMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetOrganizationMetadataResponse> __Marshaller_viam_app_v1_GetOrganizationMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetOrganizationMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOrganizationMetadataRequest> __Marshaller_viam_app_v1_UpdateOrganizationMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOrganizationMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOrganizationMetadataResponse> __Marshaller_viam_app_v1_UpdateOrganizationMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOrganizationMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListOrganizationMembersRequest> __Marshaller_viam_app_v1_ListOrganizationMembersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListOrganizationMembersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListOrganizationMembersResponse> __Marshaller_viam_app_v1_ListOrganizationMembersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListOrganizationMembersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateOrganizationInviteRequest> __Marshaller_viam_app_v1_CreateOrganizationInviteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateOrganizationInviteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateOrganizationInviteResponse> __Marshaller_viam_app_v1_CreateOrganizationInviteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateOrganizationInviteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest> __Marshaller_viam_app_v1_UpdateOrganizationInviteAuthorizationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse> __Marshaller_viam_app_v1_UpdateOrganizationInviteAuthorizationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteOrganizationMemberRequest> __Marshaller_viam_app_v1_DeleteOrganizationMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteOrganizationMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteOrganizationMemberResponse> __Marshaller_viam_app_v1_DeleteOrganizationMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteOrganizationMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteOrganizationInviteRequest> __Marshaller_viam_app_v1_DeleteOrganizationInviteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteOrganizationInviteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteOrganizationInviteResponse> __Marshaller_viam_app_v1_DeleteOrganizationInviteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteOrganizationInviteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ResendOrganizationInviteRequest> __Marshaller_viam_app_v1_ResendOrganizationInviteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ResendOrganizationInviteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ResendOrganizationInviteResponse> __Marshaller_viam_app_v1_ResendOrganizationInviteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ResendOrganizationInviteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.EnableBillingServiceRequest> __Marshaller_viam_app_v1_EnableBillingServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.EnableBillingServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.EnableBillingServiceResponse> __Marshaller_viam_app_v1_EnableBillingServiceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.EnableBillingServiceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DisableBillingServiceRequest> __Marshaller_viam_app_v1_DisableBillingServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DisableBillingServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DisableBillingServiceResponse> __Marshaller_viam_app_v1_DisableBillingServiceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DisableBillingServiceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateBillingServiceRequest> __Marshaller_viam_app_v1_UpdateBillingServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateBillingServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateBillingServiceResponse> __Marshaller_viam_app_v1_UpdateBillingServiceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateBillingServiceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetBillingServiceConfigRequest> __Marshaller_viam_app_v1_GetBillingServiceConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetBillingServiceConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetBillingServiceConfigResponse> __Marshaller_viam_app_v1_GetBillingServiceConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetBillingServiceConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.OrganizationSetSupportEmailRequest> __Marshaller_viam_app_v1_OrganizationSetSupportEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.OrganizationSetSupportEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.OrganizationSetSupportEmailResponse> __Marshaller_viam_app_v1_OrganizationSetSupportEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.OrganizationSetSupportEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.OrganizationGetSupportEmailRequest> __Marshaller_viam_app_v1_OrganizationGetSupportEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.OrganizationGetSupportEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.OrganizationGetSupportEmailResponse> __Marshaller_viam_app_v1_OrganizationGetSupportEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.OrganizationGetSupportEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.OrganizationSetLogoRequest> __Marshaller_viam_app_v1_OrganizationSetLogoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.OrganizationSetLogoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.OrganizationSetLogoResponse> __Marshaller_viam_app_v1_OrganizationSetLogoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.OrganizationSetLogoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.OrganizationGetLogoRequest> __Marshaller_viam_app_v1_OrganizationGetLogoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.OrganizationGetLogoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.OrganizationGetLogoResponse> __Marshaller_viam_app_v1_OrganizationGetLogoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.OrganizationGetLogoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.EnableAuthServiceRequest> __Marshaller_viam_app_v1_EnableAuthServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.EnableAuthServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.EnableAuthServiceResponse> __Marshaller_viam_app_v1_EnableAuthServiceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.EnableAuthServiceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DisableAuthServiceRequest> __Marshaller_viam_app_v1_DisableAuthServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DisableAuthServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DisableAuthServiceResponse> __Marshaller_viam_app_v1_DisableAuthServiceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DisableAuthServiceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateOAuthAppRequest> __Marshaller_viam_app_v1_CreateOAuthAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateOAuthAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateOAuthAppResponse> __Marshaller_viam_app_v1_CreateOAuthAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateOAuthAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ReadOAuthAppRequest> __Marshaller_viam_app_v1_ReadOAuthAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ReadOAuthAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ReadOAuthAppResponse> __Marshaller_viam_app_v1_ReadOAuthAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ReadOAuthAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOAuthAppRequest> __Marshaller_viam_app_v1_UpdateOAuthAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOAuthAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateOAuthAppResponse> __Marshaller_viam_app_v1_UpdateOAuthAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateOAuthAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteOAuthAppRequest> __Marshaller_viam_app_v1_DeleteOAuthAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteOAuthAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteOAuthAppResponse> __Marshaller_viam_app_v1_DeleteOAuthAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteOAuthAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListOAuthAppsRequest> __Marshaller_viam_app_v1_ListOAuthAppsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListOAuthAppsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListOAuthAppsResponse> __Marshaller_viam_app_v1_ListOAuthAppsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListOAuthAppsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateLocationRequest> __Marshaller_viam_app_v1_CreateLocationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateLocationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateLocationResponse> __Marshaller_viam_app_v1_CreateLocationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateLocationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetLocationRequest> __Marshaller_viam_app_v1_GetLocationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetLocationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetLocationResponse> __Marshaller_viam_app_v1_GetLocationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetLocationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateLocationRequest> __Marshaller_viam_app_v1_UpdateLocationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateLocationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateLocationResponse> __Marshaller_viam_app_v1_UpdateLocationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateLocationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteLocationRequest> __Marshaller_viam_app_v1_DeleteLocationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteLocationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteLocationResponse> __Marshaller_viam_app_v1_DeleteLocationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteLocationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetLocationMetadataRequest> __Marshaller_viam_app_v1_GetLocationMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetLocationMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetLocationMetadataResponse> __Marshaller_viam_app_v1_GetLocationMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetLocationMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateLocationMetadataRequest> __Marshaller_viam_app_v1_UpdateLocationMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateLocationMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateLocationMetadataResponse> __Marshaller_viam_app_v1_UpdateLocationMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateLocationMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListLocationsRequest> __Marshaller_viam_app_v1_ListLocationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListLocationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListLocationsResponse> __Marshaller_viam_app_v1_ListLocationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListLocationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ShareLocationRequest> __Marshaller_viam_app_v1_ShareLocationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ShareLocationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ShareLocationResponse> __Marshaller_viam_app_v1_ShareLocationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ShareLocationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UnshareLocationRequest> __Marshaller_viam_app_v1_UnshareLocationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UnshareLocationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UnshareLocationResponse> __Marshaller_viam_app_v1_UnshareLocationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UnshareLocationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.LocationAuthRequest> __Marshaller_viam_app_v1_LocationAuthRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.LocationAuthRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.LocationAuthResponse> __Marshaller_viam_app_v1_LocationAuthResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.LocationAuthResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateLocationSecretRequest> __Marshaller_viam_app_v1_CreateLocationSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateLocationSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateLocationSecretResponse> __Marshaller_viam_app_v1_CreateLocationSecretResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateLocationSecretResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteLocationSecretRequest> __Marshaller_viam_app_v1_DeleteLocationSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteLocationSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteLocationSecretResponse> __Marshaller_viam_app_v1_DeleteLocationSecretResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteLocationSecretResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotRequest> __Marshaller_viam_app_v1_GetRobotRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotResponse> __Marshaller_viam_app_v1_GetRobotResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotMetadataRequest> __Marshaller_viam_app_v1_GetRobotMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotMetadataResponse> __Marshaller_viam_app_v1_GetRobotMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRobotMetadataRequest> __Marshaller_viam_app_v1_UpdateRobotMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRobotMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRobotMetadataResponse> __Marshaller_viam_app_v1_UpdateRobotMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRobotMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRoverRentalRobotsRequest> __Marshaller_viam_app_v1_GetRoverRentalRobotsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRoverRentalRobotsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRoverRentalRobotsResponse> __Marshaller_viam_app_v1_GetRoverRentalRobotsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRoverRentalRobotsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartsRequest> __Marshaller_viam_app_v1_GetRobotPartsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartsResponse> __Marshaller_viam_app_v1_GetRobotPartsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartRequest> __Marshaller_viam_app_v1_GetRobotPartRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartResponse> __Marshaller_viam_app_v1_GetRobotPartResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartLogsRequest> __Marshaller_viam_app_v1_GetRobotPartLogsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartLogsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartLogsResponse> __Marshaller_viam_app_v1_GetRobotPartLogsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartLogsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.TailRobotPartLogsRequest> __Marshaller_viam_app_v1_TailRobotPartLogsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.TailRobotPartLogsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.TailRobotPartLogsResponse> __Marshaller_viam_app_v1_TailRobotPartLogsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.TailRobotPartLogsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartHistoryRequest> __Marshaller_viam_app_v1_GetRobotPartHistoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartHistoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartHistoryResponse> __Marshaller_viam_app_v1_GetRobotPartHistoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartHistoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRobotPartRequest> __Marshaller_viam_app_v1_UpdateRobotPartRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRobotPartRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRobotPartResponse> __Marshaller_viam_app_v1_UpdateRobotPartResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRobotPartResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.NewRobotPartRequest> __Marshaller_viam_app_v1_NewRobotPartRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.NewRobotPartRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.NewRobotPartResponse> __Marshaller_viam_app_v1_NewRobotPartResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.NewRobotPartResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteRobotPartRequest> __Marshaller_viam_app_v1_DeleteRobotPartRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteRobotPartRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteRobotPartResponse> __Marshaller_viam_app_v1_DeleteRobotPartResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteRobotPartResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartMetadataRequest> __Marshaller_viam_app_v1_GetRobotPartMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotPartMetadataResponse> __Marshaller_viam_app_v1_GetRobotPartMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotPartMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRobotPartMetadataRequest> __Marshaller_viam_app_v1_UpdateRobotPartMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRobotPartMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRobotPartMetadataResponse> __Marshaller_viam_app_v1_UpdateRobotPartMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRobotPartMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotAPIKeysRequest> __Marshaller_viam_app_v1_GetRobotAPIKeysRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotAPIKeysRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRobotAPIKeysResponse> __Marshaller_viam_app_v1_GetRobotAPIKeysResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRobotAPIKeysResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.MarkPartAsMainRequest> __Marshaller_viam_app_v1_MarkPartAsMainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.MarkPartAsMainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.MarkPartAsMainResponse> __Marshaller_viam_app_v1_MarkPartAsMainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.MarkPartAsMainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.MarkPartForRestartRequest> __Marshaller_viam_app_v1_MarkPartForRestartRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.MarkPartForRestartRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.MarkPartForRestartResponse> __Marshaller_viam_app_v1_MarkPartForRestartResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.MarkPartForRestartResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateRobotPartSecretRequest> __Marshaller_viam_app_v1_CreateRobotPartSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateRobotPartSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateRobotPartSecretResponse> __Marshaller_viam_app_v1_CreateRobotPartSecretResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateRobotPartSecretResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteRobotPartSecretRequest> __Marshaller_viam_app_v1_DeleteRobotPartSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteRobotPartSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteRobotPartSecretResponse> __Marshaller_viam_app_v1_DeleteRobotPartSecretResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteRobotPartSecretResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListRobotsRequest> __Marshaller_viam_app_v1_ListRobotsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListRobotsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListRobotsResponse> __Marshaller_viam_app_v1_ListRobotsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListRobotsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.NewRobotRequest> __Marshaller_viam_app_v1_NewRobotRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.NewRobotRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.NewRobotResponse> __Marshaller_viam_app_v1_NewRobotResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.NewRobotResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRobotRequest> __Marshaller_viam_app_v1_UpdateRobotRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRobotRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRobotResponse> __Marshaller_viam_app_v1_UpdateRobotResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRobotResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteRobotRequest> __Marshaller_viam_app_v1_DeleteRobotRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteRobotRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteRobotResponse> __Marshaller_viam_app_v1_DeleteRobotResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteRobotResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListFragmentsRequest> __Marshaller_viam_app_v1_ListFragmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListFragmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListFragmentsResponse> __Marshaller_viam_app_v1_ListFragmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListFragmentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetFragmentRequest> __Marshaller_viam_app_v1_GetFragmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetFragmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetFragmentResponse> __Marshaller_viam_app_v1_GetFragmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetFragmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateFragmentRequest> __Marshaller_viam_app_v1_CreateFragmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateFragmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateFragmentResponse> __Marshaller_viam_app_v1_CreateFragmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateFragmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateFragmentRequest> __Marshaller_viam_app_v1_UpdateFragmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateFragmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateFragmentResponse> __Marshaller_viam_app_v1_UpdateFragmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateFragmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteFragmentRequest> __Marshaller_viam_app_v1_DeleteFragmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteFragmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteFragmentResponse> __Marshaller_viam_app_v1_DeleteFragmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteFragmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListNestedFragmentsRequest> __Marshaller_viam_app_v1_ListNestedFragmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListNestedFragmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListNestedFragmentsResponse> __Marshaller_viam_app_v1_ListNestedFragmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListNestedFragmentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListMachineFragmentsRequest> __Marshaller_viam_app_v1_ListMachineFragmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListMachineFragmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListMachineFragmentsResponse> __Marshaller_viam_app_v1_ListMachineFragmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListMachineFragmentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListMachineSummariesRequest> __Marshaller_viam_app_v1_ListMachineSummariesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListMachineSummariesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListMachineSummariesResponse> __Marshaller_viam_app_v1_ListMachineSummariesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListMachineSummariesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetFragmentHistoryRequest> __Marshaller_viam_app_v1_GetFragmentHistoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetFragmentHistoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetFragmentHistoryResponse> __Marshaller_viam_app_v1_GetFragmentHistoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetFragmentHistoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetFragmentUsageRequest> __Marshaller_viam_app_v1_GetFragmentUsageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetFragmentUsageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetFragmentUsageResponse> __Marshaller_viam_app_v1_GetFragmentUsageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetFragmentUsageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.SetFragmentTagRequest> __Marshaller_viam_app_v1_SetFragmentTagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.SetFragmentTagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.SetFragmentTagResponse> __Marshaller_viam_app_v1_SetFragmentTagResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.SetFragmentTagResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteFragmentTagRequest> __Marshaller_viam_app_v1_DeleteFragmentTagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteFragmentTagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteFragmentTagResponse> __Marshaller_viam_app_v1_DeleteFragmentTagResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteFragmentTagResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.AddRoleRequest> __Marshaller_viam_app_v1_AddRoleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.AddRoleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.AddRoleResponse> __Marshaller_viam_app_v1_AddRoleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.AddRoleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.RemoveRoleRequest> __Marshaller_viam_app_v1_RemoveRoleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.RemoveRoleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.RemoveRoleResponse> __Marshaller_viam_app_v1_RemoveRoleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.RemoveRoleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ChangeRoleRequest> __Marshaller_viam_app_v1_ChangeRoleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ChangeRoleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ChangeRoleResponse> __Marshaller_viam_app_v1_ChangeRoleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ChangeRoleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListAuthorizationsRequest> __Marshaller_viam_app_v1_ListAuthorizationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListAuthorizationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListAuthorizationsResponse> __Marshaller_viam_app_v1_ListAuthorizationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListAuthorizationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CheckPermissionsRequest> __Marshaller_viam_app_v1_CheckPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CheckPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CheckPermissionsResponse> __Marshaller_viam_app_v1_CheckPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CheckPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRegistryItemRequest> __Marshaller_viam_app_v1_GetRegistryItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRegistryItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetRegistryItemResponse> __Marshaller_viam_app_v1_GetRegistryItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetRegistryItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateRegistryItemRequest> __Marshaller_viam_app_v1_CreateRegistryItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateRegistryItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateRegistryItemResponse> __Marshaller_viam_app_v1_CreateRegistryItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateRegistryItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRegistryItemRequest> __Marshaller_viam_app_v1_UpdateRegistryItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRegistryItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateRegistryItemResponse> __Marshaller_viam_app_v1_UpdateRegistryItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateRegistryItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListRegistryItemsRequest> __Marshaller_viam_app_v1_ListRegistryItemsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListRegistryItemsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListRegistryItemsResponse> __Marshaller_viam_app_v1_ListRegistryItemsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListRegistryItemsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteRegistryItemRequest> __Marshaller_viam_app_v1_DeleteRegistryItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteRegistryItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteRegistryItemResponse> __Marshaller_viam_app_v1_DeleteRegistryItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteRegistryItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.RenameRegistryItemRequest> __Marshaller_viam_app_v1_RenameRegistryItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.RenameRegistryItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.RenameRegistryItemResponse> __Marshaller_viam_app_v1_RenameRegistryItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.RenameRegistryItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.TransferRegistryItemRequest> __Marshaller_viam_app_v1_TransferRegistryItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.TransferRegistryItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.TransferRegistryItemResponse> __Marshaller_viam_app_v1_TransferRegistryItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.TransferRegistryItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateModuleRequest> __Marshaller_viam_app_v1_CreateModuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateModuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateModuleResponse> __Marshaller_viam_app_v1_CreateModuleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateModuleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateModuleRequest> __Marshaller_viam_app_v1_UpdateModuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateModuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UpdateModuleResponse> __Marshaller_viam_app_v1_UpdateModuleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UpdateModuleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UploadModuleFileRequest> __Marshaller_viam_app_v1_UploadModuleFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UploadModuleFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.UploadModuleFileResponse> __Marshaller_viam_app_v1_UploadModuleFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.UploadModuleFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetModuleRequest> __Marshaller_viam_app_v1_GetModuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetModuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetModuleResponse> __Marshaller_viam_app_v1_GetModuleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetModuleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListModulesRequest> __Marshaller_viam_app_v1_ListModulesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListModulesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListModulesResponse> __Marshaller_viam_app_v1_ListModulesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListModulesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateKeyRequest> __Marshaller_viam_app_v1_CreateKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateKeyResponse> __Marshaller_viam_app_v1_CreateKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteKeyRequest> __Marshaller_viam_app_v1_DeleteKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.DeleteKeyResponse> __Marshaller_viam_app_v1_DeleteKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.DeleteKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListKeysRequest> __Marshaller_viam_app_v1_ListKeysRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListKeysRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.ListKeysResponse> __Marshaller_viam_app_v1_ListKeysResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.ListKeysResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.RenameKeyRequest> __Marshaller_viam_app_v1_RenameKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.RenameKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.RenameKeyResponse> __Marshaller_viam_app_v1_RenameKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.RenameKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.RotateKeyRequest> __Marshaller_viam_app_v1_RotateKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.RotateKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.RotateKeyResponse> __Marshaller_viam_app_v1_RotateKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.RotateKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest> __Marshaller_viam_app_v1_CreateKeyFromExistingKeyAuthorizationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse> __Marshaller_viam_app_v1_CreateKeyFromExistingKeyAuthorizationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetAppContentRequest> __Marshaller_viam_app_v1_GetAppContentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetAppContentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.V1.GetAppContentResponse> __Marshaller_viam_app_v1_GetAppContentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.V1.GetAppContentResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetUserIDByEmailRequest, global::Viam.App.V1.GetUserIDByEmailResponse> __Method_GetUserIDByEmail = new grpc::Method<global::Viam.App.V1.GetUserIDByEmailRequest, global::Viam.App.V1.GetUserIDByEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserIDByEmail",
        __Marshaller_viam_app_v1_GetUserIDByEmailRequest,
        __Marshaller_viam_app_v1_GetUserIDByEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateOrganizationRequest, global::Viam.App.V1.CreateOrganizationResponse> __Method_CreateOrganization = new grpc::Method<global::Viam.App.V1.CreateOrganizationRequest, global::Viam.App.V1.CreateOrganizationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateOrganization",
        __Marshaller_viam_app_v1_CreateOrganizationRequest,
        __Marshaller_viam_app_v1_CreateOrganizationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListOrganizationsRequest, global::Viam.App.V1.ListOrganizationsResponse> __Method_ListOrganizations = new grpc::Method<global::Viam.App.V1.ListOrganizationsRequest, global::Viam.App.V1.ListOrganizationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrganizations",
        __Marshaller_viam_app_v1_ListOrganizationsRequest,
        __Marshaller_viam_app_v1_ListOrganizationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest, global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse> __Method_GetOrganizationsWithAccessToLocation = new grpc::Method<global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest, global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationsWithAccessToLocation",
        __Marshaller_viam_app_v1_GetOrganizationsWithAccessToLocationRequest,
        __Marshaller_viam_app_v1_GetOrganizationsWithAccessToLocationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListOrganizationsByUserRequest, global::Viam.App.V1.ListOrganizationsByUserResponse> __Method_ListOrganizationsByUser = new grpc::Method<global::Viam.App.V1.ListOrganizationsByUserRequest, global::Viam.App.V1.ListOrganizationsByUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrganizationsByUser",
        __Marshaller_viam_app_v1_ListOrganizationsByUserRequest,
        __Marshaller_viam_app_v1_ListOrganizationsByUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.SearchOrganizationsRequest, global::Viam.App.V1.SearchOrganizationsResponse> __Method_SearchOrganizations = new grpc::Method<global::Viam.App.V1.SearchOrganizationsRequest, global::Viam.App.V1.SearchOrganizationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchOrganizations",
        __Marshaller_viam_app_v1_SearchOrganizationsRequest,
        __Marshaller_viam_app_v1_SearchOrganizationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetOrganizationRequest, global::Viam.App.V1.GetOrganizationResponse> __Method_GetOrganization = new grpc::Method<global::Viam.App.V1.GetOrganizationRequest, global::Viam.App.V1.GetOrganizationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganization",
        __Marshaller_viam_app_v1_GetOrganizationRequest,
        __Marshaller_viam_app_v1_GetOrganizationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest, global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse> __Method_GetOrganizationNamespaceAvailability = new grpc::Method<global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest, global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationNamespaceAvailability",
        __Marshaller_viam_app_v1_GetOrganizationNamespaceAvailabilityRequest,
        __Marshaller_viam_app_v1_GetOrganizationNamespaceAvailabilityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateOrganizationRequest, global::Viam.App.V1.UpdateOrganizationResponse> __Method_UpdateOrganization = new grpc::Method<global::Viam.App.V1.UpdateOrganizationRequest, global::Viam.App.V1.UpdateOrganizationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrganization",
        __Marshaller_viam_app_v1_UpdateOrganizationRequest,
        __Marshaller_viam_app_v1_UpdateOrganizationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateOrganizationNamespaceRequest, global::Viam.App.V1.UpdateOrganizationNamespaceResponse> __Method_UpdateOrganizationNamespace = new grpc::Method<global::Viam.App.V1.UpdateOrganizationNamespaceRequest, global::Viam.App.V1.UpdateOrganizationNamespaceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrganizationNamespace",
        __Marshaller_viam_app_v1_UpdateOrganizationNamespaceRequest,
        __Marshaller_viam_app_v1_UpdateOrganizationNamespaceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteOrganizationRequest, global::Viam.App.V1.DeleteOrganizationResponse> __Method_DeleteOrganization = new grpc::Method<global::Viam.App.V1.DeleteOrganizationRequest, global::Viam.App.V1.DeleteOrganizationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOrganization",
        __Marshaller_viam_app_v1_DeleteOrganizationRequest,
        __Marshaller_viam_app_v1_DeleteOrganizationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetOrganizationMetadataRequest, global::Viam.App.V1.GetOrganizationMetadataResponse> __Method_GetOrganizationMetadata = new grpc::Method<global::Viam.App.V1.GetOrganizationMetadataRequest, global::Viam.App.V1.GetOrganizationMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationMetadata",
        __Marshaller_viam_app_v1_GetOrganizationMetadataRequest,
        __Marshaller_viam_app_v1_GetOrganizationMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateOrganizationMetadataRequest, global::Viam.App.V1.UpdateOrganizationMetadataResponse> __Method_UpdateOrganizationMetadata = new grpc::Method<global::Viam.App.V1.UpdateOrganizationMetadataRequest, global::Viam.App.V1.UpdateOrganizationMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrganizationMetadata",
        __Marshaller_viam_app_v1_UpdateOrganizationMetadataRequest,
        __Marshaller_viam_app_v1_UpdateOrganizationMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListOrganizationMembersRequest, global::Viam.App.V1.ListOrganizationMembersResponse> __Method_ListOrganizationMembers = new grpc::Method<global::Viam.App.V1.ListOrganizationMembersRequest, global::Viam.App.V1.ListOrganizationMembersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrganizationMembers",
        __Marshaller_viam_app_v1_ListOrganizationMembersRequest,
        __Marshaller_viam_app_v1_ListOrganizationMembersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateOrganizationInviteRequest, global::Viam.App.V1.CreateOrganizationInviteResponse> __Method_CreateOrganizationInvite = new grpc::Method<global::Viam.App.V1.CreateOrganizationInviteRequest, global::Viam.App.V1.CreateOrganizationInviteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateOrganizationInvite",
        __Marshaller_viam_app_v1_CreateOrganizationInviteRequest,
        __Marshaller_viam_app_v1_CreateOrganizationInviteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest, global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse> __Method_UpdateOrganizationInviteAuthorizations = new grpc::Method<global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest, global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrganizationInviteAuthorizations",
        __Marshaller_viam_app_v1_UpdateOrganizationInviteAuthorizationsRequest,
        __Marshaller_viam_app_v1_UpdateOrganizationInviteAuthorizationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteOrganizationMemberRequest, global::Viam.App.V1.DeleteOrganizationMemberResponse> __Method_DeleteOrganizationMember = new grpc::Method<global::Viam.App.V1.DeleteOrganizationMemberRequest, global::Viam.App.V1.DeleteOrganizationMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOrganizationMember",
        __Marshaller_viam_app_v1_DeleteOrganizationMemberRequest,
        __Marshaller_viam_app_v1_DeleteOrganizationMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteOrganizationInviteRequest, global::Viam.App.V1.DeleteOrganizationInviteResponse> __Method_DeleteOrganizationInvite = new grpc::Method<global::Viam.App.V1.DeleteOrganizationInviteRequest, global::Viam.App.V1.DeleteOrganizationInviteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOrganizationInvite",
        __Marshaller_viam_app_v1_DeleteOrganizationInviteRequest,
        __Marshaller_viam_app_v1_DeleteOrganizationInviteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ResendOrganizationInviteRequest, global::Viam.App.V1.ResendOrganizationInviteResponse> __Method_ResendOrganizationInvite = new grpc::Method<global::Viam.App.V1.ResendOrganizationInviteRequest, global::Viam.App.V1.ResendOrganizationInviteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendOrganizationInvite",
        __Marshaller_viam_app_v1_ResendOrganizationInviteRequest,
        __Marshaller_viam_app_v1_ResendOrganizationInviteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.EnableBillingServiceRequest, global::Viam.App.V1.EnableBillingServiceResponse> __Method_EnableBillingService = new grpc::Method<global::Viam.App.V1.EnableBillingServiceRequest, global::Viam.App.V1.EnableBillingServiceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnableBillingService",
        __Marshaller_viam_app_v1_EnableBillingServiceRequest,
        __Marshaller_viam_app_v1_EnableBillingServiceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DisableBillingServiceRequest, global::Viam.App.V1.DisableBillingServiceResponse> __Method_DisableBillingService = new grpc::Method<global::Viam.App.V1.DisableBillingServiceRequest, global::Viam.App.V1.DisableBillingServiceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableBillingService",
        __Marshaller_viam_app_v1_DisableBillingServiceRequest,
        __Marshaller_viam_app_v1_DisableBillingServiceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateBillingServiceRequest, global::Viam.App.V1.UpdateBillingServiceResponse> __Method_UpdateBillingService = new grpc::Method<global::Viam.App.V1.UpdateBillingServiceRequest, global::Viam.App.V1.UpdateBillingServiceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBillingService",
        __Marshaller_viam_app_v1_UpdateBillingServiceRequest,
        __Marshaller_viam_app_v1_UpdateBillingServiceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetBillingServiceConfigRequest, global::Viam.App.V1.GetBillingServiceConfigResponse> __Method_GetBillingServiceConfig = new grpc::Method<global::Viam.App.V1.GetBillingServiceConfigRequest, global::Viam.App.V1.GetBillingServiceConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBillingServiceConfig",
        __Marshaller_viam_app_v1_GetBillingServiceConfigRequest,
        __Marshaller_viam_app_v1_GetBillingServiceConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.OrganizationSetSupportEmailRequest, global::Viam.App.V1.OrganizationSetSupportEmailResponse> __Method_OrganizationSetSupportEmail = new grpc::Method<global::Viam.App.V1.OrganizationSetSupportEmailRequest, global::Viam.App.V1.OrganizationSetSupportEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OrganizationSetSupportEmail",
        __Marshaller_viam_app_v1_OrganizationSetSupportEmailRequest,
        __Marshaller_viam_app_v1_OrganizationSetSupportEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.OrganizationGetSupportEmailRequest, global::Viam.App.V1.OrganizationGetSupportEmailResponse> __Method_OrganizationGetSupportEmail = new grpc::Method<global::Viam.App.V1.OrganizationGetSupportEmailRequest, global::Viam.App.V1.OrganizationGetSupportEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OrganizationGetSupportEmail",
        __Marshaller_viam_app_v1_OrganizationGetSupportEmailRequest,
        __Marshaller_viam_app_v1_OrganizationGetSupportEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.OrganizationSetLogoRequest, global::Viam.App.V1.OrganizationSetLogoResponse> __Method_OrganizationSetLogo = new grpc::Method<global::Viam.App.V1.OrganizationSetLogoRequest, global::Viam.App.V1.OrganizationSetLogoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OrganizationSetLogo",
        __Marshaller_viam_app_v1_OrganizationSetLogoRequest,
        __Marshaller_viam_app_v1_OrganizationSetLogoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.OrganizationGetLogoRequest, global::Viam.App.V1.OrganizationGetLogoResponse> __Method_OrganizationGetLogo = new grpc::Method<global::Viam.App.V1.OrganizationGetLogoRequest, global::Viam.App.V1.OrganizationGetLogoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OrganizationGetLogo",
        __Marshaller_viam_app_v1_OrganizationGetLogoRequest,
        __Marshaller_viam_app_v1_OrganizationGetLogoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.EnableAuthServiceRequest, global::Viam.App.V1.EnableAuthServiceResponse> __Method_EnableAuthService = new grpc::Method<global::Viam.App.V1.EnableAuthServiceRequest, global::Viam.App.V1.EnableAuthServiceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnableAuthService",
        __Marshaller_viam_app_v1_EnableAuthServiceRequest,
        __Marshaller_viam_app_v1_EnableAuthServiceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DisableAuthServiceRequest, global::Viam.App.V1.DisableAuthServiceResponse> __Method_DisableAuthService = new grpc::Method<global::Viam.App.V1.DisableAuthServiceRequest, global::Viam.App.V1.DisableAuthServiceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableAuthService",
        __Marshaller_viam_app_v1_DisableAuthServiceRequest,
        __Marshaller_viam_app_v1_DisableAuthServiceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateOAuthAppRequest, global::Viam.App.V1.CreateOAuthAppResponse> __Method_CreateOAuthApp = new grpc::Method<global::Viam.App.V1.CreateOAuthAppRequest, global::Viam.App.V1.CreateOAuthAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateOAuthApp",
        __Marshaller_viam_app_v1_CreateOAuthAppRequest,
        __Marshaller_viam_app_v1_CreateOAuthAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ReadOAuthAppRequest, global::Viam.App.V1.ReadOAuthAppResponse> __Method_ReadOAuthApp = new grpc::Method<global::Viam.App.V1.ReadOAuthAppRequest, global::Viam.App.V1.ReadOAuthAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadOAuthApp",
        __Marshaller_viam_app_v1_ReadOAuthAppRequest,
        __Marshaller_viam_app_v1_ReadOAuthAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateOAuthAppRequest, global::Viam.App.V1.UpdateOAuthAppResponse> __Method_UpdateOAuthApp = new grpc::Method<global::Viam.App.V1.UpdateOAuthAppRequest, global::Viam.App.V1.UpdateOAuthAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOAuthApp",
        __Marshaller_viam_app_v1_UpdateOAuthAppRequest,
        __Marshaller_viam_app_v1_UpdateOAuthAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteOAuthAppRequest, global::Viam.App.V1.DeleteOAuthAppResponse> __Method_DeleteOAuthApp = new grpc::Method<global::Viam.App.V1.DeleteOAuthAppRequest, global::Viam.App.V1.DeleteOAuthAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOAuthApp",
        __Marshaller_viam_app_v1_DeleteOAuthAppRequest,
        __Marshaller_viam_app_v1_DeleteOAuthAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListOAuthAppsRequest, global::Viam.App.V1.ListOAuthAppsResponse> __Method_ListOAuthApps = new grpc::Method<global::Viam.App.V1.ListOAuthAppsRequest, global::Viam.App.V1.ListOAuthAppsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOAuthApps",
        __Marshaller_viam_app_v1_ListOAuthAppsRequest,
        __Marshaller_viam_app_v1_ListOAuthAppsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateLocationRequest, global::Viam.App.V1.CreateLocationResponse> __Method_CreateLocation = new grpc::Method<global::Viam.App.V1.CreateLocationRequest, global::Viam.App.V1.CreateLocationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateLocation",
        __Marshaller_viam_app_v1_CreateLocationRequest,
        __Marshaller_viam_app_v1_CreateLocationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetLocationRequest, global::Viam.App.V1.GetLocationResponse> __Method_GetLocation = new grpc::Method<global::Viam.App.V1.GetLocationRequest, global::Viam.App.V1.GetLocationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLocation",
        __Marshaller_viam_app_v1_GetLocationRequest,
        __Marshaller_viam_app_v1_GetLocationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateLocationRequest, global::Viam.App.V1.UpdateLocationResponse> __Method_UpdateLocation = new grpc::Method<global::Viam.App.V1.UpdateLocationRequest, global::Viam.App.V1.UpdateLocationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateLocation",
        __Marshaller_viam_app_v1_UpdateLocationRequest,
        __Marshaller_viam_app_v1_UpdateLocationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteLocationRequest, global::Viam.App.V1.DeleteLocationResponse> __Method_DeleteLocation = new grpc::Method<global::Viam.App.V1.DeleteLocationRequest, global::Viam.App.V1.DeleteLocationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteLocation",
        __Marshaller_viam_app_v1_DeleteLocationRequest,
        __Marshaller_viam_app_v1_DeleteLocationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetLocationMetadataRequest, global::Viam.App.V1.GetLocationMetadataResponse> __Method_GetLocationMetadata = new grpc::Method<global::Viam.App.V1.GetLocationMetadataRequest, global::Viam.App.V1.GetLocationMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLocationMetadata",
        __Marshaller_viam_app_v1_GetLocationMetadataRequest,
        __Marshaller_viam_app_v1_GetLocationMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateLocationMetadataRequest, global::Viam.App.V1.UpdateLocationMetadataResponse> __Method_UpdateLocationMetadata = new grpc::Method<global::Viam.App.V1.UpdateLocationMetadataRequest, global::Viam.App.V1.UpdateLocationMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateLocationMetadata",
        __Marshaller_viam_app_v1_UpdateLocationMetadataRequest,
        __Marshaller_viam_app_v1_UpdateLocationMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListLocationsRequest, global::Viam.App.V1.ListLocationsResponse> __Method_ListLocations = new grpc::Method<global::Viam.App.V1.ListLocationsRequest, global::Viam.App.V1.ListLocationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLocations",
        __Marshaller_viam_app_v1_ListLocationsRequest,
        __Marshaller_viam_app_v1_ListLocationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ShareLocationRequest, global::Viam.App.V1.ShareLocationResponse> __Method_ShareLocation = new grpc::Method<global::Viam.App.V1.ShareLocationRequest, global::Viam.App.V1.ShareLocationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ShareLocation",
        __Marshaller_viam_app_v1_ShareLocationRequest,
        __Marshaller_viam_app_v1_ShareLocationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UnshareLocationRequest, global::Viam.App.V1.UnshareLocationResponse> __Method_UnshareLocation = new grpc::Method<global::Viam.App.V1.UnshareLocationRequest, global::Viam.App.V1.UnshareLocationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnshareLocation",
        __Marshaller_viam_app_v1_UnshareLocationRequest,
        __Marshaller_viam_app_v1_UnshareLocationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.LocationAuthRequest, global::Viam.App.V1.LocationAuthResponse> __Method_LocationAuth = new grpc::Method<global::Viam.App.V1.LocationAuthRequest, global::Viam.App.V1.LocationAuthResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LocationAuth",
        __Marshaller_viam_app_v1_LocationAuthRequest,
        __Marshaller_viam_app_v1_LocationAuthResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateLocationSecretRequest, global::Viam.App.V1.CreateLocationSecretResponse> __Method_CreateLocationSecret = new grpc::Method<global::Viam.App.V1.CreateLocationSecretRequest, global::Viam.App.V1.CreateLocationSecretResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateLocationSecret",
        __Marshaller_viam_app_v1_CreateLocationSecretRequest,
        __Marshaller_viam_app_v1_CreateLocationSecretResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteLocationSecretRequest, global::Viam.App.V1.DeleteLocationSecretResponse> __Method_DeleteLocationSecret = new grpc::Method<global::Viam.App.V1.DeleteLocationSecretRequest, global::Viam.App.V1.DeleteLocationSecretResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteLocationSecret",
        __Marshaller_viam_app_v1_DeleteLocationSecretRequest,
        __Marshaller_viam_app_v1_DeleteLocationSecretResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRobotRequest, global::Viam.App.V1.GetRobotResponse> __Method_GetRobot = new grpc::Method<global::Viam.App.V1.GetRobotRequest, global::Viam.App.V1.GetRobotResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRobot",
        __Marshaller_viam_app_v1_GetRobotRequest,
        __Marshaller_viam_app_v1_GetRobotResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRobotMetadataRequest, global::Viam.App.V1.GetRobotMetadataResponse> __Method_GetRobotMetadata = new grpc::Method<global::Viam.App.V1.GetRobotMetadataRequest, global::Viam.App.V1.GetRobotMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRobotMetadata",
        __Marshaller_viam_app_v1_GetRobotMetadataRequest,
        __Marshaller_viam_app_v1_GetRobotMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateRobotMetadataRequest, global::Viam.App.V1.UpdateRobotMetadataResponse> __Method_UpdateRobotMetadata = new grpc::Method<global::Viam.App.V1.UpdateRobotMetadataRequest, global::Viam.App.V1.UpdateRobotMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRobotMetadata",
        __Marshaller_viam_app_v1_UpdateRobotMetadataRequest,
        __Marshaller_viam_app_v1_UpdateRobotMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRoverRentalRobotsRequest, global::Viam.App.V1.GetRoverRentalRobotsResponse> __Method_GetRoverRentalRobots = new grpc::Method<global::Viam.App.V1.GetRoverRentalRobotsRequest, global::Viam.App.V1.GetRoverRentalRobotsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoverRentalRobots",
        __Marshaller_viam_app_v1_GetRoverRentalRobotsRequest,
        __Marshaller_viam_app_v1_GetRoverRentalRobotsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRobotPartsRequest, global::Viam.App.V1.GetRobotPartsResponse> __Method_GetRobotParts = new grpc::Method<global::Viam.App.V1.GetRobotPartsRequest, global::Viam.App.V1.GetRobotPartsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRobotParts",
        __Marshaller_viam_app_v1_GetRobotPartsRequest,
        __Marshaller_viam_app_v1_GetRobotPartsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRobotPartRequest, global::Viam.App.V1.GetRobotPartResponse> __Method_GetRobotPart = new grpc::Method<global::Viam.App.V1.GetRobotPartRequest, global::Viam.App.V1.GetRobotPartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRobotPart",
        __Marshaller_viam_app_v1_GetRobotPartRequest,
        __Marshaller_viam_app_v1_GetRobotPartResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRobotPartLogsRequest, global::Viam.App.V1.GetRobotPartLogsResponse> __Method_GetRobotPartLogs = new grpc::Method<global::Viam.App.V1.GetRobotPartLogsRequest, global::Viam.App.V1.GetRobotPartLogsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRobotPartLogs",
        __Marshaller_viam_app_v1_GetRobotPartLogsRequest,
        __Marshaller_viam_app_v1_GetRobotPartLogsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.TailRobotPartLogsRequest, global::Viam.App.V1.TailRobotPartLogsResponse> __Method_TailRobotPartLogs = new grpc::Method<global::Viam.App.V1.TailRobotPartLogsRequest, global::Viam.App.V1.TailRobotPartLogsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "TailRobotPartLogs",
        __Marshaller_viam_app_v1_TailRobotPartLogsRequest,
        __Marshaller_viam_app_v1_TailRobotPartLogsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRobotPartHistoryRequest, global::Viam.App.V1.GetRobotPartHistoryResponse> __Method_GetRobotPartHistory = new grpc::Method<global::Viam.App.V1.GetRobotPartHistoryRequest, global::Viam.App.V1.GetRobotPartHistoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRobotPartHistory",
        __Marshaller_viam_app_v1_GetRobotPartHistoryRequest,
        __Marshaller_viam_app_v1_GetRobotPartHistoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateRobotPartRequest, global::Viam.App.V1.UpdateRobotPartResponse> __Method_UpdateRobotPart = new grpc::Method<global::Viam.App.V1.UpdateRobotPartRequest, global::Viam.App.V1.UpdateRobotPartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRobotPart",
        __Marshaller_viam_app_v1_UpdateRobotPartRequest,
        __Marshaller_viam_app_v1_UpdateRobotPartResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.NewRobotPartRequest, global::Viam.App.V1.NewRobotPartResponse> __Method_NewRobotPart = new grpc::Method<global::Viam.App.V1.NewRobotPartRequest, global::Viam.App.V1.NewRobotPartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "NewRobotPart",
        __Marshaller_viam_app_v1_NewRobotPartRequest,
        __Marshaller_viam_app_v1_NewRobotPartResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteRobotPartRequest, global::Viam.App.V1.DeleteRobotPartResponse> __Method_DeleteRobotPart = new grpc::Method<global::Viam.App.V1.DeleteRobotPartRequest, global::Viam.App.V1.DeleteRobotPartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRobotPart",
        __Marshaller_viam_app_v1_DeleteRobotPartRequest,
        __Marshaller_viam_app_v1_DeleteRobotPartResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRobotPartMetadataRequest, global::Viam.App.V1.GetRobotPartMetadataResponse> __Method_GetRobotPartMetadata = new grpc::Method<global::Viam.App.V1.GetRobotPartMetadataRequest, global::Viam.App.V1.GetRobotPartMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRobotPartMetadata",
        __Marshaller_viam_app_v1_GetRobotPartMetadataRequest,
        __Marshaller_viam_app_v1_GetRobotPartMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateRobotPartMetadataRequest, global::Viam.App.V1.UpdateRobotPartMetadataResponse> __Method_UpdateRobotPartMetadata = new grpc::Method<global::Viam.App.V1.UpdateRobotPartMetadataRequest, global::Viam.App.V1.UpdateRobotPartMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRobotPartMetadata",
        __Marshaller_viam_app_v1_UpdateRobotPartMetadataRequest,
        __Marshaller_viam_app_v1_UpdateRobotPartMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRobotAPIKeysRequest, global::Viam.App.V1.GetRobotAPIKeysResponse> __Method_GetRobotAPIKeys = new grpc::Method<global::Viam.App.V1.GetRobotAPIKeysRequest, global::Viam.App.V1.GetRobotAPIKeysResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRobotAPIKeys",
        __Marshaller_viam_app_v1_GetRobotAPIKeysRequest,
        __Marshaller_viam_app_v1_GetRobotAPIKeysResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.MarkPartAsMainRequest, global::Viam.App.V1.MarkPartAsMainResponse> __Method_MarkPartAsMain = new grpc::Method<global::Viam.App.V1.MarkPartAsMainRequest, global::Viam.App.V1.MarkPartAsMainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MarkPartAsMain",
        __Marshaller_viam_app_v1_MarkPartAsMainRequest,
        __Marshaller_viam_app_v1_MarkPartAsMainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.MarkPartForRestartRequest, global::Viam.App.V1.MarkPartForRestartResponse> __Method_MarkPartForRestart = new grpc::Method<global::Viam.App.V1.MarkPartForRestartRequest, global::Viam.App.V1.MarkPartForRestartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MarkPartForRestart",
        __Marshaller_viam_app_v1_MarkPartForRestartRequest,
        __Marshaller_viam_app_v1_MarkPartForRestartResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateRobotPartSecretRequest, global::Viam.App.V1.CreateRobotPartSecretResponse> __Method_CreateRobotPartSecret = new grpc::Method<global::Viam.App.V1.CreateRobotPartSecretRequest, global::Viam.App.V1.CreateRobotPartSecretResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRobotPartSecret",
        __Marshaller_viam_app_v1_CreateRobotPartSecretRequest,
        __Marshaller_viam_app_v1_CreateRobotPartSecretResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteRobotPartSecretRequest, global::Viam.App.V1.DeleteRobotPartSecretResponse> __Method_DeleteRobotPartSecret = new grpc::Method<global::Viam.App.V1.DeleteRobotPartSecretRequest, global::Viam.App.V1.DeleteRobotPartSecretResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRobotPartSecret",
        __Marshaller_viam_app_v1_DeleteRobotPartSecretRequest,
        __Marshaller_viam_app_v1_DeleteRobotPartSecretResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListRobotsRequest, global::Viam.App.V1.ListRobotsResponse> __Method_ListRobots = new grpc::Method<global::Viam.App.V1.ListRobotsRequest, global::Viam.App.V1.ListRobotsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRobots",
        __Marshaller_viam_app_v1_ListRobotsRequest,
        __Marshaller_viam_app_v1_ListRobotsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.NewRobotRequest, global::Viam.App.V1.NewRobotResponse> __Method_NewRobot = new grpc::Method<global::Viam.App.V1.NewRobotRequest, global::Viam.App.V1.NewRobotResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "NewRobot",
        __Marshaller_viam_app_v1_NewRobotRequest,
        __Marshaller_viam_app_v1_NewRobotResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateRobotRequest, global::Viam.App.V1.UpdateRobotResponse> __Method_UpdateRobot = new grpc::Method<global::Viam.App.V1.UpdateRobotRequest, global::Viam.App.V1.UpdateRobotResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRobot",
        __Marshaller_viam_app_v1_UpdateRobotRequest,
        __Marshaller_viam_app_v1_UpdateRobotResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteRobotRequest, global::Viam.App.V1.DeleteRobotResponse> __Method_DeleteRobot = new grpc::Method<global::Viam.App.V1.DeleteRobotRequest, global::Viam.App.V1.DeleteRobotResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRobot",
        __Marshaller_viam_app_v1_DeleteRobotRequest,
        __Marshaller_viam_app_v1_DeleteRobotResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListFragmentsRequest, global::Viam.App.V1.ListFragmentsResponse> __Method_ListFragments = new grpc::Method<global::Viam.App.V1.ListFragmentsRequest, global::Viam.App.V1.ListFragmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFragments",
        __Marshaller_viam_app_v1_ListFragmentsRequest,
        __Marshaller_viam_app_v1_ListFragmentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetFragmentRequest, global::Viam.App.V1.GetFragmentResponse> __Method_GetFragment = new grpc::Method<global::Viam.App.V1.GetFragmentRequest, global::Viam.App.V1.GetFragmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFragment",
        __Marshaller_viam_app_v1_GetFragmentRequest,
        __Marshaller_viam_app_v1_GetFragmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateFragmentRequest, global::Viam.App.V1.CreateFragmentResponse> __Method_CreateFragment = new grpc::Method<global::Viam.App.V1.CreateFragmentRequest, global::Viam.App.V1.CreateFragmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFragment",
        __Marshaller_viam_app_v1_CreateFragmentRequest,
        __Marshaller_viam_app_v1_CreateFragmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateFragmentRequest, global::Viam.App.V1.UpdateFragmentResponse> __Method_UpdateFragment = new grpc::Method<global::Viam.App.V1.UpdateFragmentRequest, global::Viam.App.V1.UpdateFragmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFragment",
        __Marshaller_viam_app_v1_UpdateFragmentRequest,
        __Marshaller_viam_app_v1_UpdateFragmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteFragmentRequest, global::Viam.App.V1.DeleteFragmentResponse> __Method_DeleteFragment = new grpc::Method<global::Viam.App.V1.DeleteFragmentRequest, global::Viam.App.V1.DeleteFragmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFragment",
        __Marshaller_viam_app_v1_DeleteFragmentRequest,
        __Marshaller_viam_app_v1_DeleteFragmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListNestedFragmentsRequest, global::Viam.App.V1.ListNestedFragmentsResponse> __Method_ListNestedFragments = new grpc::Method<global::Viam.App.V1.ListNestedFragmentsRequest, global::Viam.App.V1.ListNestedFragmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNestedFragments",
        __Marshaller_viam_app_v1_ListNestedFragmentsRequest,
        __Marshaller_viam_app_v1_ListNestedFragmentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListMachineFragmentsRequest, global::Viam.App.V1.ListMachineFragmentsResponse> __Method_ListMachineFragments = new grpc::Method<global::Viam.App.V1.ListMachineFragmentsRequest, global::Viam.App.V1.ListMachineFragmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMachineFragments",
        __Marshaller_viam_app_v1_ListMachineFragmentsRequest,
        __Marshaller_viam_app_v1_ListMachineFragmentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListMachineSummariesRequest, global::Viam.App.V1.ListMachineSummariesResponse> __Method_ListMachineSummaries = new grpc::Method<global::Viam.App.V1.ListMachineSummariesRequest, global::Viam.App.V1.ListMachineSummariesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMachineSummaries",
        __Marshaller_viam_app_v1_ListMachineSummariesRequest,
        __Marshaller_viam_app_v1_ListMachineSummariesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetFragmentHistoryRequest, global::Viam.App.V1.GetFragmentHistoryResponse> __Method_GetFragmentHistory = new grpc::Method<global::Viam.App.V1.GetFragmentHistoryRequest, global::Viam.App.V1.GetFragmentHistoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFragmentHistory",
        __Marshaller_viam_app_v1_GetFragmentHistoryRequest,
        __Marshaller_viam_app_v1_GetFragmentHistoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetFragmentUsageRequest, global::Viam.App.V1.GetFragmentUsageResponse> __Method_GetFragmentUsage = new grpc::Method<global::Viam.App.V1.GetFragmentUsageRequest, global::Viam.App.V1.GetFragmentUsageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFragmentUsage",
        __Marshaller_viam_app_v1_GetFragmentUsageRequest,
        __Marshaller_viam_app_v1_GetFragmentUsageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.SetFragmentTagRequest, global::Viam.App.V1.SetFragmentTagResponse> __Method_SetFragmentTag = new grpc::Method<global::Viam.App.V1.SetFragmentTagRequest, global::Viam.App.V1.SetFragmentTagResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetFragmentTag",
        __Marshaller_viam_app_v1_SetFragmentTagRequest,
        __Marshaller_viam_app_v1_SetFragmentTagResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteFragmentTagRequest, global::Viam.App.V1.DeleteFragmentTagResponse> __Method_DeleteFragmentTag = new grpc::Method<global::Viam.App.V1.DeleteFragmentTagRequest, global::Viam.App.V1.DeleteFragmentTagResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFragmentTag",
        __Marshaller_viam_app_v1_DeleteFragmentTagRequest,
        __Marshaller_viam_app_v1_DeleteFragmentTagResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.AddRoleRequest, global::Viam.App.V1.AddRoleResponse> __Method_AddRole = new grpc::Method<global::Viam.App.V1.AddRoleRequest, global::Viam.App.V1.AddRoleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddRole",
        __Marshaller_viam_app_v1_AddRoleRequest,
        __Marshaller_viam_app_v1_AddRoleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.RemoveRoleRequest, global::Viam.App.V1.RemoveRoleResponse> __Method_RemoveRole = new grpc::Method<global::Viam.App.V1.RemoveRoleRequest, global::Viam.App.V1.RemoveRoleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveRole",
        __Marshaller_viam_app_v1_RemoveRoleRequest,
        __Marshaller_viam_app_v1_RemoveRoleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ChangeRoleRequest, global::Viam.App.V1.ChangeRoleResponse> __Method_ChangeRole = new grpc::Method<global::Viam.App.V1.ChangeRoleRequest, global::Viam.App.V1.ChangeRoleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeRole",
        __Marshaller_viam_app_v1_ChangeRoleRequest,
        __Marshaller_viam_app_v1_ChangeRoleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListAuthorizationsRequest, global::Viam.App.V1.ListAuthorizationsResponse> __Method_ListAuthorizations = new grpc::Method<global::Viam.App.V1.ListAuthorizationsRequest, global::Viam.App.V1.ListAuthorizationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAuthorizations",
        __Marshaller_viam_app_v1_ListAuthorizationsRequest,
        __Marshaller_viam_app_v1_ListAuthorizationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CheckPermissionsRequest, global::Viam.App.V1.CheckPermissionsResponse> __Method_CheckPermissions = new grpc::Method<global::Viam.App.V1.CheckPermissionsRequest, global::Viam.App.V1.CheckPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckPermissions",
        __Marshaller_viam_app_v1_CheckPermissionsRequest,
        __Marshaller_viam_app_v1_CheckPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetRegistryItemRequest, global::Viam.App.V1.GetRegistryItemResponse> __Method_GetRegistryItem = new grpc::Method<global::Viam.App.V1.GetRegistryItemRequest, global::Viam.App.V1.GetRegistryItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRegistryItem",
        __Marshaller_viam_app_v1_GetRegistryItemRequest,
        __Marshaller_viam_app_v1_GetRegistryItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateRegistryItemRequest, global::Viam.App.V1.CreateRegistryItemResponse> __Method_CreateRegistryItem = new grpc::Method<global::Viam.App.V1.CreateRegistryItemRequest, global::Viam.App.V1.CreateRegistryItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRegistryItem",
        __Marshaller_viam_app_v1_CreateRegistryItemRequest,
        __Marshaller_viam_app_v1_CreateRegistryItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateRegistryItemRequest, global::Viam.App.V1.UpdateRegistryItemResponse> __Method_UpdateRegistryItem = new grpc::Method<global::Viam.App.V1.UpdateRegistryItemRequest, global::Viam.App.V1.UpdateRegistryItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRegistryItem",
        __Marshaller_viam_app_v1_UpdateRegistryItemRequest,
        __Marshaller_viam_app_v1_UpdateRegistryItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListRegistryItemsRequest, global::Viam.App.V1.ListRegistryItemsResponse> __Method_ListRegistryItems = new grpc::Method<global::Viam.App.V1.ListRegistryItemsRequest, global::Viam.App.V1.ListRegistryItemsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRegistryItems",
        __Marshaller_viam_app_v1_ListRegistryItemsRequest,
        __Marshaller_viam_app_v1_ListRegistryItemsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteRegistryItemRequest, global::Viam.App.V1.DeleteRegistryItemResponse> __Method_DeleteRegistryItem = new grpc::Method<global::Viam.App.V1.DeleteRegistryItemRequest, global::Viam.App.V1.DeleteRegistryItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRegistryItem",
        __Marshaller_viam_app_v1_DeleteRegistryItemRequest,
        __Marshaller_viam_app_v1_DeleteRegistryItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.RenameRegistryItemRequest, global::Viam.App.V1.RenameRegistryItemResponse> __Method_RenameRegistryItem = new grpc::Method<global::Viam.App.V1.RenameRegistryItemRequest, global::Viam.App.V1.RenameRegistryItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RenameRegistryItem",
        __Marshaller_viam_app_v1_RenameRegistryItemRequest,
        __Marshaller_viam_app_v1_RenameRegistryItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.TransferRegistryItemRequest, global::Viam.App.V1.TransferRegistryItemResponse> __Method_TransferRegistryItem = new grpc::Method<global::Viam.App.V1.TransferRegistryItemRequest, global::Viam.App.V1.TransferRegistryItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransferRegistryItem",
        __Marshaller_viam_app_v1_TransferRegistryItemRequest,
        __Marshaller_viam_app_v1_TransferRegistryItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateModuleRequest, global::Viam.App.V1.CreateModuleResponse> __Method_CreateModule = new grpc::Method<global::Viam.App.V1.CreateModuleRequest, global::Viam.App.V1.CreateModuleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateModule",
        __Marshaller_viam_app_v1_CreateModuleRequest,
        __Marshaller_viam_app_v1_CreateModuleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UpdateModuleRequest, global::Viam.App.V1.UpdateModuleResponse> __Method_UpdateModule = new grpc::Method<global::Viam.App.V1.UpdateModuleRequest, global::Viam.App.V1.UpdateModuleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateModule",
        __Marshaller_viam_app_v1_UpdateModuleRequest,
        __Marshaller_viam_app_v1_UpdateModuleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.UploadModuleFileRequest, global::Viam.App.V1.UploadModuleFileResponse> __Method_UploadModuleFile = new grpc::Method<global::Viam.App.V1.UploadModuleFileRequest, global::Viam.App.V1.UploadModuleFileResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "UploadModuleFile",
        __Marshaller_viam_app_v1_UploadModuleFileRequest,
        __Marshaller_viam_app_v1_UploadModuleFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetModuleRequest, global::Viam.App.V1.GetModuleResponse> __Method_GetModule = new grpc::Method<global::Viam.App.V1.GetModuleRequest, global::Viam.App.V1.GetModuleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetModule",
        __Marshaller_viam_app_v1_GetModuleRequest,
        __Marshaller_viam_app_v1_GetModuleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListModulesRequest, global::Viam.App.V1.ListModulesResponse> __Method_ListModules = new grpc::Method<global::Viam.App.V1.ListModulesRequest, global::Viam.App.V1.ListModulesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListModules",
        __Marshaller_viam_app_v1_ListModulesRequest,
        __Marshaller_viam_app_v1_ListModulesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateKeyRequest, global::Viam.App.V1.CreateKeyResponse> __Method_CreateKey = new grpc::Method<global::Viam.App.V1.CreateKeyRequest, global::Viam.App.V1.CreateKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateKey",
        __Marshaller_viam_app_v1_CreateKeyRequest,
        __Marshaller_viam_app_v1_CreateKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.DeleteKeyRequest, global::Viam.App.V1.DeleteKeyResponse> __Method_DeleteKey = new grpc::Method<global::Viam.App.V1.DeleteKeyRequest, global::Viam.App.V1.DeleteKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteKey",
        __Marshaller_viam_app_v1_DeleteKeyRequest,
        __Marshaller_viam_app_v1_DeleteKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.ListKeysRequest, global::Viam.App.V1.ListKeysResponse> __Method_ListKeys = new grpc::Method<global::Viam.App.V1.ListKeysRequest, global::Viam.App.V1.ListKeysResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListKeys",
        __Marshaller_viam_app_v1_ListKeysRequest,
        __Marshaller_viam_app_v1_ListKeysResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.RenameKeyRequest, global::Viam.App.V1.RenameKeyResponse> __Method_RenameKey = new grpc::Method<global::Viam.App.V1.RenameKeyRequest, global::Viam.App.V1.RenameKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RenameKey",
        __Marshaller_viam_app_v1_RenameKeyRequest,
        __Marshaller_viam_app_v1_RenameKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.RotateKeyRequest, global::Viam.App.V1.RotateKeyResponse> __Method_RotateKey = new grpc::Method<global::Viam.App.V1.RotateKeyRequest, global::Viam.App.V1.RotateKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RotateKey",
        __Marshaller_viam_app_v1_RotateKeyRequest,
        __Marshaller_viam_app_v1_RotateKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest, global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse> __Method_CreateKeyFromExistingKeyAuthorizations = new grpc::Method<global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest, global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateKeyFromExistingKeyAuthorizations",
        __Marshaller_viam_app_v1_CreateKeyFromExistingKeyAuthorizationsRequest,
        __Marshaller_viam_app_v1_CreateKeyFromExistingKeyAuthorizationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.V1.GetAppContentRequest, global::Viam.App.V1.GetAppContentResponse> __Method_GetAppContent = new grpc::Method<global::Viam.App.V1.GetAppContentRequest, global::Viam.App.V1.GetAppContentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAppContent",
        __Marshaller_viam_app_v1_GetAppContentRequest,
        __Marshaller_viam_app_v1_GetAppContentResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Viam.App.V1.AppReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AppService</summary>
    [grpc::BindServiceMethod(typeof(AppService), "BindService")]
    public abstract partial class AppServiceBase
    {
      /// <summary>
      /// Get the id of the user with the email
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetUserIDByEmailResponse> GetUserIDByEmail(global::Viam.App.V1.GetUserIDByEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateOrganizationResponse> CreateOrganization(global::Viam.App.V1.CreateOrganizationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List organizations
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListOrganizationsResponse> ListOrganizations(global::Viam.App.V1.ListOrganizationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get all organizations that have access to a location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse> GetOrganizationsWithAccessToLocation(global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List the organizations a user belongs to
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListOrganizationsByUserResponse> ListOrganizationsByUser(global::Viam.App.V1.ListOrganizationsByUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search organizations by a couple fields
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.SearchOrganizationsResponse> SearchOrganizations(global::Viam.App.V1.SearchOrganizationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetOrganizationResponse> GetOrganization(global::Viam.App.V1.GetOrganizationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Checks for namespace availablity throughout all orgs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse> GetOrganizationNamespaceAvailability(global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateOrganizationResponse> UpdateOrganization(global::Viam.App.V1.UpdateOrganizationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update an organization's namespace if it's already been set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateOrganizationNamespaceResponse> UpdateOrganizationNamespace(global::Viam.App.V1.UpdateOrganizationNamespaceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteOrganizationResponse> DeleteOrganization(global::Viam.App.V1.DeleteOrganizationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetOrganizationMetadataResponse> GetOrganizationMetadata(global::Viam.App.V1.GetOrganizationMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateOrganizationMetadataResponse> UpdateOrganizationMetadata(global::Viam.App.V1.UpdateOrganizationMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List all members of an organization and all invited members to the organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListOrganizationMembersResponse> ListOrganizationMembers(global::Viam.App.V1.ListOrganizationMembersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create an organization invite to an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateOrganizationInviteResponse> CreateOrganizationInvite(global::Viam.App.V1.CreateOrganizationInviteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update the authorizations attached to an organization invite
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse> UpdateOrganizationInviteAuthorizations(global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an organization member from an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteOrganizationMemberResponse> DeleteOrganizationMember(global::Viam.App.V1.DeleteOrganizationMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an organization invite
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteOrganizationInviteResponse> DeleteOrganizationInvite(global::Viam.App.V1.DeleteOrganizationInviteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resend an organization invite
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ResendOrganizationInviteResponse> ResendOrganizationInvite(global::Viam.App.V1.ResendOrganizationInviteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.EnableBillingServiceResponse> EnableBillingService(global::Viam.App.V1.EnableBillingServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DisableBillingServiceResponse> DisableBillingService(global::Viam.App.V1.DisableBillingServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateBillingServiceResponse> UpdateBillingService(global::Viam.App.V1.UpdateBillingServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetBillingServiceConfigResponse> GetBillingServiceConfig(global::Viam.App.V1.GetBillingServiceConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.OrganizationSetSupportEmailResponse> OrganizationSetSupportEmail(global::Viam.App.V1.OrganizationSetSupportEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.OrganizationGetSupportEmailResponse> OrganizationGetSupportEmail(global::Viam.App.V1.OrganizationGetSupportEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.OrganizationSetLogoResponse> OrganizationSetLogo(global::Viam.App.V1.OrganizationSetLogoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.OrganizationGetLogoResponse> OrganizationGetLogo(global::Viam.App.V1.OrganizationGetLogoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.EnableAuthServiceResponse> EnableAuthService(global::Viam.App.V1.EnableAuthServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DisableAuthServiceResponse> DisableAuthService(global::Viam.App.V1.DisableAuthServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateOAuthAppResponse> CreateOAuthApp(global::Viam.App.V1.CreateOAuthAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ReadOAuthAppResponse> ReadOAuthApp(global::Viam.App.V1.ReadOAuthAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateOAuthAppResponse> UpdateOAuthApp(global::Viam.App.V1.UpdateOAuthAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteOAuthAppResponse> DeleteOAuthApp(global::Viam.App.V1.DeleteOAuthAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListOAuthAppsResponse> ListOAuthApps(global::Viam.App.V1.ListOAuthAppsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a location
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateLocationResponse> CreateLocation(global::Viam.App.V1.CreateLocationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a location
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetLocationResponse> GetLocation(global::Viam.App.V1.GetLocationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a location
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateLocationResponse> UpdateLocation(global::Viam.App.V1.UpdateLocationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a location
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteLocationResponse> DeleteLocation(global::Viam.App.V1.DeleteLocationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetLocationMetadataResponse> GetLocationMetadata(global::Viam.App.V1.GetLocationMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateLocationMetadataResponse> UpdateLocationMetadata(global::Viam.App.V1.UpdateLocationMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a list of locations
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListLocationsResponse> ListLocations(global::Viam.App.V1.ListLocationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Share a location with an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ShareLocationResponse> ShareLocation(global::Viam.App.V1.ShareLocationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stop sharing a location with an organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UnshareLocationResponse> UnshareLocation(global::Viam.App.V1.UnshareLocationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a location's authorization secrets
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.LocationAuthResponse> LocationAuth(global::Viam.App.V1.LocationAuthRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new generated Secret in the Location.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateLocationSecretResponse> CreateLocationSecret(global::Viam.App.V1.CreateLocationSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a Secret from the Location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteLocationSecretResponse> DeleteLocationSecret(global::Viam.App.V1.DeleteLocationSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a specific robot by ID
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRobotResponse> GetRobot(global::Viam.App.V1.GetRobotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get user-defined metadata for a robot
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRobotMetadataResponse> GetRobotMetadata(global::Viam.App.V1.GetRobotMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update user-defined metadata for an robot
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateRobotMetadataResponse> UpdateRobotMetadata(global::Viam.App.V1.UpdateRobotMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Rover Rental Location Robots
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRoverRentalRobotsResponse> GetRoverRentalRobots(global::Viam.App.V1.GetRoverRentalRobotsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRobotPartsResponse> GetRobotParts(global::Viam.App.V1.GetRobotPartsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a specific robot part by ID
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRobotPartResponse> GetRobotPart(global::Viam.App.V1.GetRobotPartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRobotPartLogsResponse> GetRobotPartLogs(global::Viam.App.V1.GetRobotPartLogsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task TailRobotPartLogs(global::Viam.App.V1.TailRobotPartLogsRequest request, grpc::IServerStreamWriter<global::Viam.App.V1.TailRobotPartLogsResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a specific robot part histy by ID
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRobotPartHistoryResponse> GetRobotPartHistory(global::Viam.App.V1.GetRobotPartHistoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a robot
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateRobotPartResponse> UpdateRobotPart(global::Viam.App.V1.UpdateRobotPartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new robot part
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.NewRobotPartResponse> NewRobotPart(global::Viam.App.V1.NewRobotPartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a robot part
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteRobotPartResponse> DeleteRobotPart(global::Viam.App.V1.DeleteRobotPartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get user-defined metadata for a robot part
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRobotPartMetadataResponse> GetRobotPartMetadata(global::Viam.App.V1.GetRobotPartMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update user-defined metadata for an robot part
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateRobotPartMetadataResponse> UpdateRobotPartMetadata(global::Viam.App.V1.UpdateRobotPartMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the Robot API Keys for the robot
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRobotAPIKeysResponse> GetRobotAPIKeys(global::Viam.App.V1.GetRobotAPIKeysRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks the given part as the main part, and all the others as not
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.MarkPartAsMainResponse> MarkPartAsMain(global::Viam.App.V1.MarkPartAsMainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks part for restart. Once the robot part checks-in with the app the flag
      /// is reset on the robot part. Calling this multiple times before a robot part
      /// checks-in has no affect.
      /// Note: This API may be removed in the near future.
      /// TODO(APP-388): Remove
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.MarkPartForRestartResponse> MarkPartForRestart(global::Viam.App.V1.MarkPartForRestartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new generated Secret in the Robot Part.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateRobotPartSecretResponse> CreateRobotPartSecret(global::Viam.App.V1.CreateRobotPartSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a Secret from the RobotPart.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteRobotPartSecretResponse> DeleteRobotPartSecret(global::Viam.App.V1.DeleteRobotPartSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a list of robots
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListRobotsResponse> ListRobots(global::Viam.App.V1.ListRobotsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// NewRobot creates a new robot
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.NewRobotResponse> NewRobot(global::Viam.App.V1.NewRobotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateRobot updates a robot
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateRobotResponse> UpdateRobot(global::Viam.App.V1.UpdateRobotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DeleteRobot deletes a robot
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteRobotResponse> DeleteRobot(global::Viam.App.V1.DeleteRobotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a list of fragments
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListFragmentsResponse> ListFragments(global::Viam.App.V1.ListFragmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a single fragment
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetFragmentResponse> GetFragment(global::Viam.App.V1.GetFragmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a fragment
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateFragmentResponse> CreateFragment(global::Viam.App.V1.CreateFragmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a fragment
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateFragmentResponse> UpdateFragment(global::Viam.App.V1.UpdateFragmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a fragment
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteFragmentResponse> DeleteFragment(global::Viam.App.V1.DeleteFragmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List nested fragments for a fragment
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListNestedFragmentsResponse> ListNestedFragments(global::Viam.App.V1.ListNestedFragmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets top level and nested fragments for a machine, as well as any other specified fragment ids
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListMachineFragmentsResponse> ListMachineFragments(global::Viam.App.V1.ListMachineFragmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List all machines and their corresponding machine dashboard information
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListMachineSummariesResponse> ListMachineSummaries(global::Viam.App.V1.ListMachineSummariesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets fragment history
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetFragmentHistoryResponse> GetFragmentHistory(global::Viam.App.V1.GetFragmentHistoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets usage for a fragment across versions
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetFragmentUsageResponse> GetFragmentUsage(global::Viam.App.V1.GetFragmentUsageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets a fragment tag to a revision
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.SetFragmentTagResponse> SetFragmentTag(global::Viam.App.V1.SetFragmentTagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a fragment tag
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteFragmentTagResponse> DeleteFragmentTag(global::Viam.App.V1.DeleteFragmentTagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.AddRoleResponse> AddRole(global::Viam.App.V1.AddRoleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.RemoveRoleResponse> RemoveRole(global::Viam.App.V1.RemoveRoleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Changes an IdentityAuthorization to a new IdentityAuthorization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ChangeRoleResponse> ChangeRole(global::Viam.App.V1.ChangeRoleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all authorization roles for a given resource
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListAuthorizationsResponse> ListAuthorizations(global::Viam.App.V1.ListAuthorizationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Validates a permission for the current user
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CheckPermissionsResponse> CheckPermissions(global::Viam.App.V1.CheckPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetRegistryItemResponse> GetRegistryItem(global::Viam.App.V1.GetRegistryItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateRegistryItemResponse> CreateRegistryItem(global::Viam.App.V1.CreateRegistryItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateRegistryItemResponse> UpdateRegistryItem(global::Viam.App.V1.UpdateRegistryItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListRegistryItemsResponse> ListRegistryItems(global::Viam.App.V1.ListRegistryItemsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteRegistryItemResponse> DeleteRegistryItem(global::Viam.App.V1.DeleteRegistryItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.RenameRegistryItemResponse> RenameRegistryItem(global::Viam.App.V1.RenameRegistryItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.TransferRegistryItemResponse> TransferRegistryItem(global::Viam.App.V1.TransferRegistryItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateModuleResponse> CreateModule(global::Viam.App.V1.CreateModuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UpdateModuleResponse> UpdateModule(global::Viam.App.V1.UpdateModuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.UploadModuleFileResponse> UploadModuleFile(grpc::IAsyncStreamReader<global::Viam.App.V1.UploadModuleFileRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetModuleResponse> GetModule(global::Viam.App.V1.GetModuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListModulesResponse> ListModules(global::Viam.App.V1.ListModulesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateKeyResponse> CreateKey(global::Viam.App.V1.CreateKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.DeleteKeyResponse> DeleteKey(global::Viam.App.V1.DeleteKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.ListKeysResponse> ListKeys(global::Viam.App.V1.ListKeysRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.RenameKeyResponse> RenameKey(global::Viam.App.V1.RenameKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.RotateKeyResponse> RotateKey(global::Viam.App.V1.RotateKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse> CreateKeyFromExistingKeyAuthorizations(global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.V1.GetAppContentResponse> GetAppContent(global::Viam.App.V1.GetAppContentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AppService</summary>
    public partial class AppServiceClient : grpc::ClientBase<AppServiceClient>
    {
      /// <summary>Creates a new client for AppService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AppServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AppService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AppServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AppServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AppServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Get the id of the user with the email
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetUserIDByEmailResponse GetUserIDByEmail(global::Viam.App.V1.GetUserIDByEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserIDByEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the id of the user with the email
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetUserIDByEmailResponse GetUserIDByEmail(global::Viam.App.V1.GetUserIDByEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserIDByEmail, null, options, request);
      }
      /// <summary>
      /// Get the id of the user with the email
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetUserIDByEmailResponse> GetUserIDByEmailAsync(global::Viam.App.V1.GetUserIDByEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserIDByEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the id of the user with the email
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetUserIDByEmailResponse> GetUserIDByEmailAsync(global::Viam.App.V1.GetUserIDByEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserIDByEmail, null, options, request);
      }
      /// <summary>
      /// Create a new organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateOrganizationResponse CreateOrganization(global::Viam.App.V1.CreateOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOrganization(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateOrganizationResponse CreateOrganization(global::Viam.App.V1.CreateOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateOrganization, null, options, request);
      }
      /// <summary>
      /// Create a new organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateOrganizationResponse> CreateOrganizationAsync(global::Viam.App.V1.CreateOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOrganizationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateOrganizationResponse> CreateOrganizationAsync(global::Viam.App.V1.CreateOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateOrganization, null, options, request);
      }
      /// <summary>
      /// List organizations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListOrganizationsResponse ListOrganizations(global::Viam.App.V1.ListOrganizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List organizations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListOrganizationsResponse ListOrganizations(global::Viam.App.V1.ListOrganizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrganizations, null, options, request);
      }
      /// <summary>
      /// List organizations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListOrganizationsResponse> ListOrganizationsAsync(global::Viam.App.V1.ListOrganizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List organizations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListOrganizationsResponse> ListOrganizationsAsync(global::Viam.App.V1.ListOrganizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrganizations, null, options, request);
      }
      /// <summary>
      /// Get all organizations that have access to a location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse GetOrganizationsWithAccessToLocation(global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationsWithAccessToLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get all organizations that have access to a location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse GetOrganizationsWithAccessToLocation(global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationsWithAccessToLocation, null, options, request);
      }
      /// <summary>
      /// Get all organizations that have access to a location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse> GetOrganizationsWithAccessToLocationAsync(global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationsWithAccessToLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get all organizations that have access to a location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse> GetOrganizationsWithAccessToLocationAsync(global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationsWithAccessToLocation, null, options, request);
      }
      /// <summary>
      /// List the organizations a user belongs to
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListOrganizationsByUserResponse ListOrganizationsByUser(global::Viam.App.V1.ListOrganizationsByUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationsByUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List the organizations a user belongs to
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListOrganizationsByUserResponse ListOrganizationsByUser(global::Viam.App.V1.ListOrganizationsByUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrganizationsByUser, null, options, request);
      }
      /// <summary>
      /// List the organizations a user belongs to
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListOrganizationsByUserResponse> ListOrganizationsByUserAsync(global::Viam.App.V1.ListOrganizationsByUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationsByUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List the organizations a user belongs to
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListOrganizationsByUserResponse> ListOrganizationsByUserAsync(global::Viam.App.V1.ListOrganizationsByUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrganizationsByUser, null, options, request);
      }
      /// <summary>
      /// Search organizations by a couple fields
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.SearchOrganizationsResponse SearchOrganizations(global::Viam.App.V1.SearchOrganizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchOrganizations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search organizations by a couple fields
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.SearchOrganizationsResponse SearchOrganizations(global::Viam.App.V1.SearchOrganizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchOrganizations, null, options, request);
      }
      /// <summary>
      /// Search organizations by a couple fields
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.SearchOrganizationsResponse> SearchOrganizationsAsync(global::Viam.App.V1.SearchOrganizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchOrganizationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search organizations by a couple fields
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.SearchOrganizationsResponse> SearchOrganizationsAsync(global::Viam.App.V1.SearchOrganizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchOrganizations, null, options, request);
      }
      /// <summary>
      /// Get an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetOrganizationResponse GetOrganization(global::Viam.App.V1.GetOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganization(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetOrganizationResponse GetOrganization(global::Viam.App.V1.GetOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganization, null, options, request);
      }
      /// <summary>
      /// Get an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetOrganizationResponse> GetOrganizationAsync(global::Viam.App.V1.GetOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetOrganizationResponse> GetOrganizationAsync(global::Viam.App.V1.GetOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganization, null, options, request);
      }
      /// <summary>
      /// Checks for namespace availablity throughout all orgs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse GetOrganizationNamespaceAvailability(global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationNamespaceAvailability(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Checks for namespace availablity throughout all orgs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse GetOrganizationNamespaceAvailability(global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationNamespaceAvailability, null, options, request);
      }
      /// <summary>
      /// Checks for namespace availablity throughout all orgs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse> GetOrganizationNamespaceAvailabilityAsync(global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationNamespaceAvailabilityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Checks for namespace availablity throughout all orgs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse> GetOrganizationNamespaceAvailabilityAsync(global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationNamespaceAvailability, null, options, request);
      }
      /// <summary>
      /// Update an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOrganizationResponse UpdateOrganization(global::Viam.App.V1.UpdateOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganization(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOrganizationResponse UpdateOrganization(global::Viam.App.V1.UpdateOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrganization, null, options, request);
      }
      /// <summary>
      /// Update an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOrganizationResponse> UpdateOrganizationAsync(global::Viam.App.V1.UpdateOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOrganizationResponse> UpdateOrganizationAsync(global::Viam.App.V1.UpdateOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrganization, null, options, request);
      }
      /// <summary>
      /// Update an organization's namespace if it's already been set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOrganizationNamespaceResponse UpdateOrganizationNamespace(global::Viam.App.V1.UpdateOrganizationNamespaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationNamespace(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an organization's namespace if it's already been set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOrganizationNamespaceResponse UpdateOrganizationNamespace(global::Viam.App.V1.UpdateOrganizationNamespaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrganizationNamespace, null, options, request);
      }
      /// <summary>
      /// Update an organization's namespace if it's already been set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOrganizationNamespaceResponse> UpdateOrganizationNamespaceAsync(global::Viam.App.V1.UpdateOrganizationNamespaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationNamespaceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an organization's namespace if it's already been set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOrganizationNamespaceResponse> UpdateOrganizationNamespaceAsync(global::Viam.App.V1.UpdateOrganizationNamespaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrganizationNamespace, null, options, request);
      }
      /// <summary>
      /// Delete an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteOrganizationResponse DeleteOrganization(global::Viam.App.V1.DeleteOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganization(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteOrganizationResponse DeleteOrganization(global::Viam.App.V1.DeleteOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteOrganization, null, options, request);
      }
      /// <summary>
      /// Delete an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteOrganizationResponse> DeleteOrganizationAsync(global::Viam.App.V1.DeleteOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteOrganizationResponse> DeleteOrganizationAsync(global::Viam.App.V1.DeleteOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteOrganization, null, options, request);
      }
      /// <summary>
      /// Get user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetOrganizationMetadataResponse GetOrganizationMetadata(global::Viam.App.V1.GetOrganizationMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetOrganizationMetadataResponse GetOrganizationMetadata(global::Viam.App.V1.GetOrganizationMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationMetadata, null, options, request);
      }
      /// <summary>
      /// Get user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetOrganizationMetadataResponse> GetOrganizationMetadataAsync(global::Viam.App.V1.GetOrganizationMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetOrganizationMetadataResponse> GetOrganizationMetadataAsync(global::Viam.App.V1.GetOrganizationMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationMetadata, null, options, request);
      }
      /// <summary>
      /// Update user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOrganizationMetadataResponse UpdateOrganizationMetadata(global::Viam.App.V1.UpdateOrganizationMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOrganizationMetadataResponse UpdateOrganizationMetadata(global::Viam.App.V1.UpdateOrganizationMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrganizationMetadata, null, options, request);
      }
      /// <summary>
      /// Update user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOrganizationMetadataResponse> UpdateOrganizationMetadataAsync(global::Viam.App.V1.UpdateOrganizationMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update user-defined metadata for an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOrganizationMetadataResponse> UpdateOrganizationMetadataAsync(global::Viam.App.V1.UpdateOrganizationMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrganizationMetadata, null, options, request);
      }
      /// <summary>
      /// List all members of an organization and all invited members to the organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListOrganizationMembersResponse ListOrganizationMembers(global::Viam.App.V1.ListOrganizationMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationMembers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all members of an organization and all invited members to the organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListOrganizationMembersResponse ListOrganizationMembers(global::Viam.App.V1.ListOrganizationMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrganizationMembers, null, options, request);
      }
      /// <summary>
      /// List all members of an organization and all invited members to the organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListOrganizationMembersResponse> ListOrganizationMembersAsync(global::Viam.App.V1.ListOrganizationMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationMembersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all members of an organization and all invited members to the organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListOrganizationMembersResponse> ListOrganizationMembersAsync(global::Viam.App.V1.ListOrganizationMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrganizationMembers, null, options, request);
      }
      /// <summary>
      /// Create an organization invite to an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateOrganizationInviteResponse CreateOrganizationInvite(global::Viam.App.V1.CreateOrganizationInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOrganizationInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an organization invite to an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateOrganizationInviteResponse CreateOrganizationInvite(global::Viam.App.V1.CreateOrganizationInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateOrganizationInvite, null, options, request);
      }
      /// <summary>
      /// Create an organization invite to an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateOrganizationInviteResponse> CreateOrganizationInviteAsync(global::Viam.App.V1.CreateOrganizationInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOrganizationInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an organization invite to an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateOrganizationInviteResponse> CreateOrganizationInviteAsync(global::Viam.App.V1.CreateOrganizationInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateOrganizationInvite, null, options, request);
      }
      /// <summary>
      /// Update the authorizations attached to an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse UpdateOrganizationInviteAuthorizations(global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationInviteAuthorizations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update the authorizations attached to an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse UpdateOrganizationInviteAuthorizations(global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrganizationInviteAuthorizations, null, options, request);
      }
      /// <summary>
      /// Update the authorizations attached to an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse> UpdateOrganizationInviteAuthorizationsAsync(global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationInviteAuthorizationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update the authorizations attached to an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse> UpdateOrganizationInviteAuthorizationsAsync(global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrganizationInviteAuthorizations, null, options, request);
      }
      /// <summary>
      /// Delete an organization member from an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteOrganizationMemberResponse DeleteOrganizationMember(global::Viam.App.V1.DeleteOrganizationMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an organization member from an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteOrganizationMemberResponse DeleteOrganizationMember(global::Viam.App.V1.DeleteOrganizationMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteOrganizationMember, null, options, request);
      }
      /// <summary>
      /// Delete an organization member from an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteOrganizationMemberResponse> DeleteOrganizationMemberAsync(global::Viam.App.V1.DeleteOrganizationMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an organization member from an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteOrganizationMemberResponse> DeleteOrganizationMemberAsync(global::Viam.App.V1.DeleteOrganizationMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteOrganizationMember, null, options, request);
      }
      /// <summary>
      /// Delete an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteOrganizationInviteResponse DeleteOrganizationInvite(global::Viam.App.V1.DeleteOrganizationInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteOrganizationInviteResponse DeleteOrganizationInvite(global::Viam.App.V1.DeleteOrganizationInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteOrganizationInvite, null, options, request);
      }
      /// <summary>
      /// Delete an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteOrganizationInviteResponse> DeleteOrganizationInviteAsync(global::Viam.App.V1.DeleteOrganizationInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteOrganizationInviteResponse> DeleteOrganizationInviteAsync(global::Viam.App.V1.DeleteOrganizationInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteOrganizationInvite, null, options, request);
      }
      /// <summary>
      /// Resend an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ResendOrganizationInviteResponse ResendOrganizationInvite(global::Viam.App.V1.ResendOrganizationInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendOrganizationInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ResendOrganizationInviteResponse ResendOrganizationInvite(global::Viam.App.V1.ResendOrganizationInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendOrganizationInvite, null, options, request);
      }
      /// <summary>
      /// Resend an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ResendOrganizationInviteResponse> ResendOrganizationInviteAsync(global::Viam.App.V1.ResendOrganizationInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendOrganizationInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend an organization invite
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ResendOrganizationInviteResponse> ResendOrganizationInviteAsync(global::Viam.App.V1.ResendOrganizationInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendOrganizationInvite, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.EnableBillingServiceResponse EnableBillingService(global::Viam.App.V1.EnableBillingServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableBillingService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.EnableBillingServiceResponse EnableBillingService(global::Viam.App.V1.EnableBillingServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnableBillingService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.EnableBillingServiceResponse> EnableBillingServiceAsync(global::Viam.App.V1.EnableBillingServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableBillingServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.EnableBillingServiceResponse> EnableBillingServiceAsync(global::Viam.App.V1.EnableBillingServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnableBillingService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DisableBillingServiceResponse DisableBillingService(global::Viam.App.V1.DisableBillingServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableBillingService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DisableBillingServiceResponse DisableBillingService(global::Viam.App.V1.DisableBillingServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableBillingService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DisableBillingServiceResponse> DisableBillingServiceAsync(global::Viam.App.V1.DisableBillingServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableBillingServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DisableBillingServiceResponse> DisableBillingServiceAsync(global::Viam.App.V1.DisableBillingServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableBillingService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateBillingServiceResponse UpdateBillingService(global::Viam.App.V1.UpdateBillingServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBillingService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateBillingServiceResponse UpdateBillingService(global::Viam.App.V1.UpdateBillingServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBillingService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateBillingServiceResponse> UpdateBillingServiceAsync(global::Viam.App.V1.UpdateBillingServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBillingServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateBillingServiceResponse> UpdateBillingServiceAsync(global::Viam.App.V1.UpdateBillingServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBillingService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetBillingServiceConfigResponse GetBillingServiceConfig(global::Viam.App.V1.GetBillingServiceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBillingServiceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetBillingServiceConfigResponse GetBillingServiceConfig(global::Viam.App.V1.GetBillingServiceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBillingServiceConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetBillingServiceConfigResponse> GetBillingServiceConfigAsync(global::Viam.App.V1.GetBillingServiceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBillingServiceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetBillingServiceConfigResponse> GetBillingServiceConfigAsync(global::Viam.App.V1.GetBillingServiceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBillingServiceConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.OrganizationSetSupportEmailResponse OrganizationSetSupportEmail(global::Viam.App.V1.OrganizationSetSupportEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OrganizationSetSupportEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.OrganizationSetSupportEmailResponse OrganizationSetSupportEmail(global::Viam.App.V1.OrganizationSetSupportEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OrganizationSetSupportEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.OrganizationSetSupportEmailResponse> OrganizationSetSupportEmailAsync(global::Viam.App.V1.OrganizationSetSupportEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OrganizationSetSupportEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.OrganizationSetSupportEmailResponse> OrganizationSetSupportEmailAsync(global::Viam.App.V1.OrganizationSetSupportEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OrganizationSetSupportEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.OrganizationGetSupportEmailResponse OrganizationGetSupportEmail(global::Viam.App.V1.OrganizationGetSupportEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OrganizationGetSupportEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.OrganizationGetSupportEmailResponse OrganizationGetSupportEmail(global::Viam.App.V1.OrganizationGetSupportEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OrganizationGetSupportEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.OrganizationGetSupportEmailResponse> OrganizationGetSupportEmailAsync(global::Viam.App.V1.OrganizationGetSupportEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OrganizationGetSupportEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.OrganizationGetSupportEmailResponse> OrganizationGetSupportEmailAsync(global::Viam.App.V1.OrganizationGetSupportEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OrganizationGetSupportEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.OrganizationSetLogoResponse OrganizationSetLogo(global::Viam.App.V1.OrganizationSetLogoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OrganizationSetLogo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.OrganizationSetLogoResponse OrganizationSetLogo(global::Viam.App.V1.OrganizationSetLogoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OrganizationSetLogo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.OrganizationSetLogoResponse> OrganizationSetLogoAsync(global::Viam.App.V1.OrganizationSetLogoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OrganizationSetLogoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.OrganizationSetLogoResponse> OrganizationSetLogoAsync(global::Viam.App.V1.OrganizationSetLogoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OrganizationSetLogo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.OrganizationGetLogoResponse OrganizationGetLogo(global::Viam.App.V1.OrganizationGetLogoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OrganizationGetLogo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.OrganizationGetLogoResponse OrganizationGetLogo(global::Viam.App.V1.OrganizationGetLogoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OrganizationGetLogo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.OrganizationGetLogoResponse> OrganizationGetLogoAsync(global::Viam.App.V1.OrganizationGetLogoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OrganizationGetLogoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.OrganizationGetLogoResponse> OrganizationGetLogoAsync(global::Viam.App.V1.OrganizationGetLogoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OrganizationGetLogo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.EnableAuthServiceResponse EnableAuthService(global::Viam.App.V1.EnableAuthServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableAuthService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.EnableAuthServiceResponse EnableAuthService(global::Viam.App.V1.EnableAuthServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnableAuthService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.EnableAuthServiceResponse> EnableAuthServiceAsync(global::Viam.App.V1.EnableAuthServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableAuthServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.EnableAuthServiceResponse> EnableAuthServiceAsync(global::Viam.App.V1.EnableAuthServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnableAuthService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DisableAuthServiceResponse DisableAuthService(global::Viam.App.V1.DisableAuthServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableAuthService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DisableAuthServiceResponse DisableAuthService(global::Viam.App.V1.DisableAuthServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableAuthService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DisableAuthServiceResponse> DisableAuthServiceAsync(global::Viam.App.V1.DisableAuthServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableAuthServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DisableAuthServiceResponse> DisableAuthServiceAsync(global::Viam.App.V1.DisableAuthServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableAuthService, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateOAuthAppResponse CreateOAuthApp(global::Viam.App.V1.CreateOAuthAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOAuthApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateOAuthAppResponse CreateOAuthApp(global::Viam.App.V1.CreateOAuthAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateOAuthApp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateOAuthAppResponse> CreateOAuthAppAsync(global::Viam.App.V1.CreateOAuthAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOAuthAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateOAuthAppResponse> CreateOAuthAppAsync(global::Viam.App.V1.CreateOAuthAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateOAuthApp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ReadOAuthAppResponse ReadOAuthApp(global::Viam.App.V1.ReadOAuthAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadOAuthApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ReadOAuthAppResponse ReadOAuthApp(global::Viam.App.V1.ReadOAuthAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadOAuthApp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ReadOAuthAppResponse> ReadOAuthAppAsync(global::Viam.App.V1.ReadOAuthAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadOAuthAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ReadOAuthAppResponse> ReadOAuthAppAsync(global::Viam.App.V1.ReadOAuthAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadOAuthApp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOAuthAppResponse UpdateOAuthApp(global::Viam.App.V1.UpdateOAuthAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOAuthApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateOAuthAppResponse UpdateOAuthApp(global::Viam.App.V1.UpdateOAuthAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOAuthApp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOAuthAppResponse> UpdateOAuthAppAsync(global::Viam.App.V1.UpdateOAuthAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOAuthAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateOAuthAppResponse> UpdateOAuthAppAsync(global::Viam.App.V1.UpdateOAuthAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOAuthApp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteOAuthAppResponse DeleteOAuthApp(global::Viam.App.V1.DeleteOAuthAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOAuthApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteOAuthAppResponse DeleteOAuthApp(global::Viam.App.V1.DeleteOAuthAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteOAuthApp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteOAuthAppResponse> DeleteOAuthAppAsync(global::Viam.App.V1.DeleteOAuthAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOAuthAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteOAuthAppResponse> DeleteOAuthAppAsync(global::Viam.App.V1.DeleteOAuthAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteOAuthApp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListOAuthAppsResponse ListOAuthApps(global::Viam.App.V1.ListOAuthAppsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOAuthApps(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListOAuthAppsResponse ListOAuthApps(global::Viam.App.V1.ListOAuthAppsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOAuthApps, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListOAuthAppsResponse> ListOAuthAppsAsync(global::Viam.App.V1.ListOAuthAppsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOAuthAppsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListOAuthAppsResponse> ListOAuthAppsAsync(global::Viam.App.V1.ListOAuthAppsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOAuthApps, null, options, request);
      }
      /// <summary>
      /// Create a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateLocationResponse CreateLocation(global::Viam.App.V1.CreateLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateLocationResponse CreateLocation(global::Viam.App.V1.CreateLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateLocation, null, options, request);
      }
      /// <summary>
      /// Create a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateLocationResponse> CreateLocationAsync(global::Viam.App.V1.CreateLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateLocationResponse> CreateLocationAsync(global::Viam.App.V1.CreateLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateLocation, null, options, request);
      }
      /// <summary>
      /// Get a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetLocationResponse GetLocation(global::Viam.App.V1.GetLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetLocationResponse GetLocation(global::Viam.App.V1.GetLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLocation, null, options, request);
      }
      /// <summary>
      /// Get a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetLocationResponse> GetLocationAsync(global::Viam.App.V1.GetLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetLocationResponse> GetLocationAsync(global::Viam.App.V1.GetLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLocation, null, options, request);
      }
      /// <summary>
      /// Update a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateLocationResponse UpdateLocation(global::Viam.App.V1.UpdateLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateLocationResponse UpdateLocation(global::Viam.App.V1.UpdateLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateLocation, null, options, request);
      }
      /// <summary>
      /// Update a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateLocationResponse> UpdateLocationAsync(global::Viam.App.V1.UpdateLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateLocationResponse> UpdateLocationAsync(global::Viam.App.V1.UpdateLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateLocation, null, options, request);
      }
      /// <summary>
      /// Delete a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteLocationResponse DeleteLocation(global::Viam.App.V1.DeleteLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteLocationResponse DeleteLocation(global::Viam.App.V1.DeleteLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteLocation, null, options, request);
      }
      /// <summary>
      /// Delete a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteLocationResponse> DeleteLocationAsync(global::Viam.App.V1.DeleteLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteLocationResponse> DeleteLocationAsync(global::Viam.App.V1.DeleteLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteLocation, null, options, request);
      }
      /// <summary>
      /// Get user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetLocationMetadataResponse GetLocationMetadata(global::Viam.App.V1.GetLocationMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetLocationMetadataResponse GetLocationMetadata(global::Viam.App.V1.GetLocationMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLocationMetadata, null, options, request);
      }
      /// <summary>
      /// Get user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetLocationMetadataResponse> GetLocationMetadataAsync(global::Viam.App.V1.GetLocationMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetLocationMetadataResponse> GetLocationMetadataAsync(global::Viam.App.V1.GetLocationMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLocationMetadata, null, options, request);
      }
      /// <summary>
      /// Update user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateLocationMetadataResponse UpdateLocationMetadata(global::Viam.App.V1.UpdateLocationMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateLocationMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateLocationMetadataResponse UpdateLocationMetadata(global::Viam.App.V1.UpdateLocationMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateLocationMetadata, null, options, request);
      }
      /// <summary>
      /// Update user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateLocationMetadataResponse> UpdateLocationMetadataAsync(global::Viam.App.V1.UpdateLocationMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateLocationMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update user-defined metadata for a location
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateLocationMetadataResponse> UpdateLocationMetadataAsync(global::Viam.App.V1.UpdateLocationMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateLocationMetadata, null, options, request);
      }
      /// <summary>
      /// Get a list of locations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListLocationsResponse ListLocations(global::Viam.App.V1.ListLocationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLocations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list of locations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListLocationsResponse ListLocations(global::Viam.App.V1.ListLocationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLocations, null, options, request);
      }
      /// <summary>
      /// Get a list of locations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListLocationsResponse> ListLocationsAsync(global::Viam.App.V1.ListLocationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLocationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list of locations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListLocationsResponse> ListLocationsAsync(global::Viam.App.V1.ListLocationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLocations, null, options, request);
      }
      /// <summary>
      /// Share a location with an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ShareLocationResponse ShareLocation(global::Viam.App.V1.ShareLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ShareLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Share a location with an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ShareLocationResponse ShareLocation(global::Viam.App.V1.ShareLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ShareLocation, null, options, request);
      }
      /// <summary>
      /// Share a location with an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ShareLocationResponse> ShareLocationAsync(global::Viam.App.V1.ShareLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ShareLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Share a location with an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ShareLocationResponse> ShareLocationAsync(global::Viam.App.V1.ShareLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ShareLocation, null, options, request);
      }
      /// <summary>
      /// Stop sharing a location with an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UnshareLocationResponse UnshareLocation(global::Viam.App.V1.UnshareLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnshareLocation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stop sharing a location with an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UnshareLocationResponse UnshareLocation(global::Viam.App.V1.UnshareLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnshareLocation, null, options, request);
      }
      /// <summary>
      /// Stop sharing a location with an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UnshareLocationResponse> UnshareLocationAsync(global::Viam.App.V1.UnshareLocationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnshareLocationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stop sharing a location with an organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UnshareLocationResponse> UnshareLocationAsync(global::Viam.App.V1.UnshareLocationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnshareLocation, null, options, request);
      }
      /// <summary>
      /// Get a location's authorization secrets
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.LocationAuthResponse LocationAuth(global::Viam.App.V1.LocationAuthRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LocationAuth(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a location's authorization secrets
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.LocationAuthResponse LocationAuth(global::Viam.App.V1.LocationAuthRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LocationAuth, null, options, request);
      }
      /// <summary>
      /// Get a location's authorization secrets
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.LocationAuthResponse> LocationAuthAsync(global::Viam.App.V1.LocationAuthRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LocationAuthAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a location's authorization secrets
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.LocationAuthResponse> LocationAuthAsync(global::Viam.App.V1.LocationAuthRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LocationAuth, null, options, request);
      }
      /// <summary>
      /// Create a new generated Secret in the Location.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateLocationSecretResponse CreateLocationSecret(global::Viam.App.V1.CreateLocationSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLocationSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new generated Secret in the Location.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateLocationSecretResponse CreateLocationSecret(global::Viam.App.V1.CreateLocationSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateLocationSecret, null, options, request);
      }
      /// <summary>
      /// Create a new generated Secret in the Location.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateLocationSecretResponse> CreateLocationSecretAsync(global::Viam.App.V1.CreateLocationSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLocationSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new generated Secret in the Location.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateLocationSecretResponse> CreateLocationSecretAsync(global::Viam.App.V1.CreateLocationSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateLocationSecret, null, options, request);
      }
      /// <summary>
      /// Delete a Secret from the Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteLocationSecretResponse DeleteLocationSecret(global::Viam.App.V1.DeleteLocationSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLocationSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a Secret from the Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteLocationSecretResponse DeleteLocationSecret(global::Viam.App.V1.DeleteLocationSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteLocationSecret, null, options, request);
      }
      /// <summary>
      /// Delete a Secret from the Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteLocationSecretResponse> DeleteLocationSecretAsync(global::Viam.App.V1.DeleteLocationSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLocationSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a Secret from the Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteLocationSecretResponse> DeleteLocationSecretAsync(global::Viam.App.V1.DeleteLocationSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteLocationSecret, null, options, request);
      }
      /// <summary>
      /// Get a specific robot by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotResponse GetRobot(global::Viam.App.V1.GetRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a specific robot by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotResponse GetRobot(global::Viam.App.V1.GetRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRobot, null, options, request);
      }
      /// <summary>
      /// Get a specific robot by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotResponse> GetRobotAsync(global::Viam.App.V1.GetRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a specific robot by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotResponse> GetRobotAsync(global::Viam.App.V1.GetRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRobot, null, options, request);
      }
      /// <summary>
      /// Get user-defined metadata for a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotMetadataResponse GetRobotMetadata(global::Viam.App.V1.GetRobotMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get user-defined metadata for a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotMetadataResponse GetRobotMetadata(global::Viam.App.V1.GetRobotMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRobotMetadata, null, options, request);
      }
      /// <summary>
      /// Get user-defined metadata for a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotMetadataResponse> GetRobotMetadataAsync(global::Viam.App.V1.GetRobotMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get user-defined metadata for a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotMetadataResponse> GetRobotMetadataAsync(global::Viam.App.V1.GetRobotMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRobotMetadata, null, options, request);
      }
      /// <summary>
      /// Update user-defined metadata for an robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRobotMetadataResponse UpdateRobotMetadata(global::Viam.App.V1.UpdateRobotMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRobotMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update user-defined metadata for an robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRobotMetadataResponse UpdateRobotMetadata(global::Viam.App.V1.UpdateRobotMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRobotMetadata, null, options, request);
      }
      /// <summary>
      /// Update user-defined metadata for an robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRobotMetadataResponse> UpdateRobotMetadataAsync(global::Viam.App.V1.UpdateRobotMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRobotMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update user-defined metadata for an robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRobotMetadataResponse> UpdateRobotMetadataAsync(global::Viam.App.V1.UpdateRobotMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRobotMetadata, null, options, request);
      }
      /// <summary>
      /// Get Rover Rental Location Robots
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRoverRentalRobotsResponse GetRoverRentalRobots(global::Viam.App.V1.GetRoverRentalRobotsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoverRentalRobots(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Rover Rental Location Robots
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRoverRentalRobotsResponse GetRoverRentalRobots(global::Viam.App.V1.GetRoverRentalRobotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRoverRentalRobots, null, options, request);
      }
      /// <summary>
      /// Get Rover Rental Location Robots
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRoverRentalRobotsResponse> GetRoverRentalRobotsAsync(global::Viam.App.V1.GetRoverRentalRobotsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoverRentalRobotsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Rover Rental Location Robots
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRoverRentalRobotsResponse> GetRoverRentalRobotsAsync(global::Viam.App.V1.GetRoverRentalRobotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRoverRentalRobots, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartsResponse GetRobotParts(global::Viam.App.V1.GetRobotPartsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotParts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartsResponse GetRobotParts(global::Viam.App.V1.GetRobotPartsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRobotParts, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartsResponse> GetRobotPartsAsync(global::Viam.App.V1.GetRobotPartsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPartsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartsResponse> GetRobotPartsAsync(global::Viam.App.V1.GetRobotPartsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRobotParts, null, options, request);
      }
      /// <summary>
      /// Get a specific robot part by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartResponse GetRobotPart(global::Viam.App.V1.GetRobotPartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a specific robot part by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartResponse GetRobotPart(global::Viam.App.V1.GetRobotPartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRobotPart, null, options, request);
      }
      /// <summary>
      /// Get a specific robot part by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartResponse> GetRobotPartAsync(global::Viam.App.V1.GetRobotPartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a specific robot part by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartResponse> GetRobotPartAsync(global::Viam.App.V1.GetRobotPartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRobotPart, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartLogsResponse GetRobotPartLogs(global::Viam.App.V1.GetRobotPartLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPartLogs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartLogsResponse GetRobotPartLogs(global::Viam.App.V1.GetRobotPartLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRobotPartLogs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartLogsResponse> GetRobotPartLogsAsync(global::Viam.App.V1.GetRobotPartLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPartLogsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartLogsResponse> GetRobotPartLogsAsync(global::Viam.App.V1.GetRobotPartLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRobotPartLogs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Viam.App.V1.TailRobotPartLogsResponse> TailRobotPartLogs(global::Viam.App.V1.TailRobotPartLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TailRobotPartLogs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Viam.App.V1.TailRobotPartLogsResponse> TailRobotPartLogs(global::Viam.App.V1.TailRobotPartLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_TailRobotPartLogs, null, options, request);
      }
      /// <summary>
      /// Get a specific robot part histy by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartHistoryResponse GetRobotPartHistory(global::Viam.App.V1.GetRobotPartHistoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPartHistory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a specific robot part histy by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartHistoryResponse GetRobotPartHistory(global::Viam.App.V1.GetRobotPartHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRobotPartHistory, null, options, request);
      }
      /// <summary>
      /// Get a specific robot part histy by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartHistoryResponse> GetRobotPartHistoryAsync(global::Viam.App.V1.GetRobotPartHistoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPartHistoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a specific robot part histy by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartHistoryResponse> GetRobotPartHistoryAsync(global::Viam.App.V1.GetRobotPartHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRobotPartHistory, null, options, request);
      }
      /// <summary>
      /// Update a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRobotPartResponse UpdateRobotPart(global::Viam.App.V1.UpdateRobotPartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRobotPart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRobotPartResponse UpdateRobotPart(global::Viam.App.V1.UpdateRobotPartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRobotPart, null, options, request);
      }
      /// <summary>
      /// Update a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRobotPartResponse> UpdateRobotPartAsync(global::Viam.App.V1.UpdateRobotPartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRobotPartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRobotPartResponse> UpdateRobotPartAsync(global::Viam.App.V1.UpdateRobotPartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRobotPart, null, options, request);
      }
      /// <summary>
      /// Create a new robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.NewRobotPartResponse NewRobotPart(global::Viam.App.V1.NewRobotPartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NewRobotPart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.NewRobotPartResponse NewRobotPart(global::Viam.App.V1.NewRobotPartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NewRobotPart, null, options, request);
      }
      /// <summary>
      /// Create a new robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.NewRobotPartResponse> NewRobotPartAsync(global::Viam.App.V1.NewRobotPartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NewRobotPartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.NewRobotPartResponse> NewRobotPartAsync(global::Viam.App.V1.NewRobotPartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NewRobotPart, null, options, request);
      }
      /// <summary>
      /// Delete a robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteRobotPartResponse DeleteRobotPart(global::Viam.App.V1.DeleteRobotPartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRobotPart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteRobotPartResponse DeleteRobotPart(global::Viam.App.V1.DeleteRobotPartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRobotPart, null, options, request);
      }
      /// <summary>
      /// Delete a robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteRobotPartResponse> DeleteRobotPartAsync(global::Viam.App.V1.DeleteRobotPartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRobotPartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteRobotPartResponse> DeleteRobotPartAsync(global::Viam.App.V1.DeleteRobotPartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRobotPart, null, options, request);
      }
      /// <summary>
      /// Get user-defined metadata for a robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartMetadataResponse GetRobotPartMetadata(global::Viam.App.V1.GetRobotPartMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPartMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get user-defined metadata for a robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotPartMetadataResponse GetRobotPartMetadata(global::Viam.App.V1.GetRobotPartMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRobotPartMetadata, null, options, request);
      }
      /// <summary>
      /// Get user-defined metadata for a robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartMetadataResponse> GetRobotPartMetadataAsync(global::Viam.App.V1.GetRobotPartMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotPartMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get user-defined metadata for a robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotPartMetadataResponse> GetRobotPartMetadataAsync(global::Viam.App.V1.GetRobotPartMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRobotPartMetadata, null, options, request);
      }
      /// <summary>
      /// Update user-defined metadata for an robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRobotPartMetadataResponse UpdateRobotPartMetadata(global::Viam.App.V1.UpdateRobotPartMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRobotPartMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update user-defined metadata for an robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRobotPartMetadataResponse UpdateRobotPartMetadata(global::Viam.App.V1.UpdateRobotPartMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRobotPartMetadata, null, options, request);
      }
      /// <summary>
      /// Update user-defined metadata for an robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRobotPartMetadataResponse> UpdateRobotPartMetadataAsync(global::Viam.App.V1.UpdateRobotPartMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRobotPartMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update user-defined metadata for an robot part
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRobotPartMetadataResponse> UpdateRobotPartMetadataAsync(global::Viam.App.V1.UpdateRobotPartMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRobotPartMetadata, null, options, request);
      }
      /// <summary>
      /// Gets the Robot API Keys for the robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotAPIKeysResponse GetRobotAPIKeys(global::Viam.App.V1.GetRobotAPIKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotAPIKeys(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the Robot API Keys for the robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRobotAPIKeysResponse GetRobotAPIKeys(global::Viam.App.V1.GetRobotAPIKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRobotAPIKeys, null, options, request);
      }
      /// <summary>
      /// Gets the Robot API Keys for the robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotAPIKeysResponse> GetRobotAPIKeysAsync(global::Viam.App.V1.GetRobotAPIKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRobotAPIKeysAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the Robot API Keys for the robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRobotAPIKeysResponse> GetRobotAPIKeysAsync(global::Viam.App.V1.GetRobotAPIKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRobotAPIKeys, null, options, request);
      }
      /// <summary>
      /// Marks the given part as the main part, and all the others as not
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.MarkPartAsMainResponse MarkPartAsMain(global::Viam.App.V1.MarkPartAsMainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkPartAsMain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks the given part as the main part, and all the others as not
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.MarkPartAsMainResponse MarkPartAsMain(global::Viam.App.V1.MarkPartAsMainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MarkPartAsMain, null, options, request);
      }
      /// <summary>
      /// Marks the given part as the main part, and all the others as not
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.MarkPartAsMainResponse> MarkPartAsMainAsync(global::Viam.App.V1.MarkPartAsMainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkPartAsMainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks the given part as the main part, and all the others as not
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.MarkPartAsMainResponse> MarkPartAsMainAsync(global::Viam.App.V1.MarkPartAsMainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MarkPartAsMain, null, options, request);
      }
      /// <summary>
      /// Marks part for restart. Once the robot part checks-in with the app the flag
      /// is reset on the robot part. Calling this multiple times before a robot part
      /// checks-in has no affect.
      /// Note: This API may be removed in the near future.
      /// TODO(APP-388): Remove
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.MarkPartForRestartResponse MarkPartForRestart(global::Viam.App.V1.MarkPartForRestartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkPartForRestart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks part for restart. Once the robot part checks-in with the app the flag
      /// is reset on the robot part. Calling this multiple times before a robot part
      /// checks-in has no affect.
      /// Note: This API may be removed in the near future.
      /// TODO(APP-388): Remove
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.MarkPartForRestartResponse MarkPartForRestart(global::Viam.App.V1.MarkPartForRestartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MarkPartForRestart, null, options, request);
      }
      /// <summary>
      /// Marks part for restart. Once the robot part checks-in with the app the flag
      /// is reset on the robot part. Calling this multiple times before a robot part
      /// checks-in has no affect.
      /// Note: This API may be removed in the near future.
      /// TODO(APP-388): Remove
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.MarkPartForRestartResponse> MarkPartForRestartAsync(global::Viam.App.V1.MarkPartForRestartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkPartForRestartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks part for restart. Once the robot part checks-in with the app the flag
      /// is reset on the robot part. Calling this multiple times before a robot part
      /// checks-in has no affect.
      /// Note: This API may be removed in the near future.
      /// TODO(APP-388): Remove
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.MarkPartForRestartResponse> MarkPartForRestartAsync(global::Viam.App.V1.MarkPartForRestartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MarkPartForRestart, null, options, request);
      }
      /// <summary>
      /// Create a new generated Secret in the Robot Part.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateRobotPartSecretResponse CreateRobotPartSecret(global::Viam.App.V1.CreateRobotPartSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRobotPartSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new generated Secret in the Robot Part.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateRobotPartSecretResponse CreateRobotPartSecret(global::Viam.App.V1.CreateRobotPartSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRobotPartSecret, null, options, request);
      }
      /// <summary>
      /// Create a new generated Secret in the Robot Part.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateRobotPartSecretResponse> CreateRobotPartSecretAsync(global::Viam.App.V1.CreateRobotPartSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRobotPartSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new generated Secret in the Robot Part.
      ///  - Succeeds if there are no more than 2 active secrets after creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateRobotPartSecretResponse> CreateRobotPartSecretAsync(global::Viam.App.V1.CreateRobotPartSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRobotPartSecret, null, options, request);
      }
      /// <summary>
      /// Delete a Secret from the RobotPart.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteRobotPartSecretResponse DeleteRobotPartSecret(global::Viam.App.V1.DeleteRobotPartSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRobotPartSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a Secret from the RobotPart.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteRobotPartSecretResponse DeleteRobotPartSecret(global::Viam.App.V1.DeleteRobotPartSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRobotPartSecret, null, options, request);
      }
      /// <summary>
      /// Delete a Secret from the RobotPart.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteRobotPartSecretResponse> DeleteRobotPartSecretAsync(global::Viam.App.V1.DeleteRobotPartSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRobotPartSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a Secret from the RobotPart.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteRobotPartSecretResponse> DeleteRobotPartSecretAsync(global::Viam.App.V1.DeleteRobotPartSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRobotPartSecret, null, options, request);
      }
      /// <summary>
      /// Get a list of robots
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListRobotsResponse ListRobots(global::Viam.App.V1.ListRobotsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRobots(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list of robots
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListRobotsResponse ListRobots(global::Viam.App.V1.ListRobotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRobots, null, options, request);
      }
      /// <summary>
      /// Get a list of robots
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListRobotsResponse> ListRobotsAsync(global::Viam.App.V1.ListRobotsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRobotsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list of robots
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListRobotsResponse> ListRobotsAsync(global::Viam.App.V1.ListRobotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRobots, null, options, request);
      }
      /// <summary>
      /// NewRobot creates a new robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.NewRobotResponse NewRobot(global::Viam.App.V1.NewRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NewRobot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// NewRobot creates a new robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.NewRobotResponse NewRobot(global::Viam.App.V1.NewRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NewRobot, null, options, request);
      }
      /// <summary>
      /// NewRobot creates a new robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.NewRobotResponse> NewRobotAsync(global::Viam.App.V1.NewRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NewRobotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// NewRobot creates a new robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.NewRobotResponse> NewRobotAsync(global::Viam.App.V1.NewRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NewRobot, null, options, request);
      }
      /// <summary>
      /// UpdateRobot updates a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRobotResponse UpdateRobot(global::Viam.App.V1.UpdateRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRobot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateRobot updates a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRobotResponse UpdateRobot(global::Viam.App.V1.UpdateRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRobot, null, options, request);
      }
      /// <summary>
      /// UpdateRobot updates a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRobotResponse> UpdateRobotAsync(global::Viam.App.V1.UpdateRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRobotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateRobot updates a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRobotResponse> UpdateRobotAsync(global::Viam.App.V1.UpdateRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRobot, null, options, request);
      }
      /// <summary>
      /// DeleteRobot deletes a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteRobotResponse DeleteRobot(global::Viam.App.V1.DeleteRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRobot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteRobot deletes a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteRobotResponse DeleteRobot(global::Viam.App.V1.DeleteRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRobot, null, options, request);
      }
      /// <summary>
      /// DeleteRobot deletes a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteRobotResponse> DeleteRobotAsync(global::Viam.App.V1.DeleteRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRobotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteRobot deletes a robot
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteRobotResponse> DeleteRobotAsync(global::Viam.App.V1.DeleteRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRobot, null, options, request);
      }
      /// <summary>
      /// Gets a list of fragments
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListFragmentsResponse ListFragments(global::Viam.App.V1.ListFragmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFragments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of fragments
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListFragmentsResponse ListFragments(global::Viam.App.V1.ListFragmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFragments, null, options, request);
      }
      /// <summary>
      /// Gets a list of fragments
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListFragmentsResponse> ListFragmentsAsync(global::Viam.App.V1.ListFragmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFragmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of fragments
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListFragmentsResponse> ListFragmentsAsync(global::Viam.App.V1.ListFragmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFragments, null, options, request);
      }
      /// <summary>
      /// Gets a single fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetFragmentResponse GetFragment(global::Viam.App.V1.GetFragmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFragment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a single fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetFragmentResponse GetFragment(global::Viam.App.V1.GetFragmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFragment, null, options, request);
      }
      /// <summary>
      /// Gets a single fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetFragmentResponse> GetFragmentAsync(global::Viam.App.V1.GetFragmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFragmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a single fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetFragmentResponse> GetFragmentAsync(global::Viam.App.V1.GetFragmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFragment, null, options, request);
      }
      /// <summary>
      /// Creates a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateFragmentResponse CreateFragment(global::Viam.App.V1.CreateFragmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFragment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateFragmentResponse CreateFragment(global::Viam.App.V1.CreateFragmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFragment, null, options, request);
      }
      /// <summary>
      /// Creates a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateFragmentResponse> CreateFragmentAsync(global::Viam.App.V1.CreateFragmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFragmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateFragmentResponse> CreateFragmentAsync(global::Viam.App.V1.CreateFragmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFragment, null, options, request);
      }
      /// <summary>
      /// Updates a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateFragmentResponse UpdateFragment(global::Viam.App.V1.UpdateFragmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFragment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateFragmentResponse UpdateFragment(global::Viam.App.V1.UpdateFragmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFragment, null, options, request);
      }
      /// <summary>
      /// Updates a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateFragmentResponse> UpdateFragmentAsync(global::Viam.App.V1.UpdateFragmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFragmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateFragmentResponse> UpdateFragmentAsync(global::Viam.App.V1.UpdateFragmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFragment, null, options, request);
      }
      /// <summary>
      /// Deletes a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteFragmentResponse DeleteFragment(global::Viam.App.V1.DeleteFragmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFragment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteFragmentResponse DeleteFragment(global::Viam.App.V1.DeleteFragmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFragment, null, options, request);
      }
      /// <summary>
      /// Deletes a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteFragmentResponse> DeleteFragmentAsync(global::Viam.App.V1.DeleteFragmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFragmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteFragmentResponse> DeleteFragmentAsync(global::Viam.App.V1.DeleteFragmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFragment, null, options, request);
      }
      /// <summary>
      /// List nested fragments for a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListNestedFragmentsResponse ListNestedFragments(global::Viam.App.V1.ListNestedFragmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNestedFragments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List nested fragments for a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListNestedFragmentsResponse ListNestedFragments(global::Viam.App.V1.ListNestedFragmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNestedFragments, null, options, request);
      }
      /// <summary>
      /// List nested fragments for a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListNestedFragmentsResponse> ListNestedFragmentsAsync(global::Viam.App.V1.ListNestedFragmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNestedFragmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List nested fragments for a fragment
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListNestedFragmentsResponse> ListNestedFragmentsAsync(global::Viam.App.V1.ListNestedFragmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNestedFragments, null, options, request);
      }
      /// <summary>
      /// Gets top level and nested fragments for a machine, as well as any other specified fragment ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListMachineFragmentsResponse ListMachineFragments(global::Viam.App.V1.ListMachineFragmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMachineFragments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets top level and nested fragments for a machine, as well as any other specified fragment ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListMachineFragmentsResponse ListMachineFragments(global::Viam.App.V1.ListMachineFragmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMachineFragments, null, options, request);
      }
      /// <summary>
      /// Gets top level and nested fragments for a machine, as well as any other specified fragment ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListMachineFragmentsResponse> ListMachineFragmentsAsync(global::Viam.App.V1.ListMachineFragmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMachineFragmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets top level and nested fragments for a machine, as well as any other specified fragment ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListMachineFragmentsResponse> ListMachineFragmentsAsync(global::Viam.App.V1.ListMachineFragmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMachineFragments, null, options, request);
      }
      /// <summary>
      /// List all machines and their corresponding machine dashboard information
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListMachineSummariesResponse ListMachineSummaries(global::Viam.App.V1.ListMachineSummariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMachineSummaries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all machines and their corresponding machine dashboard information
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListMachineSummariesResponse ListMachineSummaries(global::Viam.App.V1.ListMachineSummariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMachineSummaries, null, options, request);
      }
      /// <summary>
      /// List all machines and their corresponding machine dashboard information
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListMachineSummariesResponse> ListMachineSummariesAsync(global::Viam.App.V1.ListMachineSummariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMachineSummariesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all machines and their corresponding machine dashboard information
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListMachineSummariesResponse> ListMachineSummariesAsync(global::Viam.App.V1.ListMachineSummariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMachineSummaries, null, options, request);
      }
      /// <summary>
      /// Gets fragment history
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetFragmentHistoryResponse GetFragmentHistory(global::Viam.App.V1.GetFragmentHistoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFragmentHistory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets fragment history
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetFragmentHistoryResponse GetFragmentHistory(global::Viam.App.V1.GetFragmentHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFragmentHistory, null, options, request);
      }
      /// <summary>
      /// Gets fragment history
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetFragmentHistoryResponse> GetFragmentHistoryAsync(global::Viam.App.V1.GetFragmentHistoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFragmentHistoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets fragment history
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetFragmentHistoryResponse> GetFragmentHistoryAsync(global::Viam.App.V1.GetFragmentHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFragmentHistory, null, options, request);
      }
      /// <summary>
      /// Gets usage for a fragment across versions
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetFragmentUsageResponse GetFragmentUsage(global::Viam.App.V1.GetFragmentUsageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFragmentUsage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets usage for a fragment across versions
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetFragmentUsageResponse GetFragmentUsage(global::Viam.App.V1.GetFragmentUsageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFragmentUsage, null, options, request);
      }
      /// <summary>
      /// Gets usage for a fragment across versions
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetFragmentUsageResponse> GetFragmentUsageAsync(global::Viam.App.V1.GetFragmentUsageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFragmentUsageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets usage for a fragment across versions
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetFragmentUsageResponse> GetFragmentUsageAsync(global::Viam.App.V1.GetFragmentUsageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFragmentUsage, null, options, request);
      }
      /// <summary>
      /// Sets a fragment tag to a revision
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.SetFragmentTagResponse SetFragmentTag(global::Viam.App.V1.SetFragmentTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetFragmentTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets a fragment tag to a revision
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.SetFragmentTagResponse SetFragmentTag(global::Viam.App.V1.SetFragmentTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetFragmentTag, null, options, request);
      }
      /// <summary>
      /// Sets a fragment tag to a revision
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.SetFragmentTagResponse> SetFragmentTagAsync(global::Viam.App.V1.SetFragmentTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetFragmentTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets a fragment tag to a revision
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.SetFragmentTagResponse> SetFragmentTagAsync(global::Viam.App.V1.SetFragmentTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetFragmentTag, null, options, request);
      }
      /// <summary>
      /// Deletes a fragment tag
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteFragmentTagResponse DeleteFragmentTag(global::Viam.App.V1.DeleteFragmentTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFragmentTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a fragment tag
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteFragmentTagResponse DeleteFragmentTag(global::Viam.App.V1.DeleteFragmentTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFragmentTag, null, options, request);
      }
      /// <summary>
      /// Deletes a fragment tag
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteFragmentTagResponse> DeleteFragmentTagAsync(global::Viam.App.V1.DeleteFragmentTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFragmentTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a fragment tag
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteFragmentTagResponse> DeleteFragmentTagAsync(global::Viam.App.V1.DeleteFragmentTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFragmentTag, null, options, request);
      }
      /// <summary>
      /// Creates an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.AddRoleResponse AddRole(global::Viam.App.V1.AddRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.AddRoleResponse AddRole(global::Viam.App.V1.AddRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddRole, null, options, request);
      }
      /// <summary>
      /// Creates an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.AddRoleResponse> AddRoleAsync(global::Viam.App.V1.AddRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.AddRoleResponse> AddRoleAsync(global::Viam.App.V1.AddRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddRole, null, options, request);
      }
      /// <summary>
      /// Deletes an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.RemoveRoleResponse RemoveRole(global::Viam.App.V1.RemoveRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.RemoveRoleResponse RemoveRole(global::Viam.App.V1.RemoveRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveRole, null, options, request);
      }
      /// <summary>
      /// Deletes an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.RemoveRoleResponse> RemoveRoleAsync(global::Viam.App.V1.RemoveRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.RemoveRoleResponse> RemoveRoleAsync(global::Viam.App.V1.RemoveRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveRole, null, options, request);
      }
      /// <summary>
      /// Changes an IdentityAuthorization to a new IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ChangeRoleResponse ChangeRole(global::Viam.App.V1.ChangeRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Changes an IdentityAuthorization to a new IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ChangeRoleResponse ChangeRole(global::Viam.App.V1.ChangeRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeRole, null, options, request);
      }
      /// <summary>
      /// Changes an IdentityAuthorization to a new IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ChangeRoleResponse> ChangeRoleAsync(global::Viam.App.V1.ChangeRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Changes an IdentityAuthorization to a new IdentityAuthorization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ChangeRoleResponse> ChangeRoleAsync(global::Viam.App.V1.ChangeRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeRole, null, options, request);
      }
      /// <summary>
      /// Returns all authorization roles for a given resource
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListAuthorizationsResponse ListAuthorizations(global::Viam.App.V1.ListAuthorizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuthorizations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all authorization roles for a given resource
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListAuthorizationsResponse ListAuthorizations(global::Viam.App.V1.ListAuthorizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAuthorizations, null, options, request);
      }
      /// <summary>
      /// Returns all authorization roles for a given resource
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListAuthorizationsResponse> ListAuthorizationsAsync(global::Viam.App.V1.ListAuthorizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuthorizationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all authorization roles for a given resource
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListAuthorizationsResponse> ListAuthorizationsAsync(global::Viam.App.V1.ListAuthorizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAuthorizations, null, options, request);
      }
      /// <summary>
      /// Validates a permission for the current user
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CheckPermissionsResponse CheckPermissions(global::Viam.App.V1.CheckPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validates a permission for the current user
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CheckPermissionsResponse CheckPermissions(global::Viam.App.V1.CheckPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckPermissions, null, options, request);
      }
      /// <summary>
      /// Validates a permission for the current user
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CheckPermissionsResponse> CheckPermissionsAsync(global::Viam.App.V1.CheckPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validates a permission for the current user
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CheckPermissionsResponse> CheckPermissionsAsync(global::Viam.App.V1.CheckPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckPermissions, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRegistryItemResponse GetRegistryItem(global::Viam.App.V1.GetRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRegistryItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetRegistryItemResponse GetRegistryItem(global::Viam.App.V1.GetRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRegistryItemResponse> GetRegistryItemAsync(global::Viam.App.V1.GetRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRegistryItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetRegistryItemResponse> GetRegistryItemAsync(global::Viam.App.V1.GetRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateRegistryItemResponse CreateRegistryItem(global::Viam.App.V1.CreateRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRegistryItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateRegistryItemResponse CreateRegistryItem(global::Viam.App.V1.CreateRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateRegistryItemResponse> CreateRegistryItemAsync(global::Viam.App.V1.CreateRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRegistryItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateRegistryItemResponse> CreateRegistryItemAsync(global::Viam.App.V1.CreateRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRegistryItemResponse UpdateRegistryItem(global::Viam.App.V1.UpdateRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRegistryItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateRegistryItemResponse UpdateRegistryItem(global::Viam.App.V1.UpdateRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRegistryItemResponse> UpdateRegistryItemAsync(global::Viam.App.V1.UpdateRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRegistryItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateRegistryItemResponse> UpdateRegistryItemAsync(global::Viam.App.V1.UpdateRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListRegistryItemsResponse ListRegistryItems(global::Viam.App.V1.ListRegistryItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRegistryItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListRegistryItemsResponse ListRegistryItems(global::Viam.App.V1.ListRegistryItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRegistryItems, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListRegistryItemsResponse> ListRegistryItemsAsync(global::Viam.App.V1.ListRegistryItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRegistryItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListRegistryItemsResponse> ListRegistryItemsAsync(global::Viam.App.V1.ListRegistryItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRegistryItems, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteRegistryItemResponse DeleteRegistryItem(global::Viam.App.V1.DeleteRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRegistryItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteRegistryItemResponse DeleteRegistryItem(global::Viam.App.V1.DeleteRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteRegistryItemResponse> DeleteRegistryItemAsync(global::Viam.App.V1.DeleteRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRegistryItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteRegistryItemResponse> DeleteRegistryItemAsync(global::Viam.App.V1.DeleteRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.RenameRegistryItemResponse RenameRegistryItem(global::Viam.App.V1.RenameRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RenameRegistryItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.RenameRegistryItemResponse RenameRegistryItem(global::Viam.App.V1.RenameRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RenameRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.RenameRegistryItemResponse> RenameRegistryItemAsync(global::Viam.App.V1.RenameRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RenameRegistryItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.RenameRegistryItemResponse> RenameRegistryItemAsync(global::Viam.App.V1.RenameRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RenameRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.TransferRegistryItemResponse TransferRegistryItem(global::Viam.App.V1.TransferRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferRegistryItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.TransferRegistryItemResponse TransferRegistryItem(global::Viam.App.V1.TransferRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransferRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.TransferRegistryItemResponse> TransferRegistryItemAsync(global::Viam.App.V1.TransferRegistryItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferRegistryItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.TransferRegistryItemResponse> TransferRegistryItemAsync(global::Viam.App.V1.TransferRegistryItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransferRegistryItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateModuleResponse CreateModule(global::Viam.App.V1.CreateModuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateModule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateModuleResponse CreateModule(global::Viam.App.V1.CreateModuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateModule, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateModuleResponse> CreateModuleAsync(global::Viam.App.V1.CreateModuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateModuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateModuleResponse> CreateModuleAsync(global::Viam.App.V1.CreateModuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateModule, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateModuleResponse UpdateModule(global::Viam.App.V1.UpdateModuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateModule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.UpdateModuleResponse UpdateModule(global::Viam.App.V1.UpdateModuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateModule, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateModuleResponse> UpdateModuleAsync(global::Viam.App.V1.UpdateModuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateModuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.UpdateModuleResponse> UpdateModuleAsync(global::Viam.App.V1.UpdateModuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateModule, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Viam.App.V1.UploadModuleFileRequest, global::Viam.App.V1.UploadModuleFileResponse> UploadModuleFile(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadModuleFile(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Viam.App.V1.UploadModuleFileRequest, global::Viam.App.V1.UploadModuleFileResponse> UploadModuleFile(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_UploadModuleFile, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetModuleResponse GetModule(global::Viam.App.V1.GetModuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetModuleResponse GetModule(global::Viam.App.V1.GetModuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetModule, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetModuleResponse> GetModuleAsync(global::Viam.App.V1.GetModuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetModuleResponse> GetModuleAsync(global::Viam.App.V1.GetModuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetModule, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListModulesResponse ListModules(global::Viam.App.V1.ListModulesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModules(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListModulesResponse ListModules(global::Viam.App.V1.ListModulesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListModules, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListModulesResponse> ListModulesAsync(global::Viam.App.V1.ListModulesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModulesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListModulesResponse> ListModulesAsync(global::Viam.App.V1.ListModulesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListModules, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateKeyResponse CreateKey(global::Viam.App.V1.CreateKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateKeyResponse CreateKey(global::Viam.App.V1.CreateKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateKeyResponse> CreateKeyAsync(global::Viam.App.V1.CreateKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateKeyResponse> CreateKeyAsync(global::Viam.App.V1.CreateKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteKeyResponse DeleteKey(global::Viam.App.V1.DeleteKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.DeleteKeyResponse DeleteKey(global::Viam.App.V1.DeleteKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteKeyResponse> DeleteKeyAsync(global::Viam.App.V1.DeleteKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.DeleteKeyResponse> DeleteKeyAsync(global::Viam.App.V1.DeleteKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListKeysResponse ListKeys(global::Viam.App.V1.ListKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListKeys(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.ListKeysResponse ListKeys(global::Viam.App.V1.ListKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListKeys, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListKeysResponse> ListKeysAsync(global::Viam.App.V1.ListKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListKeysAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.ListKeysResponse> ListKeysAsync(global::Viam.App.V1.ListKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListKeys, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.RenameKeyResponse RenameKey(global::Viam.App.V1.RenameKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RenameKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.RenameKeyResponse RenameKey(global::Viam.App.V1.RenameKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RenameKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.RenameKeyResponse> RenameKeyAsync(global::Viam.App.V1.RenameKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RenameKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.RenameKeyResponse> RenameKeyAsync(global::Viam.App.V1.RenameKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RenameKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.RotateKeyResponse RotateKey(global::Viam.App.V1.RotateKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RotateKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.RotateKeyResponse RotateKey(global::Viam.App.V1.RotateKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RotateKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.RotateKeyResponse> RotateKeyAsync(global::Viam.App.V1.RotateKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RotateKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.RotateKeyResponse> RotateKeyAsync(global::Viam.App.V1.RotateKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RotateKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse CreateKeyFromExistingKeyAuthorizations(global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKeyFromExistingKeyAuthorizations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse CreateKeyFromExistingKeyAuthorizations(global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateKeyFromExistingKeyAuthorizations, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse> CreateKeyFromExistingKeyAuthorizationsAsync(global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKeyFromExistingKeyAuthorizationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse> CreateKeyFromExistingKeyAuthorizationsAsync(global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateKeyFromExistingKeyAuthorizations, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetAppContentResponse GetAppContent(global::Viam.App.V1.GetAppContentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAppContent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.V1.GetAppContentResponse GetAppContent(global::Viam.App.V1.GetAppContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAppContent, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetAppContentResponse> GetAppContentAsync(global::Viam.App.V1.GetAppContentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAppContentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.V1.GetAppContentResponse> GetAppContentAsync(global::Viam.App.V1.GetAppContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAppContent, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AppServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AppServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AppServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetUserIDByEmail, serviceImpl.GetUserIDByEmail)
          .AddMethod(__Method_CreateOrganization, serviceImpl.CreateOrganization)
          .AddMethod(__Method_ListOrganizations, serviceImpl.ListOrganizations)
          .AddMethod(__Method_GetOrganizationsWithAccessToLocation, serviceImpl.GetOrganizationsWithAccessToLocation)
          .AddMethod(__Method_ListOrganizationsByUser, serviceImpl.ListOrganizationsByUser)
          .AddMethod(__Method_SearchOrganizations, serviceImpl.SearchOrganizations)
          .AddMethod(__Method_GetOrganization, serviceImpl.GetOrganization)
          .AddMethod(__Method_GetOrganizationNamespaceAvailability, serviceImpl.GetOrganizationNamespaceAvailability)
          .AddMethod(__Method_UpdateOrganization, serviceImpl.UpdateOrganization)
          .AddMethod(__Method_UpdateOrganizationNamespace, serviceImpl.UpdateOrganizationNamespace)
          .AddMethod(__Method_DeleteOrganization, serviceImpl.DeleteOrganization)
          .AddMethod(__Method_GetOrganizationMetadata, serviceImpl.GetOrganizationMetadata)
          .AddMethod(__Method_UpdateOrganizationMetadata, serviceImpl.UpdateOrganizationMetadata)
          .AddMethod(__Method_ListOrganizationMembers, serviceImpl.ListOrganizationMembers)
          .AddMethod(__Method_CreateOrganizationInvite, serviceImpl.CreateOrganizationInvite)
          .AddMethod(__Method_UpdateOrganizationInviteAuthorizations, serviceImpl.UpdateOrganizationInviteAuthorizations)
          .AddMethod(__Method_DeleteOrganizationMember, serviceImpl.DeleteOrganizationMember)
          .AddMethod(__Method_DeleteOrganizationInvite, serviceImpl.DeleteOrganizationInvite)
          .AddMethod(__Method_ResendOrganizationInvite, serviceImpl.ResendOrganizationInvite)
          .AddMethod(__Method_EnableBillingService, serviceImpl.EnableBillingService)
          .AddMethod(__Method_DisableBillingService, serviceImpl.DisableBillingService)
          .AddMethod(__Method_UpdateBillingService, serviceImpl.UpdateBillingService)
          .AddMethod(__Method_GetBillingServiceConfig, serviceImpl.GetBillingServiceConfig)
          .AddMethod(__Method_OrganizationSetSupportEmail, serviceImpl.OrganizationSetSupportEmail)
          .AddMethod(__Method_OrganizationGetSupportEmail, serviceImpl.OrganizationGetSupportEmail)
          .AddMethod(__Method_OrganizationSetLogo, serviceImpl.OrganizationSetLogo)
          .AddMethod(__Method_OrganizationGetLogo, serviceImpl.OrganizationGetLogo)
          .AddMethod(__Method_EnableAuthService, serviceImpl.EnableAuthService)
          .AddMethod(__Method_DisableAuthService, serviceImpl.DisableAuthService)
          .AddMethod(__Method_CreateOAuthApp, serviceImpl.CreateOAuthApp)
          .AddMethod(__Method_ReadOAuthApp, serviceImpl.ReadOAuthApp)
          .AddMethod(__Method_UpdateOAuthApp, serviceImpl.UpdateOAuthApp)
          .AddMethod(__Method_DeleteOAuthApp, serviceImpl.DeleteOAuthApp)
          .AddMethod(__Method_ListOAuthApps, serviceImpl.ListOAuthApps)
          .AddMethod(__Method_CreateLocation, serviceImpl.CreateLocation)
          .AddMethod(__Method_GetLocation, serviceImpl.GetLocation)
          .AddMethod(__Method_UpdateLocation, serviceImpl.UpdateLocation)
          .AddMethod(__Method_DeleteLocation, serviceImpl.DeleteLocation)
          .AddMethod(__Method_GetLocationMetadata, serviceImpl.GetLocationMetadata)
          .AddMethod(__Method_UpdateLocationMetadata, serviceImpl.UpdateLocationMetadata)
          .AddMethod(__Method_ListLocations, serviceImpl.ListLocations)
          .AddMethod(__Method_ShareLocation, serviceImpl.ShareLocation)
          .AddMethod(__Method_UnshareLocation, serviceImpl.UnshareLocation)
          .AddMethod(__Method_LocationAuth, serviceImpl.LocationAuth)
          .AddMethod(__Method_CreateLocationSecret, serviceImpl.CreateLocationSecret)
          .AddMethod(__Method_DeleteLocationSecret, serviceImpl.DeleteLocationSecret)
          .AddMethod(__Method_GetRobot, serviceImpl.GetRobot)
          .AddMethod(__Method_GetRobotMetadata, serviceImpl.GetRobotMetadata)
          .AddMethod(__Method_UpdateRobotMetadata, serviceImpl.UpdateRobotMetadata)
          .AddMethod(__Method_GetRoverRentalRobots, serviceImpl.GetRoverRentalRobots)
          .AddMethod(__Method_GetRobotParts, serviceImpl.GetRobotParts)
          .AddMethod(__Method_GetRobotPart, serviceImpl.GetRobotPart)
          .AddMethod(__Method_GetRobotPartLogs, serviceImpl.GetRobotPartLogs)
          .AddMethod(__Method_TailRobotPartLogs, serviceImpl.TailRobotPartLogs)
          .AddMethod(__Method_GetRobotPartHistory, serviceImpl.GetRobotPartHistory)
          .AddMethod(__Method_UpdateRobotPart, serviceImpl.UpdateRobotPart)
          .AddMethod(__Method_NewRobotPart, serviceImpl.NewRobotPart)
          .AddMethod(__Method_DeleteRobotPart, serviceImpl.DeleteRobotPart)
          .AddMethod(__Method_GetRobotPartMetadata, serviceImpl.GetRobotPartMetadata)
          .AddMethod(__Method_UpdateRobotPartMetadata, serviceImpl.UpdateRobotPartMetadata)
          .AddMethod(__Method_GetRobotAPIKeys, serviceImpl.GetRobotAPIKeys)
          .AddMethod(__Method_MarkPartAsMain, serviceImpl.MarkPartAsMain)
          .AddMethod(__Method_MarkPartForRestart, serviceImpl.MarkPartForRestart)
          .AddMethod(__Method_CreateRobotPartSecret, serviceImpl.CreateRobotPartSecret)
          .AddMethod(__Method_DeleteRobotPartSecret, serviceImpl.DeleteRobotPartSecret)
          .AddMethod(__Method_ListRobots, serviceImpl.ListRobots)
          .AddMethod(__Method_NewRobot, serviceImpl.NewRobot)
          .AddMethod(__Method_UpdateRobot, serviceImpl.UpdateRobot)
          .AddMethod(__Method_DeleteRobot, serviceImpl.DeleteRobot)
          .AddMethod(__Method_ListFragments, serviceImpl.ListFragments)
          .AddMethod(__Method_GetFragment, serviceImpl.GetFragment)
          .AddMethod(__Method_CreateFragment, serviceImpl.CreateFragment)
          .AddMethod(__Method_UpdateFragment, serviceImpl.UpdateFragment)
          .AddMethod(__Method_DeleteFragment, serviceImpl.DeleteFragment)
          .AddMethod(__Method_ListNestedFragments, serviceImpl.ListNestedFragments)
          .AddMethod(__Method_ListMachineFragments, serviceImpl.ListMachineFragments)
          .AddMethod(__Method_ListMachineSummaries, serviceImpl.ListMachineSummaries)
          .AddMethod(__Method_GetFragmentHistory, serviceImpl.GetFragmentHistory)
          .AddMethod(__Method_GetFragmentUsage, serviceImpl.GetFragmentUsage)
          .AddMethod(__Method_SetFragmentTag, serviceImpl.SetFragmentTag)
          .AddMethod(__Method_DeleteFragmentTag, serviceImpl.DeleteFragmentTag)
          .AddMethod(__Method_AddRole, serviceImpl.AddRole)
          .AddMethod(__Method_RemoveRole, serviceImpl.RemoveRole)
          .AddMethod(__Method_ChangeRole, serviceImpl.ChangeRole)
          .AddMethod(__Method_ListAuthorizations, serviceImpl.ListAuthorizations)
          .AddMethod(__Method_CheckPermissions, serviceImpl.CheckPermissions)
          .AddMethod(__Method_GetRegistryItem, serviceImpl.GetRegistryItem)
          .AddMethod(__Method_CreateRegistryItem, serviceImpl.CreateRegistryItem)
          .AddMethod(__Method_UpdateRegistryItem, serviceImpl.UpdateRegistryItem)
          .AddMethod(__Method_ListRegistryItems, serviceImpl.ListRegistryItems)
          .AddMethod(__Method_DeleteRegistryItem, serviceImpl.DeleteRegistryItem)
          .AddMethod(__Method_RenameRegistryItem, serviceImpl.RenameRegistryItem)
          .AddMethod(__Method_TransferRegistryItem, serviceImpl.TransferRegistryItem)
          .AddMethod(__Method_CreateModule, serviceImpl.CreateModule)
          .AddMethod(__Method_UpdateModule, serviceImpl.UpdateModule)
          .AddMethod(__Method_UploadModuleFile, serviceImpl.UploadModuleFile)
          .AddMethod(__Method_GetModule, serviceImpl.GetModule)
          .AddMethod(__Method_ListModules, serviceImpl.ListModules)
          .AddMethod(__Method_CreateKey, serviceImpl.CreateKey)
          .AddMethod(__Method_DeleteKey, serviceImpl.DeleteKey)
          .AddMethod(__Method_ListKeys, serviceImpl.ListKeys)
          .AddMethod(__Method_RenameKey, serviceImpl.RenameKey)
          .AddMethod(__Method_RotateKey, serviceImpl.RotateKey)
          .AddMethod(__Method_CreateKeyFromExistingKeyAuthorizations, serviceImpl.CreateKeyFromExistingKeyAuthorizations)
          .AddMethod(__Method_GetAppContent, serviceImpl.GetAppContent).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AppServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetUserIDByEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetUserIDByEmailRequest, global::Viam.App.V1.GetUserIDByEmailResponse>(serviceImpl.GetUserIDByEmail));
      serviceBinder.AddMethod(__Method_CreateOrganization, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateOrganizationRequest, global::Viam.App.V1.CreateOrganizationResponse>(serviceImpl.CreateOrganization));
      serviceBinder.AddMethod(__Method_ListOrganizations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListOrganizationsRequest, global::Viam.App.V1.ListOrganizationsResponse>(serviceImpl.ListOrganizations));
      serviceBinder.AddMethod(__Method_GetOrganizationsWithAccessToLocation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetOrganizationsWithAccessToLocationRequest, global::Viam.App.V1.GetOrganizationsWithAccessToLocationResponse>(serviceImpl.GetOrganizationsWithAccessToLocation));
      serviceBinder.AddMethod(__Method_ListOrganizationsByUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListOrganizationsByUserRequest, global::Viam.App.V1.ListOrganizationsByUserResponse>(serviceImpl.ListOrganizationsByUser));
      serviceBinder.AddMethod(__Method_SearchOrganizations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.SearchOrganizationsRequest, global::Viam.App.V1.SearchOrganizationsResponse>(serviceImpl.SearchOrganizations));
      serviceBinder.AddMethod(__Method_GetOrganization, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetOrganizationRequest, global::Viam.App.V1.GetOrganizationResponse>(serviceImpl.GetOrganization));
      serviceBinder.AddMethod(__Method_GetOrganizationNamespaceAvailability, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetOrganizationNamespaceAvailabilityRequest, global::Viam.App.V1.GetOrganizationNamespaceAvailabilityResponse>(serviceImpl.GetOrganizationNamespaceAvailability));
      serviceBinder.AddMethod(__Method_UpdateOrganization, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateOrganizationRequest, global::Viam.App.V1.UpdateOrganizationResponse>(serviceImpl.UpdateOrganization));
      serviceBinder.AddMethod(__Method_UpdateOrganizationNamespace, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateOrganizationNamespaceRequest, global::Viam.App.V1.UpdateOrganizationNamespaceResponse>(serviceImpl.UpdateOrganizationNamespace));
      serviceBinder.AddMethod(__Method_DeleteOrganization, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteOrganizationRequest, global::Viam.App.V1.DeleteOrganizationResponse>(serviceImpl.DeleteOrganization));
      serviceBinder.AddMethod(__Method_GetOrganizationMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetOrganizationMetadataRequest, global::Viam.App.V1.GetOrganizationMetadataResponse>(serviceImpl.GetOrganizationMetadata));
      serviceBinder.AddMethod(__Method_UpdateOrganizationMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateOrganizationMetadataRequest, global::Viam.App.V1.UpdateOrganizationMetadataResponse>(serviceImpl.UpdateOrganizationMetadata));
      serviceBinder.AddMethod(__Method_ListOrganizationMembers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListOrganizationMembersRequest, global::Viam.App.V1.ListOrganizationMembersResponse>(serviceImpl.ListOrganizationMembers));
      serviceBinder.AddMethod(__Method_CreateOrganizationInvite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateOrganizationInviteRequest, global::Viam.App.V1.CreateOrganizationInviteResponse>(serviceImpl.CreateOrganizationInvite));
      serviceBinder.AddMethod(__Method_UpdateOrganizationInviteAuthorizations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsRequest, global::Viam.App.V1.UpdateOrganizationInviteAuthorizationsResponse>(serviceImpl.UpdateOrganizationInviteAuthorizations));
      serviceBinder.AddMethod(__Method_DeleteOrganizationMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteOrganizationMemberRequest, global::Viam.App.V1.DeleteOrganizationMemberResponse>(serviceImpl.DeleteOrganizationMember));
      serviceBinder.AddMethod(__Method_DeleteOrganizationInvite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteOrganizationInviteRequest, global::Viam.App.V1.DeleteOrganizationInviteResponse>(serviceImpl.DeleteOrganizationInvite));
      serviceBinder.AddMethod(__Method_ResendOrganizationInvite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ResendOrganizationInviteRequest, global::Viam.App.V1.ResendOrganizationInviteResponse>(serviceImpl.ResendOrganizationInvite));
      serviceBinder.AddMethod(__Method_EnableBillingService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.EnableBillingServiceRequest, global::Viam.App.V1.EnableBillingServiceResponse>(serviceImpl.EnableBillingService));
      serviceBinder.AddMethod(__Method_DisableBillingService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DisableBillingServiceRequest, global::Viam.App.V1.DisableBillingServiceResponse>(serviceImpl.DisableBillingService));
      serviceBinder.AddMethod(__Method_UpdateBillingService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateBillingServiceRequest, global::Viam.App.V1.UpdateBillingServiceResponse>(serviceImpl.UpdateBillingService));
      serviceBinder.AddMethod(__Method_GetBillingServiceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetBillingServiceConfigRequest, global::Viam.App.V1.GetBillingServiceConfigResponse>(serviceImpl.GetBillingServiceConfig));
      serviceBinder.AddMethod(__Method_OrganizationSetSupportEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.OrganizationSetSupportEmailRequest, global::Viam.App.V1.OrganizationSetSupportEmailResponse>(serviceImpl.OrganizationSetSupportEmail));
      serviceBinder.AddMethod(__Method_OrganizationGetSupportEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.OrganizationGetSupportEmailRequest, global::Viam.App.V1.OrganizationGetSupportEmailResponse>(serviceImpl.OrganizationGetSupportEmail));
      serviceBinder.AddMethod(__Method_OrganizationSetLogo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.OrganizationSetLogoRequest, global::Viam.App.V1.OrganizationSetLogoResponse>(serviceImpl.OrganizationSetLogo));
      serviceBinder.AddMethod(__Method_OrganizationGetLogo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.OrganizationGetLogoRequest, global::Viam.App.V1.OrganizationGetLogoResponse>(serviceImpl.OrganizationGetLogo));
      serviceBinder.AddMethod(__Method_EnableAuthService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.EnableAuthServiceRequest, global::Viam.App.V1.EnableAuthServiceResponse>(serviceImpl.EnableAuthService));
      serviceBinder.AddMethod(__Method_DisableAuthService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DisableAuthServiceRequest, global::Viam.App.V1.DisableAuthServiceResponse>(serviceImpl.DisableAuthService));
      serviceBinder.AddMethod(__Method_CreateOAuthApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateOAuthAppRequest, global::Viam.App.V1.CreateOAuthAppResponse>(serviceImpl.CreateOAuthApp));
      serviceBinder.AddMethod(__Method_ReadOAuthApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ReadOAuthAppRequest, global::Viam.App.V1.ReadOAuthAppResponse>(serviceImpl.ReadOAuthApp));
      serviceBinder.AddMethod(__Method_UpdateOAuthApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateOAuthAppRequest, global::Viam.App.V1.UpdateOAuthAppResponse>(serviceImpl.UpdateOAuthApp));
      serviceBinder.AddMethod(__Method_DeleteOAuthApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteOAuthAppRequest, global::Viam.App.V1.DeleteOAuthAppResponse>(serviceImpl.DeleteOAuthApp));
      serviceBinder.AddMethod(__Method_ListOAuthApps, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListOAuthAppsRequest, global::Viam.App.V1.ListOAuthAppsResponse>(serviceImpl.ListOAuthApps));
      serviceBinder.AddMethod(__Method_CreateLocation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateLocationRequest, global::Viam.App.V1.CreateLocationResponse>(serviceImpl.CreateLocation));
      serviceBinder.AddMethod(__Method_GetLocation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetLocationRequest, global::Viam.App.V1.GetLocationResponse>(serviceImpl.GetLocation));
      serviceBinder.AddMethod(__Method_UpdateLocation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateLocationRequest, global::Viam.App.V1.UpdateLocationResponse>(serviceImpl.UpdateLocation));
      serviceBinder.AddMethod(__Method_DeleteLocation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteLocationRequest, global::Viam.App.V1.DeleteLocationResponse>(serviceImpl.DeleteLocation));
      serviceBinder.AddMethod(__Method_GetLocationMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetLocationMetadataRequest, global::Viam.App.V1.GetLocationMetadataResponse>(serviceImpl.GetLocationMetadata));
      serviceBinder.AddMethod(__Method_UpdateLocationMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateLocationMetadataRequest, global::Viam.App.V1.UpdateLocationMetadataResponse>(serviceImpl.UpdateLocationMetadata));
      serviceBinder.AddMethod(__Method_ListLocations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListLocationsRequest, global::Viam.App.V1.ListLocationsResponse>(serviceImpl.ListLocations));
      serviceBinder.AddMethod(__Method_ShareLocation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ShareLocationRequest, global::Viam.App.V1.ShareLocationResponse>(serviceImpl.ShareLocation));
      serviceBinder.AddMethod(__Method_UnshareLocation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UnshareLocationRequest, global::Viam.App.V1.UnshareLocationResponse>(serviceImpl.UnshareLocation));
      serviceBinder.AddMethod(__Method_LocationAuth, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.LocationAuthRequest, global::Viam.App.V1.LocationAuthResponse>(serviceImpl.LocationAuth));
      serviceBinder.AddMethod(__Method_CreateLocationSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateLocationSecretRequest, global::Viam.App.V1.CreateLocationSecretResponse>(serviceImpl.CreateLocationSecret));
      serviceBinder.AddMethod(__Method_DeleteLocationSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteLocationSecretRequest, global::Viam.App.V1.DeleteLocationSecretResponse>(serviceImpl.DeleteLocationSecret));
      serviceBinder.AddMethod(__Method_GetRobot, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRobotRequest, global::Viam.App.V1.GetRobotResponse>(serviceImpl.GetRobot));
      serviceBinder.AddMethod(__Method_GetRobotMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRobotMetadataRequest, global::Viam.App.V1.GetRobotMetadataResponse>(serviceImpl.GetRobotMetadata));
      serviceBinder.AddMethod(__Method_UpdateRobotMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateRobotMetadataRequest, global::Viam.App.V1.UpdateRobotMetadataResponse>(serviceImpl.UpdateRobotMetadata));
      serviceBinder.AddMethod(__Method_GetRoverRentalRobots, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRoverRentalRobotsRequest, global::Viam.App.V1.GetRoverRentalRobotsResponse>(serviceImpl.GetRoverRentalRobots));
      serviceBinder.AddMethod(__Method_GetRobotParts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRobotPartsRequest, global::Viam.App.V1.GetRobotPartsResponse>(serviceImpl.GetRobotParts));
      serviceBinder.AddMethod(__Method_GetRobotPart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRobotPartRequest, global::Viam.App.V1.GetRobotPartResponse>(serviceImpl.GetRobotPart));
      serviceBinder.AddMethod(__Method_GetRobotPartLogs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRobotPartLogsRequest, global::Viam.App.V1.GetRobotPartLogsResponse>(serviceImpl.GetRobotPartLogs));
      serviceBinder.AddMethod(__Method_TailRobotPartLogs, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Viam.App.V1.TailRobotPartLogsRequest, global::Viam.App.V1.TailRobotPartLogsResponse>(serviceImpl.TailRobotPartLogs));
      serviceBinder.AddMethod(__Method_GetRobotPartHistory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRobotPartHistoryRequest, global::Viam.App.V1.GetRobotPartHistoryResponse>(serviceImpl.GetRobotPartHistory));
      serviceBinder.AddMethod(__Method_UpdateRobotPart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateRobotPartRequest, global::Viam.App.V1.UpdateRobotPartResponse>(serviceImpl.UpdateRobotPart));
      serviceBinder.AddMethod(__Method_NewRobotPart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.NewRobotPartRequest, global::Viam.App.V1.NewRobotPartResponse>(serviceImpl.NewRobotPart));
      serviceBinder.AddMethod(__Method_DeleteRobotPart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteRobotPartRequest, global::Viam.App.V1.DeleteRobotPartResponse>(serviceImpl.DeleteRobotPart));
      serviceBinder.AddMethod(__Method_GetRobotPartMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRobotPartMetadataRequest, global::Viam.App.V1.GetRobotPartMetadataResponse>(serviceImpl.GetRobotPartMetadata));
      serviceBinder.AddMethod(__Method_UpdateRobotPartMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateRobotPartMetadataRequest, global::Viam.App.V1.UpdateRobotPartMetadataResponse>(serviceImpl.UpdateRobotPartMetadata));
      serviceBinder.AddMethod(__Method_GetRobotAPIKeys, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRobotAPIKeysRequest, global::Viam.App.V1.GetRobotAPIKeysResponse>(serviceImpl.GetRobotAPIKeys));
      serviceBinder.AddMethod(__Method_MarkPartAsMain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.MarkPartAsMainRequest, global::Viam.App.V1.MarkPartAsMainResponse>(serviceImpl.MarkPartAsMain));
      serviceBinder.AddMethod(__Method_MarkPartForRestart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.MarkPartForRestartRequest, global::Viam.App.V1.MarkPartForRestartResponse>(serviceImpl.MarkPartForRestart));
      serviceBinder.AddMethod(__Method_CreateRobotPartSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateRobotPartSecretRequest, global::Viam.App.V1.CreateRobotPartSecretResponse>(serviceImpl.CreateRobotPartSecret));
      serviceBinder.AddMethod(__Method_DeleteRobotPartSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteRobotPartSecretRequest, global::Viam.App.V1.DeleteRobotPartSecretResponse>(serviceImpl.DeleteRobotPartSecret));
      serviceBinder.AddMethod(__Method_ListRobots, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListRobotsRequest, global::Viam.App.V1.ListRobotsResponse>(serviceImpl.ListRobots));
      serviceBinder.AddMethod(__Method_NewRobot, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.NewRobotRequest, global::Viam.App.V1.NewRobotResponse>(serviceImpl.NewRobot));
      serviceBinder.AddMethod(__Method_UpdateRobot, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateRobotRequest, global::Viam.App.V1.UpdateRobotResponse>(serviceImpl.UpdateRobot));
      serviceBinder.AddMethod(__Method_DeleteRobot, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteRobotRequest, global::Viam.App.V1.DeleteRobotResponse>(serviceImpl.DeleteRobot));
      serviceBinder.AddMethod(__Method_ListFragments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListFragmentsRequest, global::Viam.App.V1.ListFragmentsResponse>(serviceImpl.ListFragments));
      serviceBinder.AddMethod(__Method_GetFragment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetFragmentRequest, global::Viam.App.V1.GetFragmentResponse>(serviceImpl.GetFragment));
      serviceBinder.AddMethod(__Method_CreateFragment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateFragmentRequest, global::Viam.App.V1.CreateFragmentResponse>(serviceImpl.CreateFragment));
      serviceBinder.AddMethod(__Method_UpdateFragment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateFragmentRequest, global::Viam.App.V1.UpdateFragmentResponse>(serviceImpl.UpdateFragment));
      serviceBinder.AddMethod(__Method_DeleteFragment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteFragmentRequest, global::Viam.App.V1.DeleteFragmentResponse>(serviceImpl.DeleteFragment));
      serviceBinder.AddMethod(__Method_ListNestedFragments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListNestedFragmentsRequest, global::Viam.App.V1.ListNestedFragmentsResponse>(serviceImpl.ListNestedFragments));
      serviceBinder.AddMethod(__Method_ListMachineFragments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListMachineFragmentsRequest, global::Viam.App.V1.ListMachineFragmentsResponse>(serviceImpl.ListMachineFragments));
      serviceBinder.AddMethod(__Method_ListMachineSummaries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListMachineSummariesRequest, global::Viam.App.V1.ListMachineSummariesResponse>(serviceImpl.ListMachineSummaries));
      serviceBinder.AddMethod(__Method_GetFragmentHistory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetFragmentHistoryRequest, global::Viam.App.V1.GetFragmentHistoryResponse>(serviceImpl.GetFragmentHistory));
      serviceBinder.AddMethod(__Method_GetFragmentUsage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetFragmentUsageRequest, global::Viam.App.V1.GetFragmentUsageResponse>(serviceImpl.GetFragmentUsage));
      serviceBinder.AddMethod(__Method_SetFragmentTag, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.SetFragmentTagRequest, global::Viam.App.V1.SetFragmentTagResponse>(serviceImpl.SetFragmentTag));
      serviceBinder.AddMethod(__Method_DeleteFragmentTag, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteFragmentTagRequest, global::Viam.App.V1.DeleteFragmentTagResponse>(serviceImpl.DeleteFragmentTag));
      serviceBinder.AddMethod(__Method_AddRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.AddRoleRequest, global::Viam.App.V1.AddRoleResponse>(serviceImpl.AddRole));
      serviceBinder.AddMethod(__Method_RemoveRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.RemoveRoleRequest, global::Viam.App.V1.RemoveRoleResponse>(serviceImpl.RemoveRole));
      serviceBinder.AddMethod(__Method_ChangeRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ChangeRoleRequest, global::Viam.App.V1.ChangeRoleResponse>(serviceImpl.ChangeRole));
      serviceBinder.AddMethod(__Method_ListAuthorizations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListAuthorizationsRequest, global::Viam.App.V1.ListAuthorizationsResponse>(serviceImpl.ListAuthorizations));
      serviceBinder.AddMethod(__Method_CheckPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CheckPermissionsRequest, global::Viam.App.V1.CheckPermissionsResponse>(serviceImpl.CheckPermissions));
      serviceBinder.AddMethod(__Method_GetRegistryItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetRegistryItemRequest, global::Viam.App.V1.GetRegistryItemResponse>(serviceImpl.GetRegistryItem));
      serviceBinder.AddMethod(__Method_CreateRegistryItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateRegistryItemRequest, global::Viam.App.V1.CreateRegistryItemResponse>(serviceImpl.CreateRegistryItem));
      serviceBinder.AddMethod(__Method_UpdateRegistryItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateRegistryItemRequest, global::Viam.App.V1.UpdateRegistryItemResponse>(serviceImpl.UpdateRegistryItem));
      serviceBinder.AddMethod(__Method_ListRegistryItems, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListRegistryItemsRequest, global::Viam.App.V1.ListRegistryItemsResponse>(serviceImpl.ListRegistryItems));
      serviceBinder.AddMethod(__Method_DeleteRegistryItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteRegistryItemRequest, global::Viam.App.V1.DeleteRegistryItemResponse>(serviceImpl.DeleteRegistryItem));
      serviceBinder.AddMethod(__Method_RenameRegistryItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.RenameRegistryItemRequest, global::Viam.App.V1.RenameRegistryItemResponse>(serviceImpl.RenameRegistryItem));
      serviceBinder.AddMethod(__Method_TransferRegistryItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.TransferRegistryItemRequest, global::Viam.App.V1.TransferRegistryItemResponse>(serviceImpl.TransferRegistryItem));
      serviceBinder.AddMethod(__Method_CreateModule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateModuleRequest, global::Viam.App.V1.CreateModuleResponse>(serviceImpl.CreateModule));
      serviceBinder.AddMethod(__Method_UpdateModule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.UpdateModuleRequest, global::Viam.App.V1.UpdateModuleResponse>(serviceImpl.UpdateModule));
      serviceBinder.AddMethod(__Method_UploadModuleFile, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Viam.App.V1.UploadModuleFileRequest, global::Viam.App.V1.UploadModuleFileResponse>(serviceImpl.UploadModuleFile));
      serviceBinder.AddMethod(__Method_GetModule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetModuleRequest, global::Viam.App.V1.GetModuleResponse>(serviceImpl.GetModule));
      serviceBinder.AddMethod(__Method_ListModules, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListModulesRequest, global::Viam.App.V1.ListModulesResponse>(serviceImpl.ListModules));
      serviceBinder.AddMethod(__Method_CreateKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateKeyRequest, global::Viam.App.V1.CreateKeyResponse>(serviceImpl.CreateKey));
      serviceBinder.AddMethod(__Method_DeleteKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.DeleteKeyRequest, global::Viam.App.V1.DeleteKeyResponse>(serviceImpl.DeleteKey));
      serviceBinder.AddMethod(__Method_ListKeys, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.ListKeysRequest, global::Viam.App.V1.ListKeysResponse>(serviceImpl.ListKeys));
      serviceBinder.AddMethod(__Method_RenameKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.RenameKeyRequest, global::Viam.App.V1.RenameKeyResponse>(serviceImpl.RenameKey));
      serviceBinder.AddMethod(__Method_RotateKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.RotateKeyRequest, global::Viam.App.V1.RotateKeyResponse>(serviceImpl.RotateKey));
      serviceBinder.AddMethod(__Method_CreateKeyFromExistingKeyAuthorizations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsRequest, global::Viam.App.V1.CreateKeyFromExistingKeyAuthorizationsResponse>(serviceImpl.CreateKeyFromExistingKeyAuthorizations));
      serviceBinder.AddMethod(__Method_GetAppContent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.V1.GetAppContentRequest, global::Viam.App.V1.GetAppContentResponse>(serviceImpl.GetAppContent));
    }

  }
}
#endregion
