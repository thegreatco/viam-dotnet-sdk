// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: app/cloudslam/v1/cloud_slam.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Viam.App.Cloudslam.V1 {
  public static partial class CloudSLAMService
  {
    static readonly string __ServiceName = "viam.app.cloudslam.v1.CloudSLAMService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.StartMappingSessionRequest> __Marshaller_viam_app_cloudslam_v1_StartMappingSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.StartMappingSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.StartMappingSessionResponse> __Marshaller_viam_app_cloudslam_v1_StartMappingSessionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.StartMappingSessionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest> __Marshaller_viam_app_cloudslam_v1_GetActiveMappingSessionsForRobotRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse> __Marshaller_viam_app_cloudslam_v1_GetActiveMappingSessionsForRobotResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest> __Marshaller_viam_app_cloudslam_v1_GetMappingSessionPointCloudRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse> __Marshaller_viam_app_cloudslam_v1_GetMappingSessionPointCloudResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest> __Marshaller_viam_app_cloudslam_v1_ListMappingSessionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse> __Marshaller_viam_app_cloudslam_v1_ListMappingSessionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.StopMappingSessionRequest> __Marshaller_viam_app_cloudslam_v1_StopMappingSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.StopMappingSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.StopMappingSessionResponse> __Marshaller_viam_app_cloudslam_v1_StopMappingSessionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.StopMappingSessionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest> __Marshaller_viam_app_cloudslam_v1_GetMappingSessionMetadataByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse> __Marshaller_viam_app_cloudslam_v1_GetMappingSessionMetadataByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Cloudslam.V1.StartMappingSessionRequest, global::Viam.App.Cloudslam.V1.StartMappingSessionResponse> __Method_StartMappingSession = new grpc::Method<global::Viam.App.Cloudslam.V1.StartMappingSessionRequest, global::Viam.App.Cloudslam.V1.StartMappingSessionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartMappingSession",
        __Marshaller_viam_app_cloudslam_v1_StartMappingSessionRequest,
        __Marshaller_viam_app_cloudslam_v1_StartMappingSessionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest, global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse> __Method_GetActiveMappingSessionsForRobot = new grpc::Method<global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest, global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetActiveMappingSessionsForRobot",
        __Marshaller_viam_app_cloudslam_v1_GetActiveMappingSessionsForRobotRequest,
        __Marshaller_viam_app_cloudslam_v1_GetActiveMappingSessionsForRobotResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest, global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse> __Method_GetMappingSessionPointCloud = new grpc::Method<global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest, global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMappingSessionPointCloud",
        __Marshaller_viam_app_cloudslam_v1_GetMappingSessionPointCloudRequest,
        __Marshaller_viam_app_cloudslam_v1_GetMappingSessionPointCloudResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest, global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse> __Method_ListMappingSessions = new grpc::Method<global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest, global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMappingSessions",
        __Marshaller_viam_app_cloudslam_v1_ListMappingSessionsRequest,
        __Marshaller_viam_app_cloudslam_v1_ListMappingSessionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Cloudslam.V1.StopMappingSessionRequest, global::Viam.App.Cloudslam.V1.StopMappingSessionResponse> __Method_StopMappingSession = new grpc::Method<global::Viam.App.Cloudslam.V1.StopMappingSessionRequest, global::Viam.App.Cloudslam.V1.StopMappingSessionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopMappingSession",
        __Marshaller_viam_app_cloudslam_v1_StopMappingSessionRequest,
        __Marshaller_viam_app_cloudslam_v1_StopMappingSessionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest, global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse> __Method_GetMappingSessionMetadataByID = new grpc::Method<global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest, global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMappingSessionMetadataByID",
        __Marshaller_viam_app_cloudslam_v1_GetMappingSessionMetadataByIDRequest,
        __Marshaller_viam_app_cloudslam_v1_GetMappingSessionMetadataByIDResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Viam.App.Cloudslam.V1.CloudSlamReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CloudSLAMService</summary>
    [grpc::BindServiceMethod(typeof(CloudSLAMService), "BindService")]
    public abstract partial class CloudSLAMServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Cloudslam.V1.StartMappingSessionResponse> StartMappingSession(global::Viam.App.Cloudslam.V1.StartMappingSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse> GetActiveMappingSessionsForRobot(global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse> GetMappingSessionPointCloud(global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse> ListMappingSessions(global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Cloudslam.V1.StopMappingSessionResponse> StopMappingSession(global::Viam.App.Cloudslam.V1.StopMappingSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse> GetMappingSessionMetadataByID(global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CloudSLAMService</summary>
    public partial class CloudSLAMServiceClient : grpc::ClientBase<CloudSLAMServiceClient>
    {
      /// <summary>Creates a new client for CloudSLAMService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudSLAMServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CloudSLAMService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudSLAMServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudSLAMServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudSLAMServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.StartMappingSessionResponse StartMappingSession(global::Viam.App.Cloudslam.V1.StartMappingSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartMappingSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.StartMappingSessionResponse StartMappingSession(global::Viam.App.Cloudslam.V1.StartMappingSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartMappingSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.StartMappingSessionResponse> StartMappingSessionAsync(global::Viam.App.Cloudslam.V1.StartMappingSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartMappingSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.StartMappingSessionResponse> StartMappingSessionAsync(global::Viam.App.Cloudslam.V1.StartMappingSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartMappingSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse GetActiveMappingSessionsForRobot(global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActiveMappingSessionsForRobot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse GetActiveMappingSessionsForRobot(global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetActiveMappingSessionsForRobot, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse> GetActiveMappingSessionsForRobotAsync(global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActiveMappingSessionsForRobotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse> GetActiveMappingSessionsForRobotAsync(global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetActiveMappingSessionsForRobot, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse GetMappingSessionPointCloud(global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMappingSessionPointCloud(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse GetMappingSessionPointCloud(global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMappingSessionPointCloud, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse> GetMappingSessionPointCloudAsync(global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMappingSessionPointCloudAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse> GetMappingSessionPointCloudAsync(global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMappingSessionPointCloud, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse ListMappingSessions(global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMappingSessions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse ListMappingSessions(global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMappingSessions, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse> ListMappingSessionsAsync(global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMappingSessionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse> ListMappingSessionsAsync(global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMappingSessions, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.StopMappingSessionResponse StopMappingSession(global::Viam.App.Cloudslam.V1.StopMappingSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopMappingSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.StopMappingSessionResponse StopMappingSession(global::Viam.App.Cloudslam.V1.StopMappingSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopMappingSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.StopMappingSessionResponse> StopMappingSessionAsync(global::Viam.App.Cloudslam.V1.StopMappingSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopMappingSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.StopMappingSessionResponse> StopMappingSessionAsync(global::Viam.App.Cloudslam.V1.StopMappingSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopMappingSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse GetMappingSessionMetadataByID(global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMappingSessionMetadataByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse GetMappingSessionMetadataByID(global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMappingSessionMetadataByID, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse> GetMappingSessionMetadataByIDAsync(global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMappingSessionMetadataByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse> GetMappingSessionMetadataByIDAsync(global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMappingSessionMetadataByID, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CloudSLAMServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CloudSLAMServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CloudSLAMServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_StartMappingSession, serviceImpl.StartMappingSession)
          .AddMethod(__Method_GetActiveMappingSessionsForRobot, serviceImpl.GetActiveMappingSessionsForRobot)
          .AddMethod(__Method_GetMappingSessionPointCloud, serviceImpl.GetMappingSessionPointCloud)
          .AddMethod(__Method_ListMappingSessions, serviceImpl.ListMappingSessions)
          .AddMethod(__Method_StopMappingSession, serviceImpl.StopMappingSession)
          .AddMethod(__Method_GetMappingSessionMetadataByID, serviceImpl.GetMappingSessionMetadataByID).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CloudSLAMServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_StartMappingSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Cloudslam.V1.StartMappingSessionRequest, global::Viam.App.Cloudslam.V1.StartMappingSessionResponse>(serviceImpl.StartMappingSession));
      serviceBinder.AddMethod(__Method_GetActiveMappingSessionsForRobot, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotRequest, global::Viam.App.Cloudslam.V1.GetActiveMappingSessionsForRobotResponse>(serviceImpl.GetActiveMappingSessionsForRobot));
      serviceBinder.AddMethod(__Method_GetMappingSessionPointCloud, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudRequest, global::Viam.App.Cloudslam.V1.GetMappingSessionPointCloudResponse>(serviceImpl.GetMappingSessionPointCloud));
      serviceBinder.AddMethod(__Method_ListMappingSessions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Cloudslam.V1.ListMappingSessionsRequest, global::Viam.App.Cloudslam.V1.ListMappingSessionsResponse>(serviceImpl.ListMappingSessions));
      serviceBinder.AddMethod(__Method_StopMappingSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Cloudslam.V1.StopMappingSessionRequest, global::Viam.App.Cloudslam.V1.StopMappingSessionResponse>(serviceImpl.StopMappingSession));
      serviceBinder.AddMethod(__Method_GetMappingSessionMetadataByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDRequest, global::Viam.App.Cloudslam.V1.GetMappingSessionMetadataByIDResponse>(serviceImpl.GetMappingSessionMetadataByID));
    }

  }
}
#endregion
